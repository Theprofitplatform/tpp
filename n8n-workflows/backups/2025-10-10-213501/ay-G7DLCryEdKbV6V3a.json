{"createdAt":"2025-09-21T17:06:15.409Z","updatedAt":"2025-09-21T17:11:52.474Z","id":"G7DLCryEdKbV6V3a","name":"Ay","active":false,"isArchived":false,"nodes":[{"parameters":{"content":"# 📑 STEP 5 — Auto-Post to All Platforms\n\n","height":832,"width":1344,"color":4},"id":"f25ad3ec-4b37-42aa-859c-04ca3857d44c","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[1984,592],"typeVersion":1},{"parameters":{},"id":"01fa4418-b859-49b1-b899-1f8505d774f4","name":"Upload Video to BLOTATO","type":"@blotato/n8n-nodes-blotato.blotato","position":[2048,1216],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"9e022ddf-117e-4e8d-9051-696f866dca4f","name":"Youtube","type":"@blotato/n8n-nodes-blotato.blotato","position":[2672,1008],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"0be6bd9a-5347-4ef4-b93d-6e16dbd4efc0","name":"Tiktok","type":"@blotato/n8n-nodes-blotato.blotato","position":[2304,832],"typeVersion":2,"credentials":{}},{"parameters":{"mode":"chooseBranch","numberInputs":9},"id":"1117b435-e30a-4490-8b56-f3a0d374f13e","name":"Merge","type":"n8n-nodes-base.merge","position":[2960,912],"typeVersion":3.2},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"mode":"id","value":"="},"sheetName":{"__rl":true,"mode":"id","value":"="},"columns":{"value":{"STATUS":"Published","IMAGE NAME":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[2].file_unique_id }}"},"schema":[{"id":"IMAGE NAME","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE NAME","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE URL","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE URL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE DESCRIPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE DESCRIPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"CAPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"URL VIDEO FINAL","type":"string","display":true,"removed":true,"required":false,"displayName":"URL VIDEO FINAL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"TITRE VIDEO","type":"string","display":true,"removed":true,"required":false,"displayName":"TITRE VIDEO","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION VIDEO","type":"string","display":true,"removed":true,"required":false,"displayName":"CAPTION VIDEO","defaultMatch":false,"canBeUsedToMatch":true},{"id":"STATUS","type":"string","display":true,"removed":false,"required":false,"displayName":"STATUS","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["IMAGE NAME"],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"bb46a004-c959-4b29-8ad6-5d439a21f476","name":"Update Status to \"DONE\"","type":"n8n-nodes-base.googleSheets","position":[3136,1024],"typeVersion":4.5},{"parameters":{},"id":"b1e5dbc4-095f-44a5-b34d-ac443de1e694","name":"Linkedin","type":"@blotato/n8n-nodes-blotato.blotato","position":[2496,832],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"ffaca994-4ca2-428a-ab9f-c1325f8ed5a2","name":"Facebook","type":"@blotato/n8n-nodes-blotato.blotato","position":[2672,832],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"0b5b7405-77d9-4603-b9a5-b80c68289fea","name":"Instagram","type":"@blotato/n8n-nodes-blotato.blotato","position":[2304,1008],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"2fed06ac-b5f6-4a32-99cc-0a159d928237","name":"Threads","type":"@blotato/n8n-nodes-blotato.blotato","position":[2304,1216],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"5fbbc21f-193b-4e96-9224-cbcb433faa8d","name":"Bluesky","type":"@blotato/n8n-nodes-blotato.blotato","position":[2496,1216],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"cdb283d3-9edd-4843-b586-1c4ab5e357d4","name":"Pinterest","type":"@blotato/n8n-nodes-blotato.blotato","position":[2672,1216],"typeVersion":2,"credentials":{}},{"parameters":{},"id":"58e928cb-2988-4cbd-a26b-ba5d5d98f74b","name":"Twitter (X)","type":"@blotato/n8n-nodes-blotato.blotato","position":[2496,1008],"typeVersion":2,"credentials":{}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"id":"46726cf9-539c-46ce-99b4-cd6e7282410d","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[1504,928],"typeVersion":1.2},{"parameters":{},"id":"e0eb1f6c-e53e-4314-930c-867ac6b7f2b4","name":"Think","type":"@n8n/n8n-nodes-langchain.toolThink","position":[1648,928],"typeVersion":1},{"parameters":{"jsonSchemaExample":"{\n  \"title\": \"string\",\n  \"final_prompt\": \"string\"\n}\n"},"id":"2474f5ee-d053-44b0-83e1-764e20e2edd7","name":"Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[1792,928],"typeVersion":1.3},{"parameters":{"chatId":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.chat.id }}","text":"=Url VIDEO : {{ $('Download Video from VEO3').item.json.data.response.resultUrls[0] }}","additionalFields":{}},"id":"45ade7ea-80b7-4591-bd9a-88e3d80a00c1","name":"Send Video URL via Telegram","type":"n8n-nodes-base.telegram","position":[2032,720],"webhookId":"ea6e5974-1930-4b67-a51b-16249a9ed8bd","typeVersion":1.2},{"parameters":{"operation":"sendVideo","chatId":"={{ $json.result.chat.id }}","file":"={{ $('Save Caption Video to Google Sheets').item.json['URL VIDEO FINAL'] }}","additionalFields":{}},"id":"9e521105-b7ad-4867-957c-850bf568ee93","name":"Send Final Video Preview","type":"n8n-nodes-base.telegram","position":[2048,960],"webhookId":"443fd41d-a051-45bf-ad68-173197dba26b","typeVersion":1.2},{"parameters":{"updates":["message"],"additionalFields":{}},"id":"f9e9f857-8eca-49aa-83cb-a788849c17d3","name":"Telegram Trigger: Receive Video Idea","type":"n8n-nodes-base.telegramTrigger","position":[816,144],"webhookId":"26dbe6f5-5197-4b2b-9e32-8060f2119686","typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"cc2e0500-57b1-4615-82cb-1c950e5f2ec4","name":"json_master","type":"string","value":"={\n  \"description\": \"Brief narrative description of the scene, focusing on key visual storytelling and product transformation.\",\n  \"style\": \"cinematic | photorealistic | stylized | gritty | elegant\",\n  \"camera\": {\n    \"type\": \"fixed | dolly | Steadicam | crane combo\",\n    \"movement\": \"describe any camera moves like slow push-in, pan, orbit\",\n    \"lens\": \"optional lens type or focal length for cinematic effect\"\n  },\n  \"lighting\": {\n    \"type\": \"natural | dramatic | high-contrast\",\n    \"sources\": \"key lighting sources (sunset, halogen, ambient glow...)\",\n    \"FX\": \"optional VFX elements like fog, reflections, flares\"\n  },\n  \"environment\": {\n    \"location\": \"describe location or room (kitchen, desert, basketball court...)\",\n    \"set_pieces\": [\n      \"list of key background or prop elements\",\n      \"e.g. hardwood floors, chain-link fence, velvet surface\"\n    ],\n    \"mood\": \"describe the ambient atmosphere (moody, clean, epic...)\"\n  },\n  \"elements\": [\n    \"main physical items involved (product box, accessories, vehicles...)\",\n    \"include brand visibility (logos, packaging, texture...)\"\n  ],\n  \"subject\": {\n    \"character\": {\n      \"description\": \"optional – physical description, outfit\",\n      \"pose\": \"optional – position or gesture\",\n      \"lip_sync_line\": \"optional – spoken line if there’s a voiceover\"\n    },\n    \"product\": {\n      \"brand\": \"Brand name\",\n      \"model\": \"Product model or name\",\n      \"action\": \"description of product transformation or assembly\"\n    }\n  },\n  \"motion\": {\n    \"type\": \"e.g. transformation, explosion, vortex\",\n    \"details\": \"step-by-step visual flow of how elements move or evolve\"\n  },\n  \"VFX\": {\n    \"transformation\": \"optional – describe style (neon trails, motion blur...)\",\n    \"impact\": \"optional – e.g. shockwave, glow, distortion\",\n    \"particles\": \"optional – embers, sparks, thread strands...\",\n    \"environment\": \"optional – VFX affecting the scene (ripples, wind...)\"\n  },\n  \"audio\": {\n    \"music\": \"optional – cinematic score, trap beat, ambient tone\",\n    \"sfx\": [\n      \"list of sound effects (zip, pop, woosh...)\"\n    ],\n    \"ambience\": \"optional – background soundscape (traffic, wind...)\",\n    \"voiceover\": {\n      \"delivery\": \"tone and style (confident, whisper, deep...)\",\n      \"line\": \"text spoken if applicable\"\n    }\n  },\n  \"ending\": \"Final shot description – what is seen or felt at the end (freeze frame, logo pulse, glow...)\",\n  \"text\": \"none | overlay | tagline | logo pulse at end only\",\n  \"format\": \"16:9 | 4k | vertical\",\n  \"keywords\": [\n    \"brand\",\n    \"scene style\",\n    \"motion type\",\n    \"camera style\",\n    \"sound mood\",\n    \"target theme\"\n  ]\n}\n"}]},"options":{}},"id":"234d3bdf-c8da-4dcb-a823-21dcaca9d8c8","name":"Set Master Prompt","type":"n8n-nodes-base.set","position":[1264,704],"typeVersion":3.4},{"parameters":{"promptType":"define","text":"=Create a UGC-style video prompt using both the reference image and the user description.  \n\n**Inputs**  \n- User description (optional):  \n  `{{ $('Telegram Trigger: Receive Video Idea').item.json.message.caption }}`  \n- Reference image analysis (stay strictly faithful to what’s visible):  \n  `{{ $('Google Sheets: Update Image Description').item.json['IMAGE DESCRIPTION'] }}`  \n\n**Rules**  \n- Keep the style casual, authentic, and realistic. Avoid studio-like or cinematic language.  \n- Default model: `veo3_fast` (unless otherwise specified).  \n- Output only **one JSON object** with the key: `video_prompt`.  \n","hasOutputParser":true,"options":{"systemMessage":"=system_prompt:\n  ## SYSTEM PROMPT: Structured Video Ad Prompt Generator\n  A - Ask:\n    Generate a structured video ad prompt for cinematic generation, strictly based on the master schema provided in: {{ $json.json_master }}.\n    The final result must be a JSON object with exactly two top-level keys: `title` and `final_prompt`.\n\n  G - Guidance:\n    role: Creative Director\n    output_count: 1\n    character_limit: None\n    constraints:\n      - The output must be valid JSON.\n      - The `title` field should contain a short, descriptive and unique title (max 15 words).\n      - The `final_prompt` field must contain a **single-line JSON string** that follows the exact structure of {{ $json.json_master }} with all fields preserved.\n      - Do not include any explanations, markdown, or extra text — only the JSON object.\n      - Escape all inner quotes in the `final_prompt` string so it is valid as a stringified JSON inside another JSON.\n    tool_usage:\n      - Ensure consistent alignment across all fields (camera, lighting, motion, etc.).\n      - Maintain full structure even for optional fields (use \"none\", \"\", or [] as needed).\n\n  N - Notation:\n    format: JSON\n    expected_output:\n      {\n        \"title\": \"A unique short title for the scene\",\n        \"final_prompt\": \"{...stringified JSON of the full prompt...}\"\n      }\n\n"}},"id":"a8d4b353-5f86-45d2-8181-1736d5b1f3c6","name":"AI Agent: Generate Video Script","type":"@n8n/n8n-nodes-langchain.agent","position":[1584,704],"typeVersion":2},{"parameters":{"method":"POST","url":"https://api.kie.ai/api/v1/veo/generate","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"={\n  \"prompt\": {{ $json.prompt }},\n  \"model\": \"{{ $('Google Sheets: Read Video Parameters (CONFIG)').item.json.model }}\",\n  \"aspectRatio\": \"{{ $json.aspectRatio }}\",\n  \"imageUrls\": [\n    \"{{ $('Download Edited Image').item.json.images[0].url }}\"\n  ]\n}","options":{}},"id":"3ca2fb45-0e66-47bf-993e-7203322fcb69","name":"Generate Video with VEO3","type":"n8n-nodes-base.httpRequest","position":[864,1216],"typeVersion":4.2},{"parameters":{"amount":20},"id":"777b821e-eaed-4834-b705-18487b065aeb","name":"Wait for VEO3 Rendering","type":"n8n-nodes-base.wait","position":[1072,1216],"webhookId":"f6d814f3-4eb8-4629-a920-134cfa4ea03b","typeVersion":1.1},{"parameters":{"url":"https://api.kie.ai/api/v1/veo/record-info","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendQuery":true,"queryParameters":{"parameters":[{"name":"taskId","value":"={{ $('Generate Video with VEO3').item.json.data.taskId }}"}]},"options":{}},"id":"c0c1738b-ee0e-40cf-bd8b-aacf800c9d3c","name":"Download Video from VEO3","type":"n8n-nodes-base.httpRequest","position":[1280,1216],"typeVersion":4.2},{"parameters":{"modelId":{"__rl":true,"mode":"list","value":"gpt-4o","cachedResultName":"GPT-4O"},"messages":{"values":[{"content":"=You are rewriting a TikTok video script, caption, and overlay —\nnot inventing a new one. You must follow this format and obey\nthese rules strictly.\n---\n### CONTEXT:\nHere is the content idea to use:{{ $('Telegram Trigger: Receive Video Idea').item.json.message.caption }}\n\nand the Title is : {{ $('AI Agent: Generate Video Script').item.json.output.title }}\n\n\nWrite the caption text using the topic.\n\n---\n- MUST be under 200 characters (yes \"Characters\" not wordcount)\nthis is an absolute MUST, no more than 200 characters!!! \n\n### FINAL OUTPUT FORMAT (no markdown formatting):\n\nDO NOT return any explanations. Only return the Caption Text\n"}]},"options":{}},"id":"4b16d6fc-a2a1-414b-9927-43926b2e2d9b","name":"Rewrite Caption with GPT-4o","type":"@n8n/n8n-nodes-langchain.openAi","position":[1440,1216],"typeVersion":1.8},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"mode":"id","value":"="},"sheetName":{"__rl":true,"mode":"id","value":"="},"columns":{"value":{"STATUS":"CREATE","IMAGE NAME":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[2].file_unique_id }}","TITRE VIDEO":"={{ $('AI Agent: Generate Video Script').item.json.output.title }}","CAPTION VIDEO":"={{ $json.message.content }}","URL VIDEO FINAL":"={{ $('Download Video from VEO3').item.json.data.response.resultUrls[0] }}"},"schema":[{"id":"IMAGE NAME","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE NAME","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE URL","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE URL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE DESCRIPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE DESCRIPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"CAPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"URL VIDEO FINAL","type":"string","display":true,"required":false,"displayName":"URL VIDEO FINAL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"TITRE VIDEO","type":"string","display":true,"required":false,"displayName":"TITRE VIDEO","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION VIDEO","type":"string","display":true,"removed":false,"required":false,"displayName":"CAPTION VIDEO","defaultMatch":false,"canBeUsedToMatch":true},{"id":"STATUS","type":"string","display":true,"required":false,"displayName":"STATUS","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["IMAGE NAME"],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"5d8f0388-68e7-4cd9-baf9-900fdb0d42ed","name":"Save Caption Video to Google Sheets","type":"n8n-nodes-base.googleSheets","position":[1744,1216],"typeVersion":4.6},{"parameters":{"jsCode":"const structuredPrompt = $input.first().json.output.final_prompt;\nreturn {\n  json: {\n    prompt: JSON.stringify(structuredPrompt), // this escapes it correctly!\n    model: \"veo3_fast\",\n    aspectRatio: \"16:9\"\n  }\n};\n"},"id":"5830d38d-2f07-4b98-a81f-4611c7b97610","name":"Format Prompt","type":"n8n-nodes-base.code","position":[864,912],"typeVersion":2},{"parameters":{"content":"# 📑 STEP 3 — Generate Video Ad Script","height":460,"width":1180},"id":"a29ac15c-92f0-4a79-8307-4112b21741b5","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[752,592],"typeVersion":1},{"parameters":{"content":"# 📑 STEP 4 — Generate Video with VEO3","height":320,"width":1180},"id":"75fe92cb-0573-4291-a018-278c9bf4f551","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[752,1104],"typeVersion":1},{"parameters":{"content":"# 📑 STEP 1 — Collect Idea & Image","height":592,"width":1184},"id":"b47ae838-e489-48ff-ac27-936883d1a7d6","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[752,-48],"typeVersion":1},{"parameters":{"content":"# 📑 STEP 2 — Create Image with NanoBanana\n","height":592,"width":1328},"id":"8a419b3b-c556-499b-ad80-4b75a1e531e3","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[1984,-48],"typeVersion":1},{"parameters":{"resource":"file","fileId":"={{ $json.message.photo[2].file_id }}","additionalFields":{}},"id":"4451a6f0-1b15-4dc4-a054-ac8b2fb927f2","name":"Telegram: Get Image File","type":"n8n-nodes-base.telegram","position":[1248,16],"webhookId":"06ceb31d-dcd9-4a9a-bbbe-a7bf7ae0ad4a","typeVersion":1.2},{"parameters":{"name":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[2].file_unique_id }}","driveId":{"__rl":true,"mode":"id","value":"="},"folderId":{"__rl":true,"mode":"id","value":"="},"options":{}},"id":"fe969e41-77ed-41d8-ad23-a9ed7325b411","name":"Google Drive: Upload Image","type":"n8n-nodes-base.googleDrive","position":[1264,208],"typeVersion":3},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"mode":"id","value":"="},"sheetName":{"__rl":true,"mode":"id","value":"="},"columns":{"value":{"STATUS":"EN COURS","CAPTION":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.caption }}","IMAGE URL":"={{ $json.webContentLink }}","IMAGE NAME":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[2].file_unique_id }}"},"schema":[{"id":"IMAGE NAME","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE NAME","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE URL","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE URL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE DESCRIPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE DESCRIPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION","type":"string","display":true,"removed":false,"required":false,"displayName":"CAPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"STATUS","type":"string","display":true,"removed":false,"required":false,"displayName":"STATUS","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["IMAGE NAME"],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"ce806b17-0299-4722-a841-bcce21fbbaa3","name":"Google Sheets: Log Image & Caption","type":"n8n-nodes-base.googleSheets","position":[1264,384],"typeVersion":4.7},{"parameters":{"assignments":{"assignments":[{"id":"af62651a-3fc8-419d-908b-6514f6f4bcb3","name":"YOUR_BOT_TOKEN","type":"string","value":""}]},"options":{}},"id":"9bb4a0d9-e143-4cc8-b5e5-ed16c0274565","name":"Set: Bot Token (Placeholder)","type":"n8n-nodes-base.set","position":[1504,144],"typeVersion":3.4},{"parameters":{"url":"=https://api.telegram.org/bot{{ $json.YOUR_BOT_TOKEN }}/getFile?file_id={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[3].file_id }}","options":{}},"id":"1927075c-f3ed-4210-83fc-e3deef3d917c","name":"Telegram API: Get File URL","type":"n8n-nodes-base.httpRequest","position":[1696,144],"typeVersion":4.2},{"parameters":{"resource":"image","operation":"analyze","modelId":{"__rl":true,"mode":"list","value":"chatgpt-4o-latest","cachedResultName":"CHATGPT-4O-LATEST"},"text":"=You are an image analysis assistant.\n\nYour task is to analyze the given image and output results **only in YAML format**. Do not add explanations, comments, or extra text outside YAML.\n\nRules:\n\n- If the image depicts a **product**, return:\n    \n    ```yaml\n    brand_name: (brand if visible or inferable)\n    color_scheme:\n      - hex: (hex code of each prominent color)\n        name: (descriptive name of the color)\n    font_style: (serif/sans-serif, bold/thin, etc.)\n    visual_description: (1–2 sentences summarizing what is seen, ignoring the background)\n    \n    ```\n    \n- If the image depicts a **character**, return:\n    \n    ```yaml\n    character_name: (name if visible or inferable, else \"unknown\")\n    color_scheme:\n      - hex: (hex code of each prominent color on the character)\n        name: (descriptive name of the color)\n    outfit_style: (clothing style, accessories, or notable features)\n    visual_description: (1–2 sentences summarizing what the character looks like, ignoring the background)\n    \n    ```\n    \n- If the image depicts **both**, return **both sections** in YAML.\n\nOnly output valid YAML. No explanations.","imageUrls":"=https://api.telegram.org/file/bot{{ $('Set: Bot Token (Placeholder)').item.json.YOUR_BOT_TOKEN }}/{{ $json.result.file_path }}","options":{}},"id":"5307611b-b912-4562-8fdc-3de115c1cb56","name":"OpenAI Vision: Analyze Reference Image","type":"@n8n/n8n-nodes-langchain.openAi","position":[2112,144],"typeVersion":1.8},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"mode":"id","value":"="},"sheetName":{"__rl":true,"mode":"id","value":"="},"columns":{"value":{"IMAGE NAME":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.photo[2].file_unique_id }}","IMAGE DESCRIPTION":"={{ $json.content }}"},"schema":[{"id":"IMAGE NAME","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE NAME","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE URL","type":"string","display":true,"removed":true,"required":false,"displayName":"IMAGE URL","defaultMatch":false,"canBeUsedToMatch":true},{"id":"IMAGE DESCRIPTION","type":"string","display":true,"removed":false,"required":false,"displayName":"IMAGE DESCRIPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"CAPTION","type":"string","display":true,"removed":true,"required":false,"displayName":"CAPTION","defaultMatch":false,"canBeUsedToMatch":true},{"id":"STATUS","type":"string","display":true,"removed":true,"required":false,"displayName":"STATUS","defaultMatch":false,"canBeUsedToMatch":true}],"mappingMode":"defineBelow","matchingColumns":["IMAGE NAME"],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"id":"3c9ee484-ee6c-4d67-a151-414d955bf63b","name":"Google Sheets: Update Image Description","type":"n8n-nodes-base.googleSheets","position":[2352,144],"typeVersion":4.7},{"parameters":{"jsonSchemaExample":"{\n\t\"image_prompt\": \"string\"\n}"},"id":"5e0d372d-0e07-44ae-942e-1b039aea9e7e","name":"LLM: Structured Output Parser","type":"@n8n/n8n-nodes-langchain.outputParserStructured","position":[2736,384],"typeVersion":1.3},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"id":"22f3bb9f-967d-4f37-a906-aab6c872d260","name":"LLM: OpenAI Chat","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[2528,384],"typeVersion":1.2},{"parameters":{"promptType":"define","text":"=Your task is to create an image prompt following the system guidelines.  \nEnsure that the reference image is represented as **accurately as possible**, including all text elements.  \n\nUse the following inputs:  \n\n- **User’s description:**  \n{{ $json.CAPTION }}\n\n- **Reference image description:**  \n{{ $json['IMAGE DESCRIPTION'] }}\n","hasOutputParser":true,"options":{"systemMessage":"=ROLE: UGC Image Prompt Builder  \n\nGOAL:  \nGenerate one concise, natural, and realistic image prompt (≤120 words) from a given product or reference image. The prompt must simulate authentic UGC (user-generated content) photography.  \n\nRULES:  \n- Always output **one JSON object only** with the key:  \n  - `image_prompt`: (string with full description)  \n- Do **not** add commentary, metadata, or extra keys. JSON only.  \n\nSTYLE GUIDELINES:  \n- Tone: casual, unstaged, lifelike, handheld snapshot.  \n- Camera cues: include at least 2–3 (e.g., phone snapshot, handheld framing, off-center composition, natural indoor light, soft shadows, slight motion blur, auto exposure, unpolished look, mild grain).  \n- Realism: embrace imperfections (wrinkles, stray hairs, skin texture, clutter, smudges).  \n- Packaging/Text: preserve exactly as visible. Never invent claims, numbers, or badges.  \n- Diversity: if people appear but are unspecified, vary gender/ethnicity naturally; default age range = 21–38.  \n- Setting: default to real-world everyday spaces (home, street, store, gym, office).  \n\nSAFETY:  \n- No copyrighted character names.  \n- No dialogue or scripts. Only describe scenes.  \n\nOUTPUT CONTRACT:  \n- JSON only, no prose outside.  \n- Max 120 words in `image_prompt`.  \n- Must cover: subject, action, mood, setting, style/camera, colors, and text accuracy.  \n\nCHECKLIST BEFORE OUTPUT:  \n- Natural handheld tone?  \n- At least 2 camera cues included?  \n- Product text preserved exactly?  \n- Only JSON returned?  \n\n---  \n\n### Example  \n\nGood Example :  \n```json\n{ \"image_prompt\": \"a young adult casually holding a skincare tube near a bathroom mirror; action: dabs small amount on the back of the hand; mood: easy morning; setting: small apartment bathroom with towel on rack and toothbrush cup; style/camera: phone snapshot, handheld framing, off-center composition, natural window light, slight motion blur, mild grain; colors: soft whites and mint label; text accuracy: keep every word on the tube exactly as visible, no added claims\" }\n"}},"id":"2ac4edca-9f81-4486-8393-93f6f66df0c9","name":"Generate Image Prompt","type":"@n8n/n8n-nodes-langchain.agent","position":[2576,144],"typeVersion":2.2},{"parameters":{"method":"POST","url":"https://queue.fal.run/fal-ai/nano-banana/edit","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","sendBody":true,"specifyBody":"json","jsonBody":"={\n\t\"prompt\": \"{{ $json.output.image_prompt.replace(/\\\"/g, '\\\\\\\"').replace(/\\n/g, '\\\\n') }}\",\n\"image_urls\": [\"{{ $('Google Drive: Upload Image').item.json.webContentLink }}\"]\n\n}\n\n","options":{}},"id":"1f9c7943-a459-448a-b860-0a52bcf3bc2d","name":"NanoBanana: Create Image","type":"n8n-nodes-base.httpRequest","position":[2912,144],"typeVersion":4.2},{"parameters":{"amount":20},"id":"bb5ffac3-237e-4596-8cae-7476a768546a","name":"Wait for Image Edit","type":"n8n-nodes-base.wait","position":[3120,144],"webhookId":"df52d997-45c4-431f-bdf6-89dd25027b5b","typeVersion":1.1},{"parameters":{"url":"={{ $json.response_url }}","authentication":"genericCredentialType","genericAuthType":"httpHeaderAuth","options":{}},"id":"6cd8be74-fcb0-4b72-8991-25248736666d","name":"Download Edited Image","type":"n8n-nodes-base.httpRequest","position":[3120,368],"typeVersion":4.2},{"parameters":{"documentId":{"__rl":true,"mode":"id","value":"="},"sheetName":{"__rl":true,"mode":"id","value":"="},"options":{}},"id":"d3d6585b-4853-43fa-adbc-0c33afe265aa","name":"Google Sheets: Read Video Parameters (CONFIG)","type":"n8n-nodes-base.googleSheets","position":[1056,704],"typeVersion":4.6},{"parameters":{"chatId":"={{ $('Telegram Trigger: Receive Video Idea').item.json.message.chat.id }}","text":"Published","additionalFields":{}},"id":"5a5b1de0-4589-4b55-9795-0e3c98b7a012","name":"Telegram: Send notification","type":"n8n-nodes-base.telegram","position":[3136,1232],"webhookId":"2f4a4bc1-99de-4e93-8523-dd8c6499b893","typeVersion":1.2},{"parameters":{"content":"# 🎬 Generate AI viral videos with NanoBanana & VEO3, shared on socials via Blotato (By Dr. Firas)\n\n\n# 🎥 Full Tutorial :\n[![AI Voice Agent Preview](https://www.dr-firas.com/nanobanana.png)](https://youtu.be/nlwpbXQqNQ4)\n\n---\n\n# 📘 Documentation  \nAccess detailed setup instructions, API config, platform connection guides, and workflow customization tips:\n\n📎 [Open the full documentation on Notion](https://automatisation.notion.site/NonoBanan-2643d6550fd98041aef5dcbe8ab0f7a1?source=copy_link)\n\n---\n\n# ⚙️ Requirements\n\n1. ✅ **Create a [Blotato](https://blotato.com/?ref=firas) account** (Pro plan required for API access)  \n2. 🔑 **Generate your Blotato API Key** via: `Settings > API > Generate API Key`  \n3. 📦 **Enable “Verified Community Nodes”** in the n8n admin settings  \n4. 🧩 **Install the Blotato** verified community node in n8n  \n5. 🛠 **Create a Blotato API credential** inside your n8n credentials tab  \n6. 📄 **Duplicate this [Google Sheet template](https://docs.google.com/spreadsheets/d/1FutmZHblwnk36fp59fnePjONzuJBdndqZOCuRoGWSmY/edit?usp=sharing)**  \n7. ☁️ **Make sure your Google Drive folder is PUBLIC** (anyone with the link can access)  \n8. 📌 **Complete the 3 brown sticky note steps** inside the workflow editor\n\n","height":1476,"width":700,"color":6},"id":"c673f9f7-efa7-4778-9028-5bea600c6206","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[32,-48],"typeVersion":1}],"connections":{"Merge":{"main":[[{"node":"Update Status to \"DONE\"","type":"main","index":0}]]},"Think":{"ai_tool":[[{"node":"AI Agent: Generate Video Script","type":"ai_tool","index":0}]]},"Format Prompt":{"main":[[{"node":"Generate Video with VEO3","type":"main","index":0}]]},"LLM: OpenAI Chat":{"ai_languageModel":[[{"node":"Generate Image Prompt","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent: Generate Video Script","type":"ai_languageModel","index":0}]]},"Set Master Prompt":{"main":[[{"node":"AI Agent: Generate Video Script","type":"main","index":0}]]},"Wait for Image Edit":{"main":[[{"node":"Download Edited Image","type":"main","index":0}]]},"Download Edited Image":{"main":[[{"node":"Google Sheets: Read Video Parameters (CONFIG)","type":"main","index":0}]]},"Generate Image Prompt":{"main":[[{"node":"NanoBanana: Create Image","type":"main","index":0}]]},"Update Status to \"DONE\"":{"main":[[{"node":"Telegram: Send notification","type":"main","index":0}]]},"Wait for VEO3 Rendering":{"main":[[{"node":"Download Video from VEO3","type":"main","index":0}]]},"Download Video from VEO3":{"main":[[{"node":"Rewrite Caption with GPT-4o","type":"main","index":0}]]},"Generate Video with VEO3":{"main":[[{"node":"Wait for VEO3 Rendering","type":"main","index":0}]]},"NanoBanana: Create Image":{"main":[[{"node":"Wait for Image Edit","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent: Generate Video Script","type":"ai_outputParser","index":0}]]},"Telegram: Get Image File":{"main":[[{"node":"Google Drive: Upload Image","type":"main","index":0}]]},"Google Drive: Upload Image":{"main":[[{"node":"Google Sheets: Log Image & Caption","type":"main","index":0}]]},"Telegram API: Get File URL":{"main":[[{"node":"OpenAI Vision: Analyze Reference Image","type":"main","index":0}]]},"Rewrite Caption with GPT-4o":{"main":[[{"node":"Save Caption Video to Google Sheets","type":"main","index":0}]]},"Send Video URL via Telegram":{"main":[[{"node":"Send Final Video Preview","type":"main","index":0}]]},"Set: Bot Token (Placeholder)":{"main":[[{"node":"Telegram API: Get File URL","type":"main","index":0}]]},"LLM: Structured Output Parser":{"ai_outputParser":[[{"node":"Generate Image Prompt","type":"ai_outputParser","index":0}]]},"AI Agent: Generate Video Script":{"main":[[{"node":"Format Prompt","type":"main","index":0}]]},"Google Sheets: Log Image & Caption":{"main":[[{"node":"Set: Bot Token (Placeholder)","type":"main","index":0}]]},"Save Caption Video to Google Sheets":{"main":[[{"node":"Send Video URL via Telegram","type":"main","index":0}]]},"Telegram Trigger: Receive Video Idea":{"main":[[{"node":"Set: Bot Token (Placeholder)","type":"main","index":0},{"node":"Telegram: Get Image File","type":"main","index":0}]]},"OpenAI Vision: Analyze Reference Image":{"main":[[{"node":"Google Sheets: Update Image Description","type":"main","index":0}]]},"Google Sheets: Update Image Description":{"main":[[{"node":"Generate Image Prompt","type":"main","index":0}]]},"Google Sheets: Read Video Parameters (CONFIG)":{"main":[[{"node":"Set Master Prompt","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f655a588-7565-429b-b229-560bda0ee7c3","triggerCount":0,"shared":[{"createdAt":"2025-09-21T17:06:15.409Z","updatedAt":"2025-09-21T17:06:15.409Z","role":"workflow:owner","workflowId":"G7DLCryEdKbV6V3a","projectId":"55VrbeDl3nbECwkj"}],"tags":[]}
