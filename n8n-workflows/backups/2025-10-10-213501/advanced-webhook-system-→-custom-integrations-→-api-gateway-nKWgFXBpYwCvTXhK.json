{"createdAt":"2025-09-05T21:52:55.757Z","updatedAt":"2025-10-04T13:21:26.051Z","id":"nKWgFXBpYwCvTXhK","name":"Advanced Webhook System → Custom Integrations → API Gateway","active":false,"isArchived":false,"nodes":[{"parameters":{"method":"POST","url":"{{ $env.WEBHOOK_URL }}/api/integration","options":{"response":{"response":{"responseFormat":"json"}}}},"id":"integration-webhook","name":"Universal Integration Webhook","type":"n8n-nodes-base.webhook","typeVersion":2,"position":[240,300],"webhookId":"universal-integration"},{"parameters":{"jsCode":"// Universal webhook processor for custom integrations\nconst payload = items[0].json;\nconst headers = items[0].headers || {};\n\n// Extract authentication and source information\nconst apiKey = headers['x-api-key'] || payload.api_key;\nconst source = headers['x-source-system'] || payload.source || 'unknown';\nconst integrationId = headers['x-integration-id'] || payload.integration_id;\nconst eventType = headers['x-event-type'] || payload.event_type || 'generic';\n\n// Validate authentication\nif (!apiKey) {\n  throw new Error('Authentication required: Missing API key');\n}\n\n// Process different integration types\nlet processedPayload = {\n  integration_id: integrationId,\n  source_system: source,\n  event_type: eventType,\n  timestamp: new Date().toISOString(),\n  api_key: apiKey,\n  raw_payload: payload,\n  processed_data: {},\n  routing_info: {\n    target_workflows: [],\n    priority: 'medium',\n    requires_response: false\n  }\n};\n\n// Route based on event type and source\nswitch (eventType.toLowerCase()) {\n  case 'content_request':\n    processedPayload.routing_info.target_workflows = ['content-generation'];\n    processedPayload.routing_info.priority = 'high';\n    processedPayload.processed_data = {\n      content_type: payload.content_type || 'blog_post',\n      topic: payload.topic,\n      keywords: payload.keywords || [],\n      word_count: payload.word_count || 1000,\n      deadline: payload.deadline,\n      client_id: payload.client_id\n    };\n    break;\n    \n  case 'seo_analysis':\n    processedPayload.routing_info.target_workflows = ['seo-optimization'];\n    processedPayload.processed_data = {\n      url: payload.url,\n      target_keywords: payload.target_keywords || [],\n      competitor_urls: payload.competitor_urls || [],\n      analysis_depth: payload.analysis_depth || 'standard'\n    };\n    break;\n    \n  case 'social_publish':\n    processedPayload.routing_info.target_workflows = ['social-publishing'];\n    processedPayload.routing_info.priority = 'high';\n    processedPayload.processed_data = {\n      content_id: payload.content_id,\n      platforms: payload.platforms || ['facebook', 'linkedin', 'twitter'],\n      schedule_time: payload.schedule_time,\n      hashtags: payload.hashtags || []\n    };\n    break;\n    \n  case 'performance_report':\n    processedPayload.routing_info.target_workflows = ['performance-monitoring'];\n    processedPayload.processed_data = {\n      report_type: payload.report_type || 'standard',\n      date_range: payload.date_range || '30d',\n      client_id: payload.client_id,\n      delivery_email: payload.delivery_email\n    };\n    break;\n    \n  case 'competitor_analysis':\n    processedPayload.routing_info.target_workflows = ['competitor-intelligence'];\n    processedPayload.processed_data = {\n      competitor_domain: payload.competitor_domain,\n      analysis_type: payload.analysis_type || 'full',\n      keywords_focus: payload.keywords_focus || []\n    };\n    break;\n    \n  case 'bulk_content':\n    processedPayload.routing_info.target_workflows = ['content-generation'];\n    processedPayload.routing_info.priority = 'high';\n    processedPayload.processed_data = {\n      batch_size: payload.batch_size || 10,\n      content_types: payload.content_types || ['blog_post'],\n      topics: payload.topics || [],\n      client_id: payload.client_id,\n      delivery_timeline: payload.delivery_timeline\n    };\n    break;\n    \n  case 'zapier_trigger':\n    processedPayload.routing_info.target_workflows = ['zapier-integration'];\n    processedPayload.processed_data = {\n      zap_id: payload.zap_id,\n      trigger_data: payload.trigger_data,\n      action_required: payload.action_required\n    };\n    break;\n    \n  case 'webhook_test':\n    processedPayload.routing_info.target_workflows = ['webhook-testing'];\n    processedPayload.routing_info.requires_response = true;\n    processedPayload.processed_data = {\n      test_id: payload.test_id || Date.now().toString(),\n      test_parameters: payload.test_parameters || {}\n    };\n    break;\n    \n  default:\n    processedPayload.routing_info.target_workflows = ['generic-processor'];\n    processedPayload.processed_data = payload;\n}\n\n// Add client context if available\nif (payload.client_id) {\n  processedPayload.client_context = {\n    client_id: payload.client_id,\n    needs_approval: payload.needs_approval || false,\n    billing_reference: payload.billing_reference\n  };\n}\n\nreturn [{ json: processedPayload }];"},"id":"process-integration-payload","name":"Process Integration Payload","type":"n8n-nodes-base.code","typeVersion":2,"position":[460,300]},{"parameters":{"operation":"executeQuery","query":"SELECT integration_id, client_id, api_key, permissions, rate_limit, status FROM api_integrations WHERE api_key = $1 AND status = 'active'","additionalFields":{"values":{"values":["={{ $json.api_key }}"]}},"credentials":{"postgres":{"id":"postgres-credentials","name":"PostgreSQL Database"}}},"id":"validate-integration-auth","name":"Validate Integration Authentication","type":"n8n-nodes-base.postgres","typeVersion":2.4,"position":[680,200]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"auth-check","leftValue":"{{ $('Validate Integration Authentication').all().length }}","rightValue":"0","operator":{"type":"number","operation":"larger"}}],"combinator":"and"}},"id":"check-auth-valid","name":"Check Authentication Valid","type":"n8n-nodes-base.if","typeVersion":2,"position":[680,300]},{"parameters":{"respondWith":"json","responseBody":"{\n  \"status\": \"error\",\n  \"code\": 401,\n  \"message\": \"Unauthorized: Invalid or missing API key\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"request_id\": \"{{ $('Process Integration Payload').item.json.integration_id || 'unknown' }}\"\n}","options":{"responseHeaders":{"entries":[{"name":"Content-Type","value":"application/json"},{"name":"X-RateLimit-Remaining","value":"0"}]}}},"id":"auth-error-response","name":"Return Authentication Error","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[900,400]},{"parameters":{"jsCode":"// Rate limiting and permission validation\nconst integration = $('Validate Integration Authentication').first().json;\nconst payload = $('Process Integration Payload').item.json;\n\n// Check permissions\nconst permissions = JSON.parse(integration.permissions || '[]');\nconst requiredPermission = {\n  'content_request': 'content.create',\n  'seo_analysis': 'seo.analyze', \n  'social_publish': 'social.publish',\n  'performance_report': 'reports.view',\n  'competitor_analysis': 'competitors.analyze',\n  'bulk_content': 'content.bulk',\n  'zapier_trigger': 'integrations.zapier'\n}[payload.event_type] || 'general.access';\n\nconst hasPermission = permissions.includes(requiredPermission) || permissions.includes('admin.full');\n\nif (!hasPermission) {\n  throw new Error(`Insufficient permissions: Required ${requiredPermission}`);\n}\n\n// Rate limiting (simplified)\nconst rateLimit = integration.rate_limit || 100;\nconst now = new Date();\nconst hourlyKey = `${integration.integration_id}_${now.getHours()}`;\n\n// Enhanced payload with validation\nconst validatedPayload = {\n  ...payload,\n  validation: {\n    authenticated: true,\n    integration_id: integration.integration_id,\n    client_id: integration.client_id,\n    permissions: permissions,\n    rate_limit: rateLimit,\n    request_timestamp: now.toISOString()\n  },\n  processing_status: 'validated'\n};\n\nreturn [{ json: validatedPayload }];"},"id":"validate-permissions-rate-limit","name":"Validate Permissions & Rate Limit","type":"n8n-nodes-base.code","typeVersion":2,"position":[900,200]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"content-request-check","leftValue":"{{ $json.event_type }}","rightValue":"content_request","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"route-content-request","name":"Route: Content Request","type":"n8n-nodes-base.if","typeVersion":2,"position":[1120,100]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"seo-check","leftValue":"{{ $('Validate Permissions & Rate Limit').item.json.event_type }}","rightValue":"seo_analysis","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"route-seo-analysis","name":"Route: SEO Analysis","type":"n8n-nodes-base.if","typeVersion":2,"position":[1120,200]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"social-check","leftValue":"{{ $('Validate Permissions & Rate Limit').item.json.event_type }}","rightValue":"social_publish","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"route-social-publish","name":"Route: Social Publishing","type":"n8n-nodes-base.if","typeVersion":2,"position":[1120,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"webhook-test-check","leftValue":"{{ $('Validate Permissions & Rate Limit').item.json.event_type }}","rightValue":"webhook_test","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"route-webhook-test","name":"Route: Webhook Test","type":"n8n-nodes-base.if","typeVersion":2,"position":[1120,400]},{"parameters":{"method":"POST","url":"{{ $env.WEBHOOK_URL }}/content-generation","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"X-Internal-Request","value":"true"},{"name":"X-Integration-ID","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"content_id","value":"{{ Date.now().toString() }}"},{"name":"title","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.topic }}"},{"name":"content_type","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.content_type }}"},{"name":"target_keywords","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.keywords }}"},{"name":"word_count","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.word_count }}"},{"name":"client_id","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}"},{"name":"integration_source","value":"webhook"}]}},"id":"trigger-content-generation","name":"Trigger Content Generation","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1340,100]},{"parameters":{"method":"POST","url":"{{ $env.WEBHOOK_URL }}/seo-optimization","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"X-Internal-Request","value":"true"},{"name":"X-Integration-ID","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"content_id","value":"{{ Date.now().toString() }}"},{"name":"url","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.url }}"},{"name":"target_keywords","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.target_keywords }}"},{"name":"competitor_urls","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.competitor_urls }}"},{"name":"client_id","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}"}]}},"id":"trigger-seo-analysis","name":"Trigger SEO Analysis","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1340,200]},{"parameters":{"method":"POST","url":"{{ $env.WEBHOOK_URL }}/social-publish","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"},{"name":"X-Internal-Request","value":"true"},{"name":"X-Integration-ID","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"content_id","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.content_id }}"},{"name":"platforms","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.platforms }}"},{"name":"schedule_time","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.schedule_time }}"},{"name":"hashtags","value":"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.hashtags }}"},{"name":"client_id","value":"{{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}"}]}},"id":"trigger-social-publishing","name":"Trigger Social Publishing","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1340,300]},{"parameters":{"respondWith":"json","responseBody":"{\n  \"status\": \"success\",\n  \"message\": \"Webhook test successful\",\n  \"test_id\": \"{{ $('Validate Permissions & Rate Limit').item.json.processed_data.test_id }}\",\n  \"integration_id\": \"{{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"test_parameters\": {{ JSON.stringify($('Validate Permissions & Rate Limit').item.json.processed_data.test_parameters) }},\n  \"client_id\": \"{{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}\",\n  \"permissions\": {{ JSON.stringify($('Validate Permissions & Rate Limit').item.json.validation.permissions) }},\n  \"rate_limit\": {{ $('Validate Permissions & Rate Limit').item.json.validation.rate_limit }}\n}","options":{"responseHeaders":{"entries":[{"name":"Content-Type","value":"application/json"},{"name":"X-Test-Success","value":"true"}]}}},"id":"webhook-test-response","name":"Webhook Test Success Response","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1340,400]},{"parameters":{"operation":"insert","schema":{"value":"public"},"table":{"value":"webhook_logs"},"columns":{"mappingMode":"defineBelow","value":{"integration_id":"={{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}","client_id":"={{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}","event_type":"={{ $('Validate Permissions & Rate Limit').item.json.event_type }}","source_system":"={{ $('Validate Permissions & Rate Limit').item.json.source_system }}","payload_data":"={{ JSON.stringify($('Validate Permissions & Rate Limit').item.json.processed_data) }}","status":"processed","response_code":"200","processing_time_ms":"={{ Date.now() - new Date($('Validate Permissions & Rate Limit').item.json.timestamp).getTime() }}","created_at":"=NOW()"}},"credentials":{"postgres":{"id":"postgres-credentials","name":"PostgreSQL Database"}}},"id":"log-webhook-activity","name":"Log Webhook Activity","type":"n8n-nodes-base.postgres","typeVersion":2.4,"position":[1560,200]},{"parameters":{"respondWith":"json","responseBody":"{\n  \"status\": \"success\",\n  \"message\": \"Integration request processed successfully\",\n  \"event_type\": \"{{ $('Validate Permissions & Rate Limit').item.json.event_type }}\",\n  \"integration_id\": \"{{ $('Validate Permissions & Rate Limit').item.json.validation.integration_id }}\",\n  \"client_id\": \"{{ $('Validate Permissions & Rate Limit').item.json.validation.client_id }}\",\n  \"timestamp\": \"{{ new Date().toISOString() }}\",\n  \"processing_time_ms\": {{ Date.now() - new Date($('Validate Permissions & Rate Limit').item.json.timestamp).getTime() }},\n  \"workflow_triggered\": {{ JSON.stringify($('Validate Permissions & Rate Limit').item.json.routing_info.target_workflows) }},\n  \"next_steps\": \"Processing initiated. Check status via dashboard or API.\"\n}","options":{"responseHeaders":{"entries":[{"name":"Content-Type","value":"application/json"},{"name":"X-Request-ID","value":"{{ $('Validate Permissions & Rate Limit').item.json.integration_id || Date.now().toString() }}"},{"name":"X-Processing-Status","value":"initiated"}]}}},"id":"success-response","name":"Return Success Response","type":"n8n-nodes-base.respondToWebhook","typeVersion":1.1,"position":[1560,350]}],"connections":{"Universal Integration Webhook":{"main":[[{"node":"Process Integration Payload","type":"main","index":0}]]},"Process Integration Payload":{"main":[[{"node":"Validate Integration Authentication","type":"main","index":0},{"node":"Check Authentication Valid","type":"main","index":0}]]},"Validate Integration Authentication":{"main":[[{"node":"Check Authentication Valid","type":"main","index":0}]]},"Check Authentication Valid":{"main":[[{"node":"Validate Permissions & Rate Limit","type":"main","index":0}],[{"node":"Return Authentication Error","type":"main","index":0}]]},"Validate Permissions & Rate Limit":{"main":[[{"node":"Route: Content Request","type":"main","index":0},{"node":"Route: SEO Analysis","type":"main","index":0},{"node":"Route: Social Publishing","type":"main","index":0},{"node":"Route: Webhook Test","type":"main","index":0}]]},"Route: Content Request":{"main":[[{"node":"Trigger Content Generation","type":"main","index":0}],[]]},"Route: SEO Analysis":{"main":[[{"node":"Trigger SEO Analysis","type":"main","index":0}],[]]},"Route: Social Publishing":{"main":[[{"node":"Trigger Social Publishing","type":"main","index":0}],[]]},"Route: Webhook Test":{"main":[[{"node":"Webhook Test Success Response","type":"main","index":0}],[{"node":"Log Webhook Activity","type":"main","index":0}]]},"Trigger Content Generation":{"main":[[{"node":"Log Webhook Activity","type":"main","index":0}]]},"Trigger SEO Analysis":{"main":[[{"node":"Log Webhook Activity","type":"main","index":0}]]},"Trigger Social Publishing":{"main":[[{"node":"Log Webhook Activity","type":"main","index":0}]]},"Log Webhook Activity":{"main":[[{"node":"Return Success Response","type":"main","index":0}]]}},"settings":{},"staticData":{},"meta":null,"pinData":null,"versionId":"59cfa83b-3810-4833-aa7a-6407a4485bdc","triggerCount":1,"shared":[{"createdAt":"2025-09-05T21:52:55.757Z","updatedAt":"2025-09-05T21:52:55.757Z","role":"workflow:owner","workflowId":"nKWgFXBpYwCvTXhK","projectId":"55VrbeDl3nbECwkj"}],"tags":[]}
