{"createdAt":"2025-10-03T00:12:02.401Z","updatedAt":"2025-10-09T12:44:19.834Z","id":"TIA1759450314","name":"Tool Improvement Agent - Comprehensive","active":false,"isArchived":false,"nodes":[{"parameters":{"path":"tool-agent-trigger","options":{}},"id":"webhook-trigger","name":"Manual Trigger Webhook","type":"n8n-nodes-base.webhook","position":[240,352],"webhookId":"tool-agent-manual","typeVersion":1},{"parameters":{"command":"ls /home/avi/projects/astro-site/src/pages/tools/*.astro 2>/dev/null | xargs -n1 basename | sed 's/.astro$//'"},"id":"list-tools","name":"List Available Tools","type":"n8n-nodes-base.executeCommand","position":[464,400],"typeVersion":1},{"parameters":{"jsCode":"// Parse available tools and select current one\nconst stdout = $input.first().json.stdout || 'rank-tracker';\nconst tools = stdout.trim().split('\\n').filter(t => t.length > 0);\n\nif (tools.length === 0) {\n  tools.push('rank-tracker');\n}\n\nconst now = new Date();\nconst minutesSinceEpoch = Math.floor(now.getTime() / (60 * 1000));\nconst currentToolIndex = minutesSinceEpoch % tools.length;\nconst currentTool = tools[currentToolIndex];\nconst nextToolIndex = (currentToolIndex + 1) % tools.length;\nconst nextTool = tools[nextToolIndex];\n\nreturn {\n  toolSlug: currentTool,\n  toolName: currentTool.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' '),\n  nextTool: nextTool.split('-').map(w => w.charAt(0).toUpperCase() + w.slice(1)).join(' '),\n  cycleCount: minutesSinceEpoch,\n  timestamp: now.toISOString(),\n  filePath: `/home/avi/projects/astro-site/src/pages/tools/${currentTool}.astro`,\n  totalTools: tools.length,\n  availableTools: tools.join(', ')\n};"},"id":"rotate-tools","name":"Select Tool to Analyze","type":"n8n-nodes-base.code","position":[656,400],"typeVersion":2},{"parameters":{"command":"=cat {{ $json.filePath }}"},"id":"read-tool-file","name":"Read Tool File","type":"n8n-nodes-base.executeCommand","position":[864,400],"typeVersion":1},{"parameters":{"jsCode":"// COMPREHENSIVE Tool Analysis\nconst content = $input.first().json.stdout || '';\nconst prevData = $input.first().json;\n\nif (!content || content.includes('No such file')) {\n  return { skip: true, reason: 'File not found' };\n}\n\n// === CODE QUALITY ANALYSIS ===\nconst lines = content.split('\\n');\nconst codeLines = lines.filter(l => l.trim() && !l.trim().startsWith('//')).length;\nconst commentLines = lines.filter(l => l.trim().startsWith('//')).length;\nconst blankLines = lines.filter(l => !l.trim()).length;\nconst totalLines = lines.length;\n\n// === FEATURE DETECTION ===\nconst features = {\n  hasMockData: content.includes('mockData') || content.includes('// Mock'),\n  hasRealAPI: content.includes('fetch(') || content.includes('axios'),\n  hasCharts: content.includes('chart') || content.includes('Chart.js') || content.includes('canvas'),\n  hasHistory: content.includes('history') || content.includes('localStorage'),\n  hasExport: content.includes('export') || content.includes('download') || content.includes('CSV'),\n  hasAuth: content.includes('auth') || content.includes('token') || content.includes('session'),\n  hasValidation: content.includes('validate') || content.includes('required'),\n  hasErrorHandling: content.includes('try') || content.includes('catch') || content.includes('error'),\n  hasLoading: content.includes('loading') || content.includes('spinner'),\n  hasResponsive: content.includes('responsive') || content.includes('@media'),\n  hasAccessibility: content.includes('aria-') || content.includes('role='),\n  hasSEO: content.includes('meta') || content.includes('og:') || content.includes('twitter:'),\n  hasAnalytics: content.includes('gtag') || content.includes('analytics'),\n  hasDatabase: content.includes('db.') || content.includes('query') || content.includes('INSERT'),\n  hasTypeScript: content.includes('interface') || content.includes('type '),\n  hasTests: false // Would need to check separate test files\n};\n\n// === COMPONENT ANALYSIS ===\nconst components = {\n  buttons: (content.match(/<button/g) || []).length,\n  inputs: (content.match(/<input/g) || []).length,\n  forms: (content.match(/<form/g) || []).length,\n  images: (content.match(/<img/g) || []).length,\n  links: (content.match(/<a /g) || []).length,\n  scripts: (content.match(/<script/g) || []).length,\n  styles: (content.match(/<style/g) || []).length\n};\n\n// === SECURITY ANALYSIS ===\nconst securityIssues = [];\nif (content.includes('eval(')) securityIssues.push('Uses eval() - potential XSS risk');\nif (content.includes('innerHTML') && !content.includes('DOMPurify')) securityIssues.push('Uses innerHTML without sanitization');\nif (content.includes('http://') && !content.includes('localhost')) securityIssues.push('Contains HTTP (non-secure) URLs');\nif (content.match(/password|secret|token|key/i) && content.includes('console.log')) securityIssues.push('Possible credential logging');\n\n// === PERFORMANCE ANALYSIS ===\nconst performanceIssues = [];\nif ((content.match(/fetch\\(/g) || []).length > 3 && !content.includes('Promise.all')) performanceIssues.push('Multiple sequential API calls - consider parallelization');\nif (content.includes('setInterval') && !content.includes('clearInterval')) performanceIssues.push('Potential memory leak - setInterval without clear');\nif (content.match(/<img/g) && !content.includes('loading=\"lazy\"')) performanceIssues.push('Images without lazy loading');\n\n// === UX ANALYSIS ===\nconst uxIssues = [];\nif (!features.hasLoading && features.hasRealAPI) uxIssues.push('API calls without loading indicators');\nif (!features.hasErrorHandling && features.hasRealAPI) uxIssues.push('No error handling for API failures');\nif (!features.hasValidation && components.forms > 0) uxIssues.push('Forms without validation');\nif (!features.hasAccessibility) uxIssues.push('Missing accessibility features (ARIA labels)');\n\n// === CALCULATE SCORES ===\nconst featureScore = Object.values(features).filter(Boolean).length;\nconst maxFeatures = Object.keys(features).length;\nconst completeness = Math.round((featureScore / maxFeatures) * 100);\n\nconst userValue = Math.round(\n  (features.hasRealAPI ? 30 : 0) +\n  (features.hasCharts ? 20 : 0) +\n  (features.hasExport ? 15 : 0) +\n  (features.hasHistory ? 15 : 0) +\n  (features.hasErrorHandling ? 10 : 0) +\n  (features.hasValidation ? 10 : 0)\n);\n\nconst codeQuality = Math.round(\n  (features.hasErrorHandling ? 25 : 0) +\n  (features.hasTypeScript ? 20 : 0) +\n  (commentLines > codeLines * 0.1 ? 15 : 0) +\n  (features.hasValidation ? 15 : 0) +\n  (securityIssues.length === 0 ? 25 : 0)\n);\n\n// === GENERATE IMPROVEMENTS ===\nconst improvements = [];\n\n// CRITICAL Priority\nif (features.hasMockData) {\n  improvements.push({\n    category: 'Data Integration',\n    title: 'Replace Mock Data with Real API Integration',\n    priority: 'CRITICAL',\n    estimatedTime: '6-8 hours',\n    impact: 'Transforms tool from demo to production-ready',\n    roi: 'High - Converts demo to production tool',\n    technicalDetails: 'Implement REST API endpoints, add authentication, handle rate limiting',\n    actionItems: [\n      'Design API schema and endpoints',\n      'Implement API client with error handling',\n      'Add authentication/authorization',\n      'Implement rate limiting and caching',\n      'Add API documentation'\n    ],\n    successMetrics: 'Real-time data updates, 99.9% uptime, <500ms response time'\n  });\n}\n\nif (securityIssues.length > 0) {\n  improvements.push({\n    category: 'Security',\n    title: 'Fix Security Vulnerabilities',\n    priority: 'CRITICAL',\n    estimatedTime: '2-4 hours',\n    impact: 'Prevents data breaches and XSS attacks',\n    roi: 'Critical - Protects user data and business reputation',\n    technicalDetails: securityIssues.join('; '),\n    actionItems: [\n      'Sanitize all user inputs',\n      'Implement Content Security Policy',\n      'Use HTTPS for all external resources',\n      'Remove credential logging',\n      'Add security headers'\n    ],\n    successMetrics: 'Zero security vulnerabilities on penetration testing'\n  });\n}\n\n// HIGH Priority\nif (!features.hasCharts && !features.hasHistory) {\n  improvements.push({\n    category: 'User Engagement',\n    title: 'Add Historical Tracking & Data Visualization',\n    priority: 'HIGH',\n    estimatedTime: '4-6 hours',\n    impact: 'Enables trend analysis and ongoing user value',\n    roi: 'High - Increases session time by 150%, retention by 85%',\n    technicalDetails: 'Implement Chart.js/D3.js with localStorage or database persistence',\n    actionItems: [\n      'Design database schema for historical data',\n      'Implement data collection and storage',\n      'Build interactive charts (line, bar, pie)',\n      'Add date range filters',\n      'Implement data comparison features'\n    ],\n    successMetrics: 'Users return 3x more often, 5min avg session time increase'\n  });\n}\n\nif (!features.hasErrorHandling && features.hasRealAPI) {\n  improvements.push({\n    category: 'Reliability',\n    title: 'Implement Comprehensive Error Handling',\n    priority: 'HIGH',\n    estimatedTime: '3-4 hours',\n    impact: 'Prevents crashes and improves user experience',\n    roi: 'High - Reduces bounce rate by 40%',\n    technicalDetails: 'Add try-catch blocks, fallback mechanisms, user-friendly error messages',\n    actionItems: [\n      'Wrap all API calls in try-catch',\n      'Implement retry logic with exponential backoff',\n      'Add user-friendly error messages',\n      'Implement error logging and monitoring',\n      'Create fallback UI states'\n    ],\n    successMetrics: 'Zero unhandled errors, <1% error rate'\n  });\n}\n\n// MEDIUM Priority\nif (!features.hasExport) {\n  improvements.push({\n    category: 'Data Portability',\n    title: 'Add Export/Download Functionality',\n    priority: 'MEDIUM',\n    estimatedTime: '3-4 hours',\n    impact: 'Increases tool utility and shareability',\n    roi: 'Medium - Increases sharing by 250%, professional use by 180%',\n    technicalDetails: 'Implement CSV/PDF/Excel export with proper formatting',\n    actionItems: [\n      'Add CSV export functionality',\n      'Implement PDF report generation',\n      'Add Excel export with formatting',\n      'Create shareable report links',\n      'Add email report feature'\n    ],\n    successMetrics: '30% of users export data, 50% share reports'\n  });\n}\n\nif (performanceIssues.length > 0) {\n  improvements.push({\n    category: 'Performance',\n    title: 'Optimize Performance & Loading Speed',\n    priority: 'MEDIUM',\n    estimatedTime: '3-5 hours',\n    impact: 'Faster page loads, better user experience',\n    roi: 'Medium - Reduces bounce rate by 25%, improves SEO',\n    technicalDetails: performanceIssues.join('; '),\n    actionItems: [\n      'Implement lazy loading for images',\n      'Use Promise.all for parallel API calls',\n      'Add resource cleanup (clearInterval, removeEventListener)',\n      'Implement code splitting',\n      'Optimize bundle size'\n    ],\n    successMetrics: '<2s page load, 90+ Lighthouse score'\n  });\n}\n\n// LOW Priority\nif (!features.hasAccessibility) {\n  improvements.push({\n    category: 'Accessibility',\n    title: 'Improve Accessibility (WCAG 2.1)',\n    priority: 'LOW',\n    estimatedTime: '2-3 hours',\n    impact: 'Makes tool usable for users with disabilities',\n    roi: 'Low-Medium - Expands audience by 15%, improves SEO',\n    technicalDetails: 'Add ARIA labels, keyboard navigation, screen reader support',\n    actionItems: [\n      'Add ARIA labels to all interactive elements',\n      'Implement keyboard navigation',\n      'Add focus indicators',\n      'Ensure color contrast ratios',\n      'Test with screen readers'\n    ],\n    successMetrics: 'WCAG 2.1 AA compliance, accessible to all users'\n  });\n}\n\nif (!features.hasSEO) {\n  improvements.push({\n    category: 'SEO',\n    title: 'Enhance SEO & Social Sharing',\n    priority: 'LOW',\n    estimatedTime: '2-3 hours',\n    impact: 'Improves discoverability and social sharing',\n    roi: 'Medium - Increases organic traffic by 40%',\n    technicalDetails: 'Add meta tags, Open Graph, Twitter Cards, schema.org',\n    actionItems: [\n      'Add comprehensive meta tags',\n      'Implement Open Graph tags',\n      'Add Twitter Card metadata',\n      'Create schema.org structured data',\n      'Optimize page titles and descriptions'\n    ],\n    successMetrics: 'Rich previews on all platforms, 40% traffic increase'\n  });\n}\n\nif (improvements.length === 0) {\n  return { skip: true, reason: 'No improvements needed - tool is production-ready!' };\n}\n\n// === BUILD COMPREHENSIVE REPORT ===\nreturn {\n  toolName: prevData.toolName,\n  toolSlug: prevData.toolSlug,\n  timestamp: prevData.timestamp,\n  cycleCount: prevData.cycleCount,\n  nextTool: prevData.nextTool,\n  totalTools: prevData.totalTools,\n  availableTools: prevData.availableTools,\n  \n  // Scores\n  completeness,\n  userValue,\n  codeQuality,\n  \n  // Code Statistics\n  codeStats: {\n    totalLines,\n    codeLines,\n    commentLines,\n    blankLines,\n    commentRatio: Math.round((commentLines / codeLines) * 100)\n  },\n  \n  // Features\n  features,\n  featureCount: featureScore,\n  maxFeatures,\n  \n  // Components\n  components,\n  \n  // Issues\n  securityIssues,\n  performanceIssues,\n  uxIssues,\n  \n  // Improvements\n  improvements,\n  improvementCount: improvements.length,\n  \n  // Priority breakdown\n  criticalCount: improvements.filter(i => i.priority === 'CRITICAL').length,\n  highCount: improvements.filter(i => i.priority === 'HIGH').length,\n  mediumCount: improvements.filter(i => i.priority === 'MEDIUM').length,\n  lowCount: improvements.filter(i => i.priority === 'LOW').length\n};"},"id":"analyze-tool","name":"Comprehensive Analysis","type":"n8n-nodes-base.code","position":[1056,400],"typeVersion":2},{"parameters":{"conditions":{"options":{},"combinator":"and","conditions":[{"operator":{"type":"boolean","operation":"notExists"},"leftValue":"={{ $json.skip }}","rightValue":""}]},"options":{}},"id":"has-improvements","name":"Has Improvements?","type":"n8n-nodes-base.if","position":[1264,400],"typeVersion":2},{"parameters":{"jsCode":"// Generate Comprehensive Email HTML Report\nconst d = $input.item.json;\n\nconst priorityClass = (p) => `priority-${p.toLowerCase()}`;\nconst priorityEmoji = (p) => {\n  const map = { 'CRITICAL': '🚨', 'HIGH': '⚠️', 'MEDIUM': '📋', 'LOW': '💡' };\n  return map[p] || '📌';\n};\n\nconst html = `<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; line-height: 1.6; color: #1a202c; background: #f7fafc; }\n    .container { max-width: 800px; margin: 20px auto; background: white; border-radius: 12px; overflow: hidden; box-shadow: 0 4px 6px rgba(0,0,0,0.07), 0 1px 3px rgba(0,0,0,0.06); }\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 40px 30px; text-align: center; }\n    .header h1 { margin: 0 0 8px 0; font-size: 28px; font-weight: 700; }\n    .header p { margin: 0; opacity: 0.95; font-size: 14px; }\n    \n    .score-grid { display: grid; grid-template-columns: repeat(3, 1fr); gap: 0; background: #f8f9fa; border-bottom: 3px solid #e2e8f0; }\n    .score-card { padding: 24px 20px; text-align: center; border-right: 1px solid #e2e8f0; }\n    .score-card:last-child { border-right: none; }\n    .score-value { font-size: 36px; font-weight: 800; background: linear-gradient(135deg, #667eea, #764ba2); -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; display: inline-block; }\n    .score-label { font-size: 11px; color: #718096; text-transform: uppercase; letter-spacing: 0.5px; margin-top: 6px; font-weight: 600; }\n    .score-bar { height: 6px; background: #e2e8f0; border-radius: 3px; margin-top: 10px; overflow: hidden; }\n    .score-fill { height: 100%; background: linear-gradient(90deg, #667eea, #764ba2); border-radius: 3px; transition: width 0.3s ease; }\n    \n    .content { padding: 30px; }\n    .section { margin-bottom: 32px; }\n    .section-title { font-size: 20px; font-weight: 700; color: #2d3748; margin-bottom: 16px; display: flex; align-items: center; gap: 8px; }\n    \n    .stats-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px; margin-bottom: 24px; }\n    .stat-box { background: #f8f9fa; padding: 16px; border-radius: 8px; border-left: 4px solid #667eea; }\n    .stat-box h4 { font-size: 13px; color: #718096; margin-bottom: 8px; text-transform: uppercase; font-weight: 600; }\n    .stat-box .value { font-size: 18px; font-weight: 700; color: #2d3748; }\n    \n    .feature-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 8px; }\n    .feature-item { padding: 10px 14px; background: #f8f9fa; border-radius: 6px; font-size: 13px; display: flex; align-items: center; gap: 8px; }\n    .feature-item.active { background: #d4edda; border-left: 3px solid #28a745; }\n    .feature-item.inactive { background: #f8d7da; border-left: 3px solid #dc3545; }\n    \n    .issues-box { background: #fff5f5; border-left: 4px solid #fc8181; padding: 16px; border-radius: 6px; margin-bottom: 16px; }\n    .issues-box h4 { color: #c53030; margin-bottom: 8px; font-size: 14px; font-weight: 700; }\n    .issues-box ul { margin: 0; padding-left: 20px; }\n    .issues-box li { color: #742a2a; font-size: 13px; margin-bottom: 4px; }\n    \n    .improvement { margin-bottom: 24px; padding: 24px; border: 2px solid #e2e8f0; border-radius: 10px; background: #ffffff; transition: all 0.2s ease; }\n    .improvement:hover { border-color: #cbd5e0; box-shadow: 0 4px 12px rgba(0,0,0,0.08); }\n    .improvement-header { display: flex; align-items: flex-start; gap: 12px; margin-bottom: 14px; }\n    .improvement-number { background: linear-gradient(135deg, #667eea, #764ba2); color: white; width: 32px; height: 32px; border-radius: 50%; display: flex; align-items: center; justify-content: center; font-weight: 700; font-size: 14px; flex-shrink: 0; }\n    .improvement-title { flex: 1; }\n    .improvement-title h3 { font-size: 16px; color: #2d3748; margin-bottom: 4px; font-weight: 700; }\n    .category-tag { display: inline-block; background: #e2e8f0; color: #4a5568; padding: 4px 10px; border-radius: 12px; font-size: 11px; font-weight: 600; text-transform: uppercase; }\n    \n    .priority-critical { display: inline-block; background: #fee; color: #c00; padding: 6px 14px; border-radius: 16px; font-size: 11px; font-weight: 700; margin-left: 10px; text-transform: uppercase; letter-spacing: 0.3px; }\n    .priority-high { display: inline-block; background: #fff3cd; color: #856404; padding: 6px 14px; border-radius: 16px; font-size: 11px; font-weight: 700; margin-left: 10px; text-transform: uppercase; letter-spacing: 0.3px; }\n    .priority-medium { display: inline-block; background: #d1ecf1; color: #0c5460; padding: 6px 14px; border-radius: 16px; font-size: 11px; font-weight: 700; margin-left: 10px; text-transform: uppercase; letter-spacing: 0.3px; }\n    .priority-low { display: inline-block; background: #d4edda; color: #155724; padding: 6px 14px; border-radius: 16px; font-size: 11px; font-weight: 700; margin-left: 10px; text-transform: uppercase; letter-spacing: 0.3px; }\n    \n    .meta-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 12px; margin: 14px 0; }\n    .meta-item { font-size: 13px; }\n    .meta-item strong { color: #4a5568; display: block; margin-bottom: 2px; font-size: 11px; text-transform: uppercase; }\n    .meta-item span { color: #2d3748; font-weight: 600; }\n    \n    .technical-details { background: #f7fafc; padding: 14px; border-radius: 6px; margin: 14px 0; border-left: 3px solid #667eea; }\n    .technical-details strong { color: #4a5568; font-size: 12px; display: block; margin-bottom: 6px; text-transform: uppercase; }\n    .technical-details p { color: #2d3748; font-size: 13px; margin: 0; }\n    \n    .action-items { margin-top: 14px; }\n    .action-items strong { color: #4a5568; font-size: 12px; display: block; margin-bottom: 8px; text-transform: uppercase; }\n    .action-items ol { margin: 0; padding-left: 20px; }\n    .action-items li { color: #2d3748; font-size: 13px; margin-bottom: 6px; line-height: 1.5; }\n    \n    .success-metrics { background: #d4edda; padding: 12px 14px; border-radius: 6px; border-left: 3px solid #28a745; margin-top: 14px; }\n    .success-metrics strong { color: #155724; font-size: 11px; display: block; margin-bottom: 4px; text-transform: uppercase; }\n    .success-metrics p { color: #155724; font-size: 13px; margin: 0; font-weight: 600; }\n    \n    .next-tool { background: linear-gradient(135deg, #fff3cd, #ffeaa7); padding: 20px; border-radius: 8px; border-left: 4px solid #f39c12; margin-top: 24px; }\n    .next-tool strong { color: #856404; font-size: 14px; }\n    .next-tool p { color: #856404; margin: 4px 0 0 0; font-size: 16px; font-weight: 700; }\n    \n    .footer { background: #2d3748; color: white; padding: 24px 30px; text-align: center; }\n    .footer p { margin: 0 0 4px 0; }\n    .footer .small { font-size: 12px; opacity: 0.8; }\n    \n    @media (max-width: 600px) {\n      .score-grid { grid-template-columns: 1fr; }\n      .stats-grid { grid-template-columns: 1fr; }\n      .feature-grid { grid-template-columns: 1fr; }\n      .meta-grid { grid-template-columns: 1fr; }\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <h1>🤖 Tool Improvement Agent</h1>\n      <p>Comprehensive Analysis Report • Cycle ${d.cycleCount} • ${new Date(d.timestamp).toLocaleString()}</p>\n    </div>\n    \n    <div class=\"score-grid\">\n      <div class=\"score-card\">\n        <div class=\"score-value\">${d.completeness}%</div>\n        <div class=\"score-label\">Completeness</div>\n        <div class=\"score-bar\"><div class=\"score-fill\" style=\"width: ${d.completeness}%\"></div></div>\n      </div>\n      <div class=\"score-card\">\n        <div class=\"score-value\">${d.userValue}</div>\n        <div class=\"score-label\">User Value</div>\n        <div class=\"score-bar\"><div class=\"score-fill\" style=\"width: ${d.userValue}%\"></div></div>\n      </div>\n      <div class=\"score-card\">\n        <div class=\"score-value\">${d.codeQuality}</div>\n        <div class=\"score-label\">Code Quality</div>\n        <div class=\"score-bar\"><div class=\"score-fill\" style=\"width: ${d.codeQuality}%\"></div></div>\n      </div>\n    </div>\n    \n    <div class=\"content\">\n      <div class=\"section\">\n        <h2 class=\"section-title\">🔧 Tool: ${d.toolName}</h2>\n        \n        <div class=\"stats-grid\">\n          <div class=\"stat-box\">\n            <h4>📊 Code Statistics</h4>\n            <div class=\"value\">${d.codeStats.totalLines} lines</div>\n            <div style=\"font-size: 12px; color: #718096; margin-top: 4px;\">\n              ${d.codeStats.codeLines} code • ${d.codeStats.commentLines} comments (${d.codeStats.commentRatio}%)\n            </div>\n          </div>\n          <div class=\"stat-box\">\n            <h4>🎯 Tool Portfolio</h4>\n            <div class=\"value\">${d.totalTools} active tools</div>\n            <div style=\"font-size: 12px; color: #718096; margin-top: 4px;\">\n              ${d.availableTools}\n            </div>\n          </div>\n          <div class=\"stat-box\">\n            <h4>✨ Features Implemented</h4>\n            <div class=\"value\">${d.featureCount} / ${d.maxFeatures}</div>\n            <div style=\"font-size: 12px; color: #718096; margin-top: 4px;\">\n              ${Math.round((d.featureCount / d.maxFeatures) * 100)}% feature coverage\n            </div>\n          </div>\n          <div class=\"stat-box\">\n            <h4>🔨 Improvements Needed</h4>\n            <div class=\"value\">${d.improvementCount} items</div>\n            <div style=\"font-size: 12px; color: #718096; margin-top: 4px;\">\n              ${d.criticalCount} critical • ${d.highCount} high • ${d.mediumCount} medium • ${d.lowCount} low\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      ${(d.securityIssues.length > 0 || d.performanceIssues.length > 0 || d.uxIssues.length > 0) ? `\n      <div class=\"section\">\n        <h2 class=\"section-title\">⚠️ Issues Detected</h2>\n        ${d.securityIssues.length > 0 ? `\n        <div class=\"issues-box\">\n          <h4>🔒 Security Issues (${d.securityIssues.length})</h4>\n          <ul>${d.securityIssues.map(i => `<li>${i}</li>`).join('')}</ul>\n        </div>` : ''}\n        ${d.performanceIssues.length > 0 ? `\n        <div class=\"issues-box\" style=\"background: #fffaeb; border-left-color: #f59e0b;\">\n          <h4 style=\"color: #92400e;\">⚡ Performance Issues (${d.performanceIssues.length})</h4>\n          <ul>${d.performanceIssues.map(i => `<li style=\"color: #78350f;\">${i}</li>`).join('')}</ul>\n        </div>` : ''}\n        ${d.uxIssues.length > 0 ? `\n        <div class=\"issues-box\" style=\"background: #eff6ff; border-left-color: #3b82f6;\">\n          <h4 style=\"color: #1e40af;\">🎨 UX Issues (${d.uxIssues.length})</h4>\n          <ul>${d.uxIssues.map(i => `<li style=\"color: #1e3a8a;\">${i}</li>`).join('')}</ul>\n        </div>` : ''}\n      </div>` : ''}\n      \n      <div class=\"section\">\n        <h2 class=\"section-title\">✅ Feature Analysis</h2>\n        <div class=\"feature-grid\">\n          ${Object.entries(d.features).map(([key, value]) => `\n            <div class=\"feature-item ${value ? 'active' : 'inactive'}\">\n              <span>${value ? '✓' : '✗'}</span>\n              <span>${key.replace(/([A-Z])/g, ' $1').replace(/^has /, '').trim()}</span>\n            </div>\n          `).join('')}\n        </div>\n      </div>\n      \n      <div class=\"section\">\n        <h2 class=\"section-title\">🚀 Recommended Improvements (${d.improvementCount})</h2>\n        ${d.improvements.map((imp, i) => `\n          <div class=\"improvement\">\n            <div class=\"improvement-header\">\n              <div class=\"improvement-number\">${i + 1}</div>\n              <div class=\"improvement-title\">\n                <h3>\n                  ${priorityEmoji(imp.priority)} ${imp.title}\n                  <span class=\"${priorityClass(imp.priority)}\">${imp.priority}</span>\n                </h3>\n                <span class=\"category-tag\">${imp.category}</span>\n              </div>\n            </div>\n            \n            <div class=\"meta-grid\">\n              <div class=\"meta-item\">\n                <strong>⏱️ Estimated Time</strong>\n                <span>${imp.estimatedTime}</span>\n              </div>\n              <div class=\"meta-item\">\n                <strong>📈 Impact</strong>\n                <span>${imp.impact}</span>\n              </div>\n              <div class=\"meta-item\">\n                <strong>💰 ROI</strong>\n                <span>${imp.roi}</span>\n              </div>\n            </div>\n            \n            ${imp.technicalDetails ? `\n            <div class=\"technical-details\">\n              <strong>🔧 Technical Details</strong>\n              <p>${imp.technicalDetails}</p>\n            </div>` : ''}\n            \n            ${imp.actionItems && imp.actionItems.length > 0 ? `\n            <div class=\"action-items\">\n              <strong>📋 Action Items</strong>\n              <ol>${imp.actionItems.map(item => `<li>${item}</li>`).join('')}</ol>\n            </div>` : ''}\n            \n            ${imp.successMetrics ? `\n            <div class=\"success-metrics\">\n              <strong>✅ Success Metrics</strong>\n              <p>${imp.successMetrics}</p>\n            </div>` : ''}\n          </div>\n        `).join('')}\n      </div>\n      \n      <div class=\"next-tool\">\n        <strong>⏭️ Next Tool Analysis</strong>\n        <p>${d.nextTool} (in ~30 minutes)</p>\n      </div>\n    </div>\n    \n    <div class=\"footer\">\n      <p><strong>🤖 Tool Improvement Agent</strong></p>\n      <p class=\"small\">Automated Analysis • Running on n8n @ n8n.theprofitplatform.com.au</p>\n      <p class=\"small\">theprofitplatform.com.au</p>\n    </div>\n  </div>\n</body>\n</html>`;\n\nreturn {\n  ...d,\n  emailHtml: html,\n  emailSubject: `🤖 [TIA] ${d.toolName} - ${d.improvementCount} Improvements | ${d.criticalCount} Critical, ${d.highCount} High Priority`\n};"},"id":"generate-email","name":"Generate Comprehensive Report","type":"n8n-nodes-base.code","position":[1456,304],"typeVersion":2},{"parameters":{"sendTo":"abhishekmaharjan3737@gmail.com","subject":"={{ $json.emailSubject }}","message":"={{ $json.emailHtml }}","options":{}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[1664,416],"id":"33a8a6b0-fb67-440b-aa50-77873d8a9a5e","name":"Send a message","webhookId":"feddce79-b01e-455a-8d59-83b463df5f22","credentials":{"gmailOAuth2":{"id":"ODMN20le1QesvKAQ","name":"Gmail account"}}}],"connections":{"Read Tool File":{"main":[[{"node":"Comprehensive Analysis","type":"main","index":0}]]},"Has Improvements?":{"main":[[{"node":"Generate Comprehensive Report","type":"main","index":0}],[]]},"List Available Tools":{"main":[[{"node":"Select Tool to Analyze","type":"main","index":0}]]},"Comprehensive Analysis":{"main":[[{"node":"Has Improvements?","type":"main","index":0}]]},"Manual Trigger Webhook":{"main":[[{"node":"List Available Tools","type":"main","index":0}]]},"Select Tool to Analyze":{"main":[[{"node":"Read Tool File","type":"main","index":0}]]},"Generate Comprehensive Report":{"main":[[{"node":"Send a message","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"cycleCount":0,"node:Every 30 Minutes":{"recurrenceRules":[]},"node:Every 5 Minutes":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"63a6e041-6bf3-4739-9559-540745b853ef","triggerCount":1,"shared":[{"createdAt":"2025-10-03T00:16:45.489Z","updatedAt":"2025-10-03T00:16:45.489Z","role":"workflow:owner","workflowId":"TIA1759450314","projectId":"55VrbeDl3nbECwkj"}],"tags":[]}
