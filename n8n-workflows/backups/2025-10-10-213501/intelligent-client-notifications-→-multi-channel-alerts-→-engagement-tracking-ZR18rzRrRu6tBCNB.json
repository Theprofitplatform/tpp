{"createdAt":"2025-09-05T21:52:28.702Z","updatedAt":"2025-10-04T13:20:53.177Z","id":"ZR18rzRrRu6tBCNB","name":"Intelligent Client Notifications ‚Üí Multi-Channel Alerts ‚Üí Engagement Tracking","active":false,"isArchived":false,"nodes":[{"parameters":{"triggerTime":"0 */2 * * *","timezone":"Australia/Sydney"},"id":"notification-trigger","name":"Check Notification Queue (Every 2 hours)","type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.1,"position":[240,300]},{"parameters":{"operation":"executeQuery","query":"SELECT n.notification_id, n.client_id, n.notification_type, n.priority, n.title, n.message, n.data_payload, n.delivery_channels, n.scheduled_for, n.created_at, c.client_name, c.email, c.phone, c.notification_preferences, c.timezone FROM notifications n JOIN clients c ON n.client_id = c.client_id WHERE n.status = 'pending' AND (n.scheduled_for IS NULL OR n.scheduled_for <= NOW()) ORDER BY n.priority DESC, n.created_at ASC LIMIT 50","credentials":{"postgres":{"id":"postgres-credentials","name":"PostgreSQL Database"}}},"id":"fetch-pending-notifications","name":"Fetch Pending Notifications","type":"n8n-nodes-base.postgres","typeVersion":2.4,"position":[460,300]},{"parameters":{"jsCode":"// Process and enhance notification data\nconst notifications = items[0]?.json || [];\n\nif (notifications.length === 0) {\n  return [{ json: { message: 'No notifications to process' } }];\n}\n\nconst processedNotifications = notifications.map(notification => {\n  // Parse JSON fields\n  const dataPayload = typeof notification.data_payload === 'string' ? \n    JSON.parse(notification.data_payload || '{}') : notification.data_payload || {};\n    \n  const deliveryChannels = typeof notification.delivery_channels === 'string' ?\n    JSON.parse(notification.delivery_channels || '[\"email\"]') : notification.delivery_channels || ['email'];\n    \n  const preferences = typeof notification.notification_preferences === 'string' ?\n    JSON.parse(notification.notification_preferences || '{}') : notification.notification_preferences || {};\n\n  // Determine client timezone (default to Sydney)\n  const clientTimezone = notification.timezone || 'Australia/Sydney';\n  const localTime = new Date().toLocaleString('en-AU', { timeZone: clientTimezone });\n\n  // Enhanced notification object\n  return {\n    notification_id: notification.notification_id,\n    client_id: notification.client_id,\n    client_name: notification.client_name,\n    email: notification.email,\n    phone: notification.phone,\n    \n    // Notification details\n    type: notification.notification_type,\n    priority: notification.priority,\n    title: notification.title,\n    message: notification.message,\n    data: dataPayload,\n    \n    // Delivery configuration\n    channels: deliveryChannels,\n    preferences: preferences,\n    client_timezone: clientTimezone,\n    local_time: localTime,\n    \n    // Processing metadata\n    created_at: notification.created_at,\n    scheduled_for: notification.scheduled_for,\n    processing_timestamp: new Date().toISOString(),\n    \n    // Channel-specific flags\n    send_email: deliveryChannels.includes('email') && (!preferences.email_disabled || false),\n    send_sms: deliveryChannels.includes('sms') && notification.phone && (!preferences.sms_disabled || false),\n    send_slack: deliveryChannels.includes('slack') && preferences.slack_webhook,\n    send_push: deliveryChannels.includes('push') && preferences.push_token,\n    \n    // Personalized content\n    personalized_title: notification.title.replace('{client_name}', notification.client_name),\n    personalized_message: notification.message\n      .replace('{client_name}', notification.client_name)\n      .replace('{local_time}', localTime)\n      .replace('{data}', JSON.stringify(dataPayload, null, 2))\n  };\n});\n\n// Return each notification as a separate item for parallel processing\nreturn processedNotifications.map(notification => ({ json: notification }));"},"id":"process-notification-data","name":"Process & Personalize Notifications","type":"n8n-nodes-base.code","typeVersion":2,"position":[680,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"email-check","leftValue":"{{ $json.send_email }}","rightValue":"true","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"check-email-delivery","name":"Check Email Delivery","type":"n8n-nodes-base.if","typeVersion":2,"position":[900,200]},{"parameters":{"jsCode":"// Generate personalized email content based on notification type\nconst notification = items[0].json;\n\n// Email templates by notification type\nconst templates = {\n  content_ready: {\n    subject: `üéâ Your content is ready: ${notification.personalized_title}`,\n    html: `\n    <div style=\"font-family: 'Segoe UI', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;\">\n      <div style=\"background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n        <div style=\"text-align: center; margin-bottom: 30px;\">\n          <h1 style=\"color: #667eea; margin: 0;\">Content Ready! üéâ</h1>\n        </div>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">Hi ${notification.client_name},</p>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">${notification.personalized_message}</p>\n        \n        <div style=\"background: #667eea; color: white; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n          <h3 style=\"margin: 0 0 10px 0;\">Content Details:</h3>\n          <ul style=\"margin: 0; padding-left: 20px;\">\n            <li><strong>Type:</strong> ${notification.data.content_type || 'Blog Post'}</li>\n            <li><strong>Word Count:</strong> ${notification.data.word_count || 'Standard'}</li>\n            <li><strong>Keywords:</strong> ${notification.data.target_keywords?.join(', ') || 'Optimized'}</li>\n          </ul>\n        </div>\n        \n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"https://dashboard.theprofitplatform.com.au/content/${notification.data.content_id}\" \n             style=\"background: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">View Content</a>\n        </div>\n        \n        <p style=\"color: #666; font-size: 14px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">Best regards,<br>The Content Empire Team</p>\n      </div>\n    </div>`\n  },\n  \n  performance_report: {\n    subject: `üìä Your performance report is ready - ${notification.client_name}`,\n    html: `\n    <div style=\"font-family: 'Segoe UI', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;\">\n      <div style=\"background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n        <div style=\"text-align: center; margin-bottom: 30px;\">\n          <h1 style=\"color: #28a745; margin: 0;\">Performance Report üìä</h1>\n        </div>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">Hi ${notification.client_name},</p>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">Your latest performance insights are ready!</p>\n        \n        <div style=\"background: linear-gradient(135deg, #667eea, #764ba2); color: white; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n          <h3 style=\"margin: 0 0 15px 0;\">Key Highlights:</h3>\n          <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 10px;\">\n            <div><strong>Sessions:</strong> ${notification.data.sessions?.toLocaleString() || 'N/A'}</div>\n            <div><strong>Conversions:</strong> ${notification.data.conversions || 'N/A'}</div>\n            <div><strong>Top Content:</strong> ${notification.data.top_content_count || 'N/A'} pieces</div>\n            <div><strong>Trend:</strong> ${notification.data.trend || 'Positive'}</div>\n          </div>\n        </div>\n        \n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"https://dashboard.theprofitplatform.com.au/reports/${notification.data.report_id}\" \n             style=\"background: #28a745; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">View Full Report</a>\n        </div>\n        \n        <p style=\"color: #666; font-size: 14px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">Generated on ${notification.local_time}</p>\n      </div>\n    </div>`\n  },\n  \n  system_alert: {\n    subject: `‚ö†Ô∏è System Alert: ${notification.personalized_title}`,\n    html: `\n    <div style=\"font-family: 'Segoe UI', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;\">\n      <div style=\"background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n        <div style=\"text-align: center; margin-bottom: 30px;\">\n          <h1 style=\"color: #dc3545; margin: 0;\">System Alert ‚ö†Ô∏è</h1>\n        </div>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">Hi ${notification.client_name},</p>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">${notification.personalized_message}</p>\n        \n        <div style=\"background: #dc3545; color: white; padding: 20px; border-radius: 8px; margin: 20px 0;\">\n          <h3 style=\"margin: 0 0 10px 0;\">Alert Details:</h3>\n          <p style=\"margin: 0;\">${notification.data.alert_details || 'Please check your dashboard for more information.'}</p>\n        </div>\n        \n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"https://dashboard.theprofitplatform.com.au/alerts\" \n             style=\"background: #dc3545; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">View Dashboard</a>\n        </div>\n      </div>\n    </div>`\n  },\n  \n  default: {\n    subject: notification.personalized_title,\n    html: `\n    <div style=\"font-family: 'Segoe UI', sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background: #f8f9fa;\">\n      <div style=\"background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">Hi ${notification.client_name},</p>\n        \n        <p style=\"color: #333; font-size: 16px; line-height: 1.6;\">${notification.personalized_message}</p>\n        \n        <div style=\"text-align: center; margin: 30px 0;\">\n          <a href=\"https://dashboard.theprofitplatform.com.au\" \n             style=\"background: #667eea; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold;\">View Dashboard</a>\n        </div>\n        \n        <p style=\"color: #666; font-size: 14px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee;\">Best regards,<br>The Content Empire Team<br>theprofitplatform.com.au</p>\n      </div>\n    </div>`\n  }\n};\n\nconst template = templates[notification.type] || templates.default;\n\nreturn [{\n  json: {\n    ...notification,\n    email_subject: template.subject,\n    email_html: template.html,\n    email_text: notification.personalized_message // Fallback plain text\n  }\n}];"},"id":"generate-email-content","name":"Generate Personalized Email Content","type":"n8n-nodes-base.code","typeVersion":2,"position":[1120,100]},{"parameters":{"message":"{{ $json.email_html }}","subject":"{{ $json.email_subject }}","toEmail":"{{ $json.email }}","options":{"allowUnauthorizedCerts":false,"ccEmail":"","bccEmail":"notifications@theprofitplatform.com.au","attachments":[]},"credentials":{"smtp":{"id":"smtp-credentials","name":"SMTP Account"}}},"id":"send-email-notification","name":"Send Email Notification","type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[1340,100]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"sms-check","leftValue":"{{ $('Process & Personalize Notifications').item.json.send_sms }}","rightValue":"true","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"check-sms-delivery","name":"Check SMS Delivery","type":"n8n-nodes-base.if","typeVersion":2,"position":[900,300]},{"parameters":{"method":"POST","url":"https://api.twilio.com/2010-04-01/Accounts/{{ $env.TWILIO_ACCOUNT_SID }}/Messages.json","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Authorization","value":"Basic {{ Buffer.from($env.TWILIO_ACCOUNT_SID + ':' + $env.TWILIO_AUTH_TOKEN).toString('base64') }}"},{"name":"Content-Type","value":"application/x-www-form-urlencoded"}]},"sendBody":true,"contentType":"form-urlencoded","bodyParameters":{"parameters":[{"name":"From","value":"{{ $env.TWILIO_PHONE_NUMBER }}"},{"name":"To","value":"{{ $('Process & Personalize Notifications').item.json.phone }}"},{"name":"Body","value":"{{ $('Process & Personalize Notifications').item.json.client_name }}: {{ $('Process & Personalize Notifications').item.json.personalized_message.substring(0, 140) }}{{ $('Process & Personalize Notifications').item.json.personalized_message.length > 140 ? '...' : '' }} - View: https://dashboard.theprofitplatform.com.au"}]}},"id":"send-sms-notification","name":"Send SMS Notification","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1120,300]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"slack-check","leftValue":"{{ $('Process & Personalize Notifications').item.json.send_slack }}","rightValue":"true","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"check-slack-delivery","name":"Check Slack Delivery","type":"n8n-nodes-base.if","typeVersion":2,"position":[900,400]},{"parameters":{"method":"POST","url":"{{ $('Process & Personalize Notifications').item.json.preferences.slack_webhook }}","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Content-Type","value":"application/json"}]},"sendBody":true,"bodyParameters":{"parameters":[{"name":"text","value":"üì¢ *{{ $('Process & Personalize Notifications').item.json.personalized_title }}*"},{"name":"blocks","value":"[\n  {\n    \"type\": \"section\",\n    \"text\": {\n      \"type\": \"mrkdwn\",\n      \"text\": \"*{{ $('Process & Personalize Notifications').item.json.personalized_title }}*\\n{{ $('Process & Personalize Notifications').item.json.personalized_message }}\"\n    }\n  },\n  {\n    \"type\": \"actions\",\n    \"elements\": [\n      {\n        \"type\": \"button\",\n        \"text\": {\n          \"type\": \"plain_text\",\n          \"text\": \"View Dashboard\"\n        },\n        \"url\": \"https://dashboard.theprofitplatform.com.au\",\n        \"style\": \"primary\"\n      }\n    ]\n  }\n]"},{"name":"username","value":"Content Empire"},{"name":"icon_emoji","value":":robot_face:"}]}},"id":"send-slack-notification","name":"Send Slack Notification","type":"n8n-nodes-base.httpRequest","typeVersion":4.1,"position":[1120,400]},{"parameters":{"jsCode":"// Compile delivery results from all channels\nconst notification = $('Process & Personalize Notifications').item.json;\nconst emailResult = items.find(item => item.json && (item.json.messageId || item.json.accepted));\nconst smsResult = items.find(item => item.json && item.json.sid);\nconst slackResult = items.find(item => item.json && item.json.ok !== undefined);\n\nconst deliveryResults = {\n  notification_id: notification.notification_id,\n  client_id: notification.client_id,\n  delivery_timestamp: new Date().toISOString(),\n  \n  // Channel delivery status\n  channels_attempted: notification.channels.length,\n  channels_successful: 0,\n  delivery_details: {\n    email: {\n      attempted: notification.send_email,\n      successful: !!emailResult,\n      message_id: emailResult?.json?.messageId || null,\n      error: emailResult?.json?.error || null\n    },\n    sms: {\n      attempted: notification.send_sms,\n      successful: !!smsResult,\n      message_sid: smsResult?.json?.sid || null,\n      error: smsResult?.json?.error || null\n    },\n    slack: {\n      attempted: notification.send_slack,\n      successful: !!slackResult && slackResult.json.ok,\n      timestamp: slackResult?.json?.ts || null,\n      error: slackResult?.json?.error || null\n    }\n  },\n  \n  // Overall status\n  overall_status: 'partial', // Will be updated below\n  processing_time_ms: Date.now() - new Date(notification.processing_timestamp).getTime(),\n  \n  // Engagement tracking setup\n  tracking_links: {\n    email_open: `https://api.theprofitplatform.com.au/track/email-open/${notification.notification_id}`,\n    click_tracking: `https://api.theprofitplatform.com.au/track/click/${notification.notification_id}`\n  }\n};\n\n// Count successful deliveries\nObject.values(deliveryResults.delivery_details).forEach(channel => {\n  if (channel.successful) deliveryResults.channels_successful++;\n});\n\n// Determine overall status\nif (deliveryResults.channels_successful === 0) {\n  deliveryResults.overall_status = 'failed';\n} else if (deliveryResults.channels_successful === deliveryResults.channels_attempted) {\n  deliveryResults.overall_status = 'success';\n} else {\n  deliveryResults.overall_status = 'partial';\n}\n\nreturn [{ json: deliveryResults }];"},"id":"compile-delivery-results","name":"Compile Delivery Results","type":"n8n-nodes-base.code","typeVersion":2,"position":[1340,350]},{"parameters":{"operation":"executeQuery","query":"UPDATE notifications SET status = 'delivered', delivery_status = $1, delivered_at = NOW(), delivery_details = $2 WHERE notification_id = $3","additionalFields":{"values":{"values":["={{ $json.overall_status }}","={{ JSON.stringify($json.delivery_details) }}","={{ $json.notification_id }}"]}},"credentials":{"postgres":{"id":"postgres-credentials","name":"PostgreSQL Database"}}},"id":"update-notification-status","name":"Update Notification Status","type":"n8n-nodes-base.postgres","typeVersion":2.4,"position":[1560,350]},{"parameters":{"operation":"insert","schema":{"value":"public"},"table":{"value":"notification_analytics"},"columns":{"mappingMode":"defineBelow","value":{"notification_id":"={{ $('Compile Delivery Results').item.json.notification_id }}","client_id":"={{ $('Compile Delivery Results').item.json.client_id }}","channels_attempted":"={{ $('Compile Delivery Results').item.json.channels_attempted }}","channels_successful":"={{ $('Compile Delivery Results').item.json.channels_successful }}","delivery_status":"={{ $('Compile Delivery Results').item.json.overall_status }}","processing_time_ms":"={{ $('Compile Delivery Results').item.json.processing_time_ms }}","email_delivered":"={{ $('Compile Delivery Results').item.json.delivery_details.email.successful }}","sms_delivered":"={{ $('Compile Delivery Results').item.json.delivery_details.sms.successful }}","slack_delivered":"={{ $('Compile Delivery Results').item.json.delivery_details.slack.successful }}","created_at":"=NOW()"}},"credentials":{"postgres":{"id":"postgres-credentials","name":"PostgreSQL Database"}}},"id":"log-notification-analytics","name":"Log Notification Analytics","type":"n8n-nodes-base.postgres","typeVersion":2.4,"position":[1780,350]},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict"},"conditions":[{"id":"failure-check","leftValue":"{{ $('Compile Delivery Results').item.json.overall_status }}","rightValue":"failed","operator":{"type":"string","operation":"equals"}}],"combinator":"and"}},"id":"check-delivery-failure","name":"Check for Delivery Failures","type":"n8n-nodes-base.if","typeVersion":2,"position":[1780,500]},{"parameters":{"message":"üö® **Notification Delivery Failure**\\n\\n**Client:** {{ $('Process & Personalize Notifications').item.json.client_name }} (ID: {{ $('Compile Delivery Results').item.json.client_id }})\\n**Notification:** {{ $('Process & Personalize Notifications').item.json.personalized_title }}\\n**Type:** {{ $('Process & Personalize Notifications').item.json.type }}\\n**Priority:** {{ $('Process & Personalize Notifications').item.json.priority }}\\n\\n**Delivery Attempts:**\\n‚Ä¢ Email: {{ $('Compile Delivery Results').item.json.delivery_details.email.attempted ? ($('Compile Delivery Results').item.json.delivery_details.email.successful ? '‚úÖ Success' : '‚ùå Failed') : 'Not attempted' }}\\n‚Ä¢ SMS: {{ $('Compile Delivery Results').item.json.delivery_details.sms.attempted ? ($('Compile Delivery Results').item.json.delivery_details.sms.successful ? '‚úÖ Success' : '‚ùå Failed') : 'Not attempted' }}\\n‚Ä¢ Slack: {{ $('Compile Delivery Results').item.json.delivery_details.slack.attempted ? ($('Compile Delivery Results').item.json.delivery_details.slack.successful ? '‚úÖ Success' : '‚ùå Failed') : 'Not attempted' }}\\n\\n**Errors:**\\n{{ $('Compile Delivery Results').item.json.delivery_details.email.error ? '‚Ä¢ Email: ' + $('Compile Delivery Results').item.json.delivery_details.email.error : '' }}\\n{{ $('Compile Delivery Results').item.json.delivery_details.sms.error ? '‚Ä¢ SMS: ' + $('Compile Delivery Results').item.json.delivery_details.sms.error : '' }}\\n{{ $('Compile Delivery Results').item.json.delivery_details.slack.error ? '‚Ä¢ Slack: ' + $('Compile Delivery Results').item.json.delivery_details.slack.error : '' }}\\n\\n**Action Required:** Please check notification system and client contact details.\\n\\n**Notification ID:** {{ $('Compile Delivery Results').item.json.notification_id }}","subject":"üö® Notification Delivery Failed - {{ $('Process & Personalize Notifications').item.json.client_name }}","options":{"allowUnauthorizedCerts":false,"ccEmail":"","bccEmail":""},"credentials":{"smtp":{"id":"smtp-credentials","name":"SMTP Account"}}},"id":"alert-delivery-failure","name":"Alert Admin of Delivery Failure","type":"n8n-nodes-base.emailSend","typeVersion":2.1,"position":[2000,500]}],"connections":{"Check Notification Queue (Every 2 hours)":{"main":[[{"node":"Fetch Pending Notifications","type":"main","index":0}]]},"Fetch Pending Notifications":{"main":[[{"node":"Process & Personalize Notifications","type":"main","index":0}]]},"Process & Personalize Notifications":{"main":[[{"node":"Check Email Delivery","type":"main","index":0},{"node":"Check SMS Delivery","type":"main","index":0},{"node":"Check Slack Delivery","type":"main","index":0}]]},"Check Email Delivery":{"main":[[{"node":"Generate Personalized Email Content","type":"main","index":0}],[{"node":"Compile Delivery Results","type":"main","index":0}]]},"Generate Personalized Email Content":{"main":[[{"node":"Send Email Notification","type":"main","index":0}]]},"Send Email Notification":{"main":[[{"node":"Compile Delivery Results","type":"main","index":1}]]},"Check SMS Delivery":{"main":[[{"node":"Send SMS Notification","type":"main","index":0}],[{"node":"Compile Delivery Results","type":"main","index":2}]]},"Send SMS Notification":{"main":[[{"node":"Compile Delivery Results","type":"main","index":3}]]},"Check Slack Delivery":{"main":[[{"node":"Send Slack Notification","type":"main","index":0}],[{"node":"Compile Delivery Results","type":"main","index":4}]]},"Send Slack Notification":{"main":[[{"node":"Compile Delivery Results","type":"main","index":5}]]},"Compile Delivery Results":{"main":[[{"node":"Update Notification Status","type":"main","index":0}]]},"Update Notification Status":{"main":[[{"node":"Log Notification Analytics","type":"main","index":0},{"node":"Check for Delivery Failures","type":"main","index":0}]]},"Check for Delivery Failures":{"main":[[{"node":"Alert Admin of Delivery Failure","type":"main","index":0}],[]]}},"settings":{},"staticData":{"node:Check Notification Queue (Every 2 hours)":{"recurrenceRules":[]}},"meta":null,"pinData":null,"versionId":"35af0286-7eea-4060-9426-1102e9c20357","triggerCount":1,"shared":[{"createdAt":"2025-09-05T21:52:28.702Z","updatedAt":"2025-09-05T21:52:28.702Z","role":"workflow:owner","workflowId":"ZR18rzRrRu6tBCNB","projectId":"55VrbeDl3nbECwkj"}],"tags":[]}
