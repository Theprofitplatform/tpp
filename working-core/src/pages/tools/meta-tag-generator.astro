---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';

// Use relative API path (works in both dev and production)
const apiUrl = '';

// SEO-optimized meta tags
const pageTitle = "Free Meta Tag Generator | Create SEO Title & Description Tags";
const pageDescription = "Generate optimized meta titles and descriptions for better search engine rankings. Free SEO meta tag generator with character count, preview, and HTML export. No signup required.";
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Header />
  
  <!-- Tool Analytics Tracker -->
  <script is:inline src="/js/tool-analytics.js"></script>

  <main id="main-content" role="main">
    <!-- Hero Section -->
    <section class="meta-hero">
      <div class="container">
        <div class="meta-hero-content">
          <span class="section-tag">üè∑Ô∏è Free SEO Tool</span>
          <h1>Meta Tag Generator</h1>
          <p class="hero-subtitle">
            Generate perfectly optimized meta titles and descriptions for better search engine visibility.
            See live previews and get instant analysis - 100% free.
          </p>
          <div class="trust-badges">
            <span class="badge"><i class="fas fa-search"></i> SEO-Optimized</span>
            <span class="badge"><i class="fas fa-eye"></i> Live Preview</span>
            <span class="badge"><i class="fas fa-lock"></i> No Signup Required</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Meta Tag Generator Tool -->
    <section class="meta-section">
      <div class="container">
        <div class="meta-card">
          <form id="metaForm" class="meta-form">
            <div class="form-row">
              <div class="form-group">
                <label for="topic">
                  <i class="fas fa-lightbulb"></i>
                  Topic or Main Keyword <span class="required">*</span>
                </label>
                <input
                  type="text"
                  id="topic"
                  name="topic"
                  placeholder="e.g., Digital Marketing Sydney"
                  required
                />
                <small>Enter the main topic or target keyword for your page</small>
              </div>

              <div class="form-group">
                <label for="businessName">
                  <i class="fas fa-building"></i>
                  Business Name (Optional)
                </label>
                <input
                  type="text"
                  id="businessName"
                  name="businessName"
                  placeholder="e.g., The Profit Platform"
                />
                <small>Your brand name to include in the meta title</small>
              </div>
            </div>

            <div class="form-row">
              <div class="form-group">
                <label for="location">
                  <i class="fas fa-map-marker-alt"></i>
                  Location (Optional)
                </label>
                <input
                  type="text"
                  id="location"
                  name="location"
                  placeholder="e.g., Sydney"
                />
                <small>Add location for local SEO optimization</small>
              </div>

              <div class="form-group">
                <label for="pageType">
                  <i class="fas fa-file"></i>
                  Page Type
                </label>
                <select id="pageType" name="pageType">
                  <option value="general">General Page</option>
                  <option value="homepage">Homepage</option>
                  <option value="product">Product/Service Page</option>
                  <option value="blog">Blog Post</option>
                  <option value="service">Service Page</option>
                  <option value="about">About Page</option>
                  <option value="contact">Contact Page</option>
                </select>
                <small>Type of page for optimized suggestions</small>
              </div>
            </div>

            <div class="form-row">
              <div class="form-group checkbox-group">
                <label>
                  <input type="checkbox" id="includeYear" name="includeYear" />
                  <span><i class="fas fa-calendar"></i> Include current year (freshness signal)</span>
                </label>
              </div>

              <div class="form-group checkbox-group">
                <label>
                  <input type="checkbox" id="includeCTA" name="includeCTA" checked />
                  <span><i class="fas fa-bullhorn"></i> Include call-to-action in description</span>
                </label>
              </div>
            </div>

            <div class="form-group">
              <label for="canonicalUrl">
                <i class="fas fa-link"></i>
                Canonical URL (Optional)
              </label>
              <input
                type="url"
                id="canonicalUrl"
                name="canonicalUrl"
                placeholder="https://example.com/page"
              />
              <small>The canonical URL for this page (for HTML export)</small>
            </div>

            <button type="submit" class="btn-primary" id="generateButton">
              <span class="btn-text">
                <i class="fas fa-magic"></i>
                Generate Meta Tags
              </span>
              <span class="btn-loader" style="display: none;">
                <i class="fas fa-spinner fa-spin"></i>
                Generating...
              </span>
            </button>
          </form>

          <!-- Loading State -->
          <div id="loadingState" class="loading-state" style="display: none;">
            <div class="loader-animation">
              <i class="fas fa-tags fa-3x"></i>
              <div class="typing-indicator">
                <span></span>
                <span></span>
                <span></span>
              </div>
            </div>
            <h3>Generating Optimized Meta Tags...</h3>
            <p>Analyzing SEO best practices and character limits</p>
          </div>

          <!-- Results Section -->
          <div id="resultsContainer" style="display: none;">
            <div class="results-header">
              <h2>Your Meta Tags</h2>
              <div class="score-badge">
                <div class="score-circle" id="scoreCircle">
                  <span id="scoreValue">--</span>
                </div>
                <span class="score-label">SEO Score</span>
              </div>
            </div>

            <!-- Generated Meta Tags -->
            <div class="generated-meta">
              <!-- Meta Title -->
              <div class="meta-item">
                <div class="meta-label">
                  <h3><i class="fas fa-heading"></i> Meta Title</h3>
                  <div class="char-count">
                    <span id="titleLength">0</span> / <span class="ideal">50-60</span> characters
                  </div>
                </div>
                <div class="meta-value" id="metaTitle">
                  <!-- Generated title will appear here -->
                </div>
                <div class="status-indicator" id="titleStatus"></div>
              </div>

              <!-- Meta Description -->
              <div class="meta-item">
                <div class="meta-label">
                  <h3><i class="fas fa-align-left"></i> Meta Description</h3>
                  <div class="char-count">
                    <span id="descriptionLength">0</span> / <span class="ideal">150-160</span> characters
                  </div>
                </div>
                <div class="meta-value" id="metaDescription">
                  <!-- Generated description will appear here -->
                </div>
                <div class="status-indicator" id="descriptionStatus"></div>
              </div>

              <!-- SERP Preview -->
              <div class="serp-preview">
                <h3><i class="fas fa-eye"></i> Google Search Preview</h3>
                <div class="serp-result">
                  <div class="serp-url">https://example.com ‚Ä∫ page</div>
                  <div class="serp-title" id="serpTitle">Your Meta Title Will Appear Here</div>
                  <div class="serp-description" id="serpDescription">Your meta description will appear here. This is how your page will look in Google search results.</div>
                </div>
              </div>

              <!-- Open Graph Tags -->
              <div class="social-preview">
                <h3><i class="fab fa-facebook"></i> Social Media Preview (Facebook/LinkedIn)</h3>
                <div class="og-preview">
                  <div class="og-image-placeholder">
                    <i class="fas fa-image fa-2x"></i>
                    <small>Your image here</small>
                  </div>
                  <div class="og-content">
                    <div class="og-title" id="ogTitle">Social Media Title</div>
                    <div class="og-description" id="ogDescription">Social media description will appear here</div>
                    <div class="og-domain">example.com</div>
                  </div>
                </div>
              </div>

              <!-- Analysis -->
              <div class="meta-analysis">
                <h3><i class="fas fa-chart-line"></i> SEO Analysis</h3>
                <div class="analysis-items" id="analysisItems">
                  <!-- Analysis items will be populated here -->
                </div>
              </div>

              <!-- Suggestions -->
              <div class="meta-suggestions">
                <h3><i class="fas fa-lightbulb"></i> Improvement Suggestions</h3>
                <div class="suggestions-list" id="suggestionsList">
                  <!-- Suggestions will be populated here -->
                </div>
              </div>

              <!-- HTML Code Export -->
              <div class="code-export">
                <h3><i class="fas fa-code"></i> HTML Code</h3>
                <div class="code-block" id="htmlCode">
                  <!-- HTML code will be populated here -->
                </div>
              </div>
            </div>

            <!-- Export Options -->
            <div class="export-options">
              <button class="btn-primary" id="copyCodeButton">
                <i class="fas fa-copy"></i> Copy HTML Code
              </button>
              <button class="btn-secondary" id="copyTitleButton">
                <i class="fas fa-heading"></i> Copy Title
              </button>
              <button class="btn-secondary" id="copyDescButton">
                <i class="fas fa-align-left"></i> Copy Description
              </button>
              <button class="btn-secondary" id="generateNewButton">
                <i class="fas fa-plus"></i> Generate New
              </button>
            </div>
          </div>

          <!-- Error State -->
          <div id="errorState" class="error-state" style="display: none;">
            <i class="fas fa-exclamation-triangle fa-3x"></i>
            <h3>Generation Failed</h3>
            <p id="errorMessage"></p>
            <button class="btn-primary" id="tryAgainButton">
              <i class="fas fa-redo"></i> Try Again
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA Section -->
    <section class="tools-cta-modern">
      <div class="container">
        <div class="cta-content-modern">
          <span class="section-tag white">üöÄ Need Professional SEO Help?</span>
          <h2>Get Expert SEO Strategy</h2>
          <p class="cta-subtitle">
            Our Sydney-based SEO experts can optimize your entire website for maximum visibility
            and drive more organic traffic to your business.
          </p>
          <div class="cta-buttons-modern">
            <a href="/contact" class="cta-primary-modern">
              <span class="cta-content">
                <span class="cta-main">Get Free SEO Audit</span>
                <span class="cta-sub">Worth $997 ‚Ä¢ No obligation</span>
              </span>
              <span class="cta-arrow">
                <i class="fas fa-arrow-right"></i>
              </span>
            </a>
            <a href="tel:+61487286451" class="cta-secondary-modern">
              <span class="cta-icon-pulse">
                <i class="fas fa-phone"></i>
              </span>
              <span class="cta-text">
                <span class="cta-label">Call Avi directly</span>
                <span class="cta-number">0487 286 451</span>
              </span>
            </a>
          </div>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<style>
  /* ==========================================
     META TAG GENERATOR STYLES
     ========================================== */

  .container {
    max-width: 1280px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .section-tag {
    display: inline-block;
    padding: 0.5rem 1.25rem;
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    border-radius: 50px;
    font-size: 0.9rem;
    font-weight: 600;
    color: #475569;
    margin-bottom: 1.5rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  }

  .section-tag.white {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  /* Hero Section */
  main#main-content section.meta-hero.meta-hero {
    padding: 180px 0 60px !important;
    background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
    color: white;
    text-align: center;
  }

  .meta-hero-content h1 {
    font-size: 3.5rem;
    font-weight: 900;
    margin: 1rem 0;
  }

  .hero-subtitle {
    font-size: 1.3rem;
    opacity: 0.95;
    max-width: 700px;
    margin: 0 auto 2rem;
    line-height: 1.6;
  }

  .trust-badges {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 2rem;
  }

  .badge {
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .badge i {
    font-size: 1.1rem;
  }

  /* Meta Section */
  .meta-section {
    padding: 80px 0;
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
  }

  .meta-card {
    background: white;
    border-radius: 20px;
    padding: 3rem;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    max-width: 1100px;
    margin: 0 auto;
  }

  /* Form */
  .meta-form {
    margin-bottom: 2rem;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
    margin-bottom: 1.5rem;
  }

  @media (max-width: 768px) {
    .form-row {
      grid-template-columns: 1fr;
    }
  }

  .form-group {
    margin-bottom: 0;
  }

  .form-group label {
    display: block;
    font-weight: 600;
    margin-bottom: 0.75rem;
    color: #1e293b;
    font-size: 1.1rem;
  }

  .form-group label i {
    color: #2563eb;
    margin-right: 0.5rem;
  }

  .required {
    color: #ef4444;
  }

  .form-group input,
  .form-group select {
    width: 100%;
    padding: 1rem 1.5rem;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .form-group input:focus,
  .form-group select:focus {
    outline: none;
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
  }

  .form-group small {
    display: block;
    margin-top: 0.5rem;
    color: #64748b;
    font-size: 0.875rem;
  }

  .checkbox-group label {
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
  }

  .checkbox-group input[type="checkbox"] {
    width: auto;
    margin-right: 0.75rem;
    cursor: pointer;
  }

  /* Buttons */
  .btn-primary {
    width: 100%;
    padding: 1.25rem 2rem;
    background: linear-gradient(135deg, #2563eb, #1e40af);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.75rem;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(37, 99, 235, 0.4);
  }

  .btn-primary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .btn-secondary {
    padding: 0.875rem 1.5rem;
    background: white;
    color: #2563eb;
    border: 2px solid #2563eb;
    border-radius: 12px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .btn-secondary:hover {
    background: #2563eb;
    color: white;
  }

  /* Loading State */
  .loading-state {
    text-align: center;
    padding: 3rem 0;
  }

  .loader-animation {
    position: relative;
    display: inline-block;
    margin-bottom: 2rem;
  }

  .loader-animation i {
    color: #2563eb;
    animation: pulse 2s ease-in-out infinite;
  }

  .typing-indicator {
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
  }

  .typing-indicator span {
    width: 8px;
    height: 8px;
    background: #2563eb;
    border-radius: 50%;
    animation: typing 1.4s infinite;
  }

  .typing-indicator span:nth-child(2) {
    animation-delay: 0.2s;
  }

  .typing-indicator span:nth-child(3) {
    animation-delay: 0.4s;
  }

  @keyframes typing {
    0%, 60%, 100% { transform: translateY(0); }
    30% { transform: translateY(-10px); }
  }

  @keyframes pulse {
    0%, 100% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.1); opacity: 0.8; }
  }

  /* Results Header */
  .results-header {
    text-align: center;
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 2px solid #f1f5f9;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .results-header h2 {
    font-size: 2.5rem;
    font-weight: 900;
    color: #1e293b;
  }

  .score-badge {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .score-circle {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    background: linear-gradient(135deg, #10b981, #059669);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 2rem;
    font-weight: 900;
    box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
  }

  .score-circle.warning {
    background: linear-gradient(135deg, #f59e0b, #d97706);
  }

  .score-circle.error {
    background: linear-gradient(135deg, #ef4444, #dc2626);
  }

  .score-label {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 600;
  }

  /* Generated Meta */
  .generated-meta {
    margin-bottom: 2rem;
  }

  .meta-item {
    background: #f8fafc;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
    border: 2px solid #e2e8f0;
  }

  .meta-label {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }

  .meta-label h3 {
    font-size: 1.25rem;
    font-weight: 800;
    color: #1e293b;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin: 0;
  }

  .meta-label i {
    color: #2563eb;
  }

  .char-count {
    font-size: 0.9rem;
    color: #64748b;
    font-weight: 600;
  }

  .char-count .ideal {
    color: #10b981;
  }

  .meta-value {
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    padding: 1.25rem;
    font-size: 1.05rem;
    color: #1e293b;
    line-height: 1.6;
    margin-bottom: 0.75rem;
  }

  .status-indicator {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    font-weight: 600;
    padding: 0.5rem 1rem;
    border-radius: 8px;
  }

  .status-indicator.good {
    background: #d1fae5;
    color: #065f46;
  }

  .status-indicator.warning {
    background: #fef3c7;
    color: #92400e;
  }

  .status-indicator.error {
    background: #fee2e2;
    color: #991b1b;
  }

  /* SERP Preview */
  .serp-preview {
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .serp-preview h3 {
    font-size: 1.25rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    color: #1e293b;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .serp-result {
    font-family: Arial, sans-serif;
  }

  .serp-url {
    font-size: 0.875rem;
    color: #5f6368;
    margin-bottom: 0.25rem;
  }

  .serp-title {
    font-size: 1.25rem;
    color: #1a0dab;
    margin-bottom: 0.25rem;
    line-height: 1.3;
    cursor: pointer;
  }

  .serp-title:hover {
    text-decoration: underline;
  }

  .serp-description {
    font-size: 0.875rem;
    color: #4d5156;
    line-height: 1.6;
  }

  /* Social Preview */
  .social-preview {
    background: white;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .social-preview h3 {
    font-size: 1.25rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    color: #1e293b;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .og-preview {
    border: 1px solid #dfe1e5;
    border-radius: 8px;
    overflow: hidden;
    background: #f8fafc;
  }

  .og-image-placeholder {
    background: linear-gradient(135deg, #e2e8f0, #cbd5e1);
    height: 200px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #64748b;
    gap: 0.5rem;
  }

  .og-content {
    padding: 1rem;
    background: white;
  }

  .og-title {
    font-size: 1.125rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 0.5rem;
  }

  .og-description {
    font-size: 0.9rem;
    color: #64748b;
    line-height: 1.5;
    margin-bottom: 0.5rem;
  }

  .og-domain {
    font-size: 0.8rem;
    color: #94a3b8;
    text-transform: uppercase;
  }

  /* Meta Analysis */
  .meta-analysis {
    background: linear-gradient(135deg, #dbeafe, #bfdbfe);
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .meta-analysis h3 {
    font-size: 1.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    color: #1e40af;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .analysis-items {
    display: grid;
    gap: 1rem;
  }

  .analysis-item {
    background: white;
    border-radius: 8px;
    padding: 1rem 1.25rem;
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }

  .analysis-icon {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    font-size: 0.875rem;
  }

  .analysis-icon.good {
    background: #d1fae5;
    color: #065f46;
  }

  .analysis-icon.warning {
    background: #fef3c7;
    color: #92400e;
  }

  .analysis-icon.error {
    background: #fee2e2;
    color: #991b1b;
  }

  .analysis-text {
    color: #1e293b;
    font-size: 0.95rem;
  }

  /* Meta Suggestions */
  .meta-suggestions {
    background: linear-gradient(135deg, #fef3c7, #fde68a);
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .meta-suggestions h3 {
    font-size: 1.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    color: #92400e;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .suggestions-list {
    display: grid;
    gap: 1rem;
  }

  .suggestion-item {
    background: white;
    border-radius: 8px;
    padding: 1rem 1.25rem;
    display: flex;
    gap: 1rem;
    align-items: flex-start;
  }

  .suggestion-icon {
    width: 30px;
    height: 30px;
    background: linear-gradient(135deg, #2563eb, #1e40af);
    color: white;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    font-size: 0.875rem;
  }

  .suggestion-text {
    color: #1e293b;
    font-size: 0.95rem;
  }

  /* Code Export */
  .code-export {
    background: #1e293b;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
  }

  .code-export h3 {
    font-size: 1.5rem;
    font-weight: 800;
    margin-bottom: 1.5rem;
    color: white;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .code-block {
    background: #0f172a;
    border-radius: 8px;
    padding: 1.5rem;
    overflow-x: auto;
    color: #94a3b8;
    font-family: 'Courier New', monospace;
    font-size: 0.9rem;
    line-height: 1.8;
  }

  /* Export Options */
  .export-options {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    padding-top: 2rem;
    border-top: 2px solid #f1f5f9;
  }

  .export-options .btn-primary,
  .export-options .btn-secondary {
    width: auto;
  }

  /* Error State */
  .error-state {
    text-align: center;
    padding: 3rem 0;
  }

  .error-state i {
    color: #ef4444;
    margin-bottom: 1.5rem;
  }

  .error-state h3 {
    font-size: 1.8rem;
    color: #1e293b;
    margin-bottom: 1rem;
  }

  .error-state p {
    color: #64748b;
    margin-bottom: 2rem;
  }

  /* CTA Section */
  .tools-cta-modern {
    padding: 80px 0;
    background: linear-gradient(135deg, #2563eb 0%, #1e40af 100%);
    color: white;
    text-align: center;
  }

  .cta-content-modern h2 {
    font-size: 2.5rem;
    font-weight: 900;
    margin: 1.5rem 0 1rem;
  }

  .cta-subtitle {
    font-size: 1.2rem;
    opacity: 0.95;
    margin-bottom: 2rem;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-buttons-modern {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .cta-primary-modern {
    background: white;
    color: #1e40af;
    padding: 1.25rem 2rem;
    border-radius: 60px;
    font-weight: 700;
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .cta-primary-modern:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .cta-content {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .cta-main {
    font-size: 1.1rem;
    font-weight: 800;
  }

  .cta-sub {
    font-size: 0.85rem;
    color: #64748b;
  }

  .cta-arrow {
    width: 40px;
    height: 40px;
    background: linear-gradient(135deg, #2563eb, #1e40af);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
  }

  .cta-secondary-modern {
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    color: white;
    padding: 1.25rem 2rem;
    border-radius: 60px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
    border: 2px solid rgba(255, 255, 255, 0.3);
    transition: all 0.3s ease;
  }

  .cta-secondary-modern:hover {
    background: rgba(255, 255, 255, 0.25);
  }

  .cta-icon-pulse {
    width: 45px;
    height: 45px;
    background: white;
    color: #2563eb;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .cta-text {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }

  .cta-label {
    font-size: 0.85rem;
  }

  .cta-number {
    font-size: 1.1rem;
    font-weight: 700;
  }

  /* Responsive */
  @media (max-width: 768px) {
    main#main-content section.meta-hero.meta-hero {
      padding: 100px 0 60px !important;
    }

    .meta-hero-content h1 {
      font-size: 2.25rem;
    }

    .hero-subtitle {
      font-size: 1.1rem;
    }

    .meta-card {
      padding: 2rem 1.5rem;
    }

    .results-header {
      flex-direction: column;
      gap: 1.5rem;
    }

    .export-options {
      flex-direction: column;
      width: 100%;
    }

    .export-options .btn-primary,
    .export-options .btn-secondary {
      width: 100%;
    }

    .cta-buttons-modern {
      flex-direction: column;
      width: 100%;
    }

    .cta-primary-modern,
    .cta-secondary-modern {
      width: 100%;
      justify-content: center;
    }
  }
</style>

<script define:vars={{ apiUrl }}>
  const form = document.getElementById('metaForm');
  const loadingState = document.getElementById('loadingState');
  const resultsContainer = document.getElementById('resultsContainer');
  const errorState = document.getElementById('errorState');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const formData = {
      topic: document.getElementById('topic').value.trim(),
      businessName: document.getElementById('businessName').value.trim(),
      location: document.getElementById('location').value.trim(),
      pageType: document.getElementById('pageType').value,
      includeYear: document.getElementById('includeYear').checked,
      includeCTA: document.getElementById('includeCTA').checked,
      canonicalUrl: document.getElementById('canonicalUrl').value.trim()
    };

    // Track tool usage (Discord notification)
    if (window.trackToolUsage) {
      window.trackToolUsage('Meta Tag Generator', { topic: formData.topic, businessName: formData.businessName, location: formData.location, pageType: formData.pageType });
    }

    // Show loading state
    form.style.display = 'none';
    loadingState.style.display = 'block';
    resultsContainer.style.display = 'none';
    errorState.style.display = 'none';

    try {
      const response = await fetch(`${apiUrl}/api/meta-tag-generator`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || 'Failed to generate meta tags');
      }

      // Display results
      displayResults(data);
    } catch (error) {
      console.error('Generation error:', error);
      showError(error.message);
    }
  });

  function displayResults(data) {
    loadingState.style.display = 'none';
    resultsContainer.style.display = 'block';

    const { metaTags, analysis, suggestions, htmlSnippet } = data;

    // Display score
    const scoreValue = document.getElementById('scoreValue');
    const scoreCircle = document.getElementById('scoreCircle');
    scoreValue.textContent = analysis.overallScore;

    scoreCircle.className = 'score-circle';
    if (analysis.overallScore >= 80) {
      scoreCircle.classList.add('good');
    } else if (analysis.overallScore >= 60) {
      scoreCircle.classList.add('warning');
    } else {
      scoreCircle.classList.add('error');
    }

    // Display meta title
    document.getElementById('metaTitle').textContent = metaTags.title;
    document.getElementById('titleLength').textContent = analysis.title.length;
    displayStatus('titleStatus', analysis.title.status, analysis.title.issues);

    // Display meta description
    document.getElementById('metaDescription').textContent = metaTags.description;
    document.getElementById('descriptionLength').textContent = analysis.description.length;
    displayStatus('descriptionStatus', analysis.description.status, analysis.description.issues);

    // Display SERP preview
    document.getElementById('serpTitle').textContent = metaTags.title;
    document.getElementById('serpDescription').textContent = metaTags.description;

    // Display Open Graph preview
    document.getElementById('ogTitle').textContent = metaTags.openGraph['og:title'];
    document.getElementById('ogDescription').textContent = metaTags.openGraph['og:description'];

    // Display analysis
    displayAnalysis(analysis);

    // Display suggestions
    displaySuggestions(suggestions);

    // Display HTML code
    document.getElementById('htmlCode').textContent = htmlSnippet;
  }

  function displayStatus(elementId, status, issues) {
    const statusEl = document.getElementById(elementId);
    statusEl.className = `status-indicator ${status}`;

    if (issues && issues.length > 0) {
      statusEl.innerHTML = `<i class="fas ${status === 'good' ? 'fa-check-circle' : status === 'warning' ? 'fa-exclamation-triangle' : 'fa-times-circle'}"></i> ${issues[0]}`;
    } else {
      statusEl.innerHTML = '<i class="fas fa-check-circle"></i> Perfect!';
    }
  }

  function displayAnalysis(analysis) {
    const container = document.getElementById('analysisItems');
    const items = [];

    if (analysis.title.issues.length === 0) {
      items.push({
        status: 'good',
        message: `Title length is optimal (${analysis.title.length} characters)`
      });
    } else {
      analysis.title.issues.forEach(issue => {
        items.push({ status: analysis.title.status, message: issue });
      });
    }

    if (analysis.description.issues.length === 0) {
      items.push({
        status: 'good',
        message: `Description length is optimal (${analysis.description.length} characters)`
      });
    } else {
      analysis.description.issues.forEach(issue => {
        items.push({ status: analysis.description.status, message: issue });
      });
    }

    container.innerHTML = items.map(item => `
      <div class="analysis-item">
        <div class="analysis-icon ${item.status}">
          <i class="fas ${item.status === 'good' ? 'fa-check' : item.status === 'warning' ? 'fa-exclamation' : 'fa-times'}"></i>
        </div>
        <div class="analysis-text">${item.message}</div>
      </div>
    `).join('');
  }

  function displaySuggestions(suggestions) {
    const container = document.getElementById('suggestionsList');
    container.innerHTML = (suggestions || []).map(suggestion => `
      <div class="suggestion-item">
        <div class="suggestion-icon">
          <i class="fas fa-lightbulb"></i>
        </div>
        <div class="suggestion-text">${suggestion.message}</div>
      </div>
    `).join('');
  }

  function showError(message) {
    loadingState.style.display = 'none';
    errorState.style.display = 'block';
    resultsContainer.style.display = 'none';
    document.getElementById('errorMessage').textContent = message;
  }

  // Copy HTML code
  document.getElementById('copyCodeButton')?.addEventListener('click', async () => {
    const code = document.getElementById('htmlCode').textContent;
    try {
      await navigator.clipboard.writeText(code);
      const btn = document.getElementById('copyCodeButton');
      const originalHTML = btn.innerHTML;
      btn.innerHTML = '<i class="fas fa-check"></i> Copied!';
      setTimeout(() => {
        btn.innerHTML = originalHTML;
      }, 2000);
    } catch (err) {
      alert('Failed to copy to clipboard');
    }
  });

  // Copy title
  document.getElementById('copyTitleButton')?.addEventListener('click', async () => {
    const title = document.getElementById('metaTitle').textContent;
    try {
      await navigator.clipboard.writeText(title);
      const btn = document.getElementById('copyTitleButton');
      const originalHTML = btn.innerHTML;
      btn.innerHTML = '<i class="fas fa-check"></i> Copied!';
      setTimeout(() => {
        btn.innerHTML = originalHTML;
      }, 2000);
    } catch (err) {
      alert('Failed to copy to clipboard');
    }
  });

  // Copy description
  document.getElementById('copyDescButton')?.addEventListener('click', async () => {
    const desc = document.getElementById('metaDescription').textContent;
    try {
      await navigator.clipboard.writeText(desc);
      const btn = document.getElementById('copyDescButton');
      const originalHTML = btn.innerHTML;
      btn.innerHTML = '<i class="fas fa-check"></i> Copied!';
      setTimeout(() => {
        btn.innerHTML = originalHTML;
      }, 2000);
    } catch (err) {
      alert('Failed to copy to clipboard');
    }
  });

  // Generate new
  document.getElementById('generateNewButton')?.addEventListener('click', () => {
    resultsContainer.style.display = 'none';
    form.style.display = 'block';
    document.getElementById('topic').focus();
  });

  // Try again button
  document.getElementById('tryAgainButton')?.addEventListener('click', () => {
    errorState.style.display = 'none';
    form.style.display = 'block';
    document.getElementById('topic').focus();
  });
</script>
