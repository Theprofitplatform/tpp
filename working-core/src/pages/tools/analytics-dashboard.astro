---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import fs from 'fs';
import path from 'path';

// Read analytics data from automation directory
let dashboardData = {
  generatedAt: new Date().toISOString(),
  summary: { totalPosts: 0, totalPageviews: 0, avgEngagementRate: 0, avgWordCount: 0 },
  analytics: { totalPageviews: 0, avgEngagementRate: 0 },
  alerts: [],
  insights: { criticalActions: [], quickWins: [] },
  posts: [],
  categories: {}
};

try {
  const performanceReport = JSON.parse(
    fs.readFileSync(path.join(process.cwd(), 'automation/performance-report.json'), 'utf-8')
  );
  const alertsReport = JSON.parse(
    fs.readFileSync(path.join(process.cwd(), 'automation/performance-alerts.json'), 'utf-8')
  );
  const insightsReport = JSON.parse(
    fs.readFileSync(path.join(process.cwd(), 'automation/insights-report.json'), 'utf-8')
  );

  dashboardData = {
    generatedAt: performanceReport.generatedAt,
    summary: performanceReport.summary,
    analytics: performanceReport.analytics,
    alerts: alertsReport.alerts || [],
    insights: insightsReport,
    posts: performanceReport.posts || [],
    categories: performanceReport.categories || {}
  };
} catch (error) {
  console.log('Analytics data not yet generated. Run: npm run blog:master');
}

// Calculate category data for charts
const categoryLabels = Object.keys(dashboardData.categories);
const categoryPostCounts = Object.values(dashboardData.categories);
const categoryTraffic = categoryLabels.map(cat => {
  return dashboardData.posts
    .filter(p => p.category === cat)
    .reduce((sum, p) => sum + (p.analytics?.pageviews || 0), 0);
});

// Get top 10 posts by traffic
const topPosts = [...dashboardData.posts]
  .sort((a, b) => (b.analytics?.pageviews || 0) - (a.analytics?.pageviews || 0))
  .slice(0, 10);
---

<BaseLayout
  title="Blog Analytics Dashboard | The Profit Platform"
  description="Track blog performance metrics including pageviews, engagement rates, and content analytics. Internal dashboard for The Profit Platform content strategy."
>
  <Header />

  <main id="main-content" role="main">
    <!-- Breadcrumbs -->
    <nav class="breadcrumbs" aria-label="Breadcrumb">
      <div class="container">
        <ol itemscope itemtype="https://schema.org/BreadcrumbList">
          <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
            <a itemprop="item" href="/">
              <span itemprop="name">Home</span>
            </a>
            <meta itemprop="position" content="1" />
          </li>
          <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
            <a itemprop="item" href="/tools">
              <span itemprop="name">Tools</span>
            </a>
            <meta itemprop="position" content="2" />
          </li>
          <li itemprop="itemListElement" itemscope itemtype="https://schema.org/ListItem">
            <span itemprop="name">Analytics Dashboard</span>
            <meta itemprop="position" content="3" />
          </li>
        </ol>
      </div>
    </nav>

    <!-- Hero Section -->
    <section class="dashboard-hero">
      <div class="container">
        <span class="section-tag">üìä Live Data</span>
        <h1>Blog Analytics Dashboard</h1>
        <p class="hero-subtitle">
          Real-time insights from Google Analytics 4 and Search Console
        </p>
        <div class="last-updated">
          Last updated: {new Date(dashboardData.generatedAt).toLocaleString()}
        </div>
      </div>
    </section>

    <!-- Stats Grid -->
    <section class="stats-section">
      <div class="container">
        <div class="stats-grid">
          <div class="stat-card">
            <div class="stat-label">Total Posts</div>
            <div class="stat-value">{dashboardData.summary.totalPosts}</div>
          </div>
          <div class="stat-card">
            <div class="stat-label">Total Pageviews</div>
            <div class="stat-value">{dashboardData.analytics.totalPageviews}</div>
            <div class="stat-sublabel">Last 30 days</div>
          </div>
          <div class="stat-card">
            <div class="stat-label">Avg Engagement Rate</div>
            <div class="stat-value">{dashboardData.analytics.avgEngagementRate.toFixed(1)}%</div>
          </div>
          <div class="stat-card">
            <div class="stat-label">Avg Word Count</div>
            <div class="stat-value">{dashboardData.summary.avgWordCount}</div>
          </div>
        </div>
      </div>
    </section>

    <!-- Alerts Section -->
    {dashboardData.alerts.length > 0 && (
      <section class="alerts-section">
        <div class="container">
          <h2>üîî Active Alerts</h2>
          <div class="alerts-grid">
            {dashboardData.alerts.map(alert => (
              <div class={`alert alert-${alert.severity}`}>
                <div class="alert-header">
                  <strong>{alert.message}</strong>
                </div>
                <div class="alert-body">
                  <small>{alert.title}</small>
                  <p>{alert.action}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>
    )}

    <!-- Charts Section -->
    <section class="charts-section">
      <div class="container">
        <div class="charts-grid">
          <div class="chart-card">
            <h2>Posts by Category</h2>
            <canvas id="categoryChart"></canvas>
          </div>
          <div class="chart-card">
            <h2>Traffic by Category</h2>
            <canvas id="trafficChart"></canvas>
          </div>
        </div>
      </div>
    </section>

    <!-- Top Posts Table -->
    <section class="table-section">
      <div class="container">
        <div class="table-card">
          <h2>üèÜ Top 10 Posts by Traffic</h2>
          <div class="table-responsive">
            <table>
              <thead>
                <tr>
                  <th>Rank</th>
                  <th>Title</th>
                  <th>Category</th>
                  <th>Pageviews</th>
                  <th>Engagement</th>
                  <th>Age</th>
                </tr>
              </thead>
              <tbody>
                {topPosts.map((post, index) => (
                  <tr>
                    <td><strong>{index + 1}</strong></td>
                    <td>{post.title}</td>
                    <td><span class="badge">{post.category}</span></td>
                    <td>{post.analytics?.pageviews || 0}</td>
                    <td>{post.analytics?.engagementRate?.toFixed(1) || 0}%</td>
                    <td>{post.daysSince} days</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </section>

    <!-- Insights Section -->
    {dashboardData.insights.criticalActions.length > 0 && (
      <section class="insights-section">
        <div class="container">
          <h2>üí° Key Insights</h2>

          <h3>Critical Actions</h3>
          <div class="insights-grid">
            {dashboardData.insights.criticalActions.map(action => (
              <div class="insight-card critical">
                <div class="insight-priority">{action.priority}</div>
                <h4>{action.issue}</h4>
                <p class="insight-impact">{action.impact}</p>
                <p class="insight-action"><strong>Action:</strong> {action.action}</p>
                {action.posts && (
                  <div class="insight-posts">
                    <small>Affected posts: {action.posts.length}</small>
                  </div>
                )}
              </div>
            ))}
          </div>

          {dashboardData.insights.quickWins.length > 0 && (
            <>
              <h3>Quick Wins</h3>
              <div class="insights-grid">
                {dashboardData.insights.quickWins.map(win => (
                  <div class="insight-card quick-win">
                    <h4>{win.opportunity}</h4>
                    <p class="insight-current">{win.currentState}</p>
                    <p class="insight-action"><strong>Action:</strong> {win.action}</p>
                    <p class="insight-impact"><strong>Expected Impact:</strong> {win.expectedImpact}</p>
                  </div>
                ))}
              </div>
            </>
          )}
        </div>
      </section>
    )}

    <!-- CTA Section -->
    <section class="dashboard-cta">
      <div class="container">
        <h2>Need Help Improving Your Blog Performance?</h2>
        <p>Our Sydney-based team can help optimize your content strategy for better results.</p>
        <div class="cta-buttons">
          <a href="/contact" class="btn-primary">Get Free Consultation</a>
          <a href="tel:+61487286451" class="btn-secondary">Call 0487 286 451</a>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

<script define:vars={{ categoryLabels, categoryPostCounts, categoryTraffic }}>
  // Wait for Chart.js to load
  window.addEventListener('load', () => {
  if (typeof Chart !== 'undefined') {
    // Category distribution chart
    new Chart(document.getElementById('categoryChart'), {
      type: 'doughnut',
      data: {
        labels: categoryLabels,
        datasets: [{
          data: categoryPostCounts,
          backgroundColor: [
            '#667eea', '#764ba2', '#f093fb', '#4facfe',
            '#43e97b', '#fa709a', '#fee140', '#30cfd0'
          ]
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        plugins: {
          legend: { position: 'right' }
        }
      }
    });

    // Traffic by category chart
    new Chart(document.getElementById('trafficChart'), {
      type: 'bar',
      data: {
        labels: categoryLabels,
        datasets: [{
          label: 'Pageviews',
          data: categoryTraffic,
          backgroundColor: '#667eea'
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: true,
        plugins: {
          legend: { display: false }
        },
        scales: {
          y: { beginAtZero: true }
        }
      }
    });
  }
  });
</script>

<style>
  .container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  /* Hero Section */
  .dashboard-hero {
    padding: 180px 0 60px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
  }

  .section-tag {
    display: inline-block;
    padding: 0.5rem 1.25rem;
    background: rgba(255, 255, 255, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 50px;
    font-size: 0.9rem;
    font-weight: 600;
    margin-bottom: 1.5rem;
  }

  .dashboard-hero h1 {
    font-size: 3.5rem;
    font-weight: 900;
    margin: 1rem 0;
  }

  .hero-subtitle {
    font-size: 1.3rem;
    opacity: 0.95;
    max-width: 700px;
    margin: 0 auto 1rem;
  }

  .last-updated {
    font-size: 0.9rem;
    opacity: 0.8;
    margin-top: 1rem;
  }

  /* Stats Section */
  .stats-section {
    padding: 40px 0;
    background: white;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
  }

  .stat-card {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    padding: 25px;
    border-radius: 10px;
    text-align: center;
    border: 2px solid #e2e8f0;
  }

  .stat-value {
    font-size: 36px;
    font-weight: bold;
    color: #667eea;
    margin: 10px 0;
  }

  .stat-label {
    color: #666;
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 600;
  }

  .stat-sublabel {
    color: #999;
    font-size: 12px;
    margin-top: 5px;
  }

  /* Alerts Section */
  .alerts-section {
    padding: 40px 0;
    background: #f8fafc;
  }

  .alerts-section h2 {
    margin-bottom: 20px;
    color: #333;
    font-size: 1.8rem;
  }

  .alerts-grid {
    display: grid;
    gap: 15px;
  }

  .alert {
    padding: 15px;
    border-radius: 8px;
    border-left: 4px solid;
  }

  .alert-critical {
    background: #fee;
    border-color: #c00;
  }

  .alert-warning {
    background: #ffc;
    border-color: #fa0;
  }

  .alert-success {
    background: #efe;
    border-color: #0a0;
  }

  .alert-header {
    margin-bottom: 8px;
  }

  .alert-body small {
    display: block;
    color: #666;
    margin-bottom: 5px;
  }

  .alert-body p {
    margin: 5px 0 0;
    font-size: 0.9rem;
  }

  /* Charts Section */
  .charts-section {
    padding: 60px 0;
    background: white;
  }

  .charts-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
    gap: 30px;
  }

  .chart-card {
    background: #f8fafc;
    padding: 25px;
    border-radius: 10px;
    border: 2px solid #e2e8f0;
  }

  .chart-card h2 {
    margin-bottom: 20px;
    color: #333;
    font-size: 1.3rem;
  }

  /* Table Section */
  .table-section {
    padding: 60px 0;
    background: #f8fafc;
  }

  .table-card {
    background: white;
    border-radius: 10px;
    overflow: hidden;
    border: 2px solid #e2e8f0;
  }

  .table-card h2 {
    padding: 20px;
    margin: 0;
    color: #333;
    font-size: 1.8rem;
  }

  .table-responsive {
    overflow-x: auto;
  }

  table {
    width: 100%;
    border-collapse: collapse;
  }

  th {
    background: #667eea;
    color: white;
    padding: 15px;
    text-align: left;
    font-weight: 600;
  }

  td {
    padding: 15px;
    border-bottom: 1px solid #eee;
  }

  tr:hover {
    background: #f9f9f9;
  }

  .badge {
    display: inline-block;
    padding: 4px 12px;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 600;
    background: #e2e8f0;
    color: #475569;
  }

  /* Insights Section */
  .insights-section {
    padding: 60px 0;
    background: white;
  }

  .insights-section h2 {
    margin-bottom: 30px;
    color: #333;
    font-size: 2rem;
  }

  .insights-section h3 {
    margin: 30px 0 15px;
    color: #667eea;
    font-size: 1.5rem;
  }

  .insights-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
  }

  .insight-card {
    padding: 20px;
    border-radius: 10px;
    border: 2px solid;
  }

  .insight-card.critical {
    background: #fee;
    border-color: #c00;
  }

  .insight-card.quick-win {
    background: #efe;
    border-color: #0a0;
  }

  .insight-priority {
    display: inline-block;
    padding: 4px 12px;
    background: #c00;
    color: white;
    border-radius: 12px;
    font-size: 12px;
    font-weight: 600;
    margin-bottom: 10px;
  }

  .insight-card h4 {
    margin: 10px 0;
    color: #333;
  }

  .insight-impact,
  .insight-current {
    color: #666;
    font-size: 0.9rem;
    margin: 8px 0;
  }

  .insight-action {
    color: #333;
    font-size: 0.95rem;
    margin: 8px 0;
  }

  .insight-posts small {
    color: #999;
  }

  /* CTA Section */
  .dashboard-cta {
    padding: 80px 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
  }

  .dashboard-cta h2 {
    font-size: 2.5rem;
    font-weight: 900;
    margin-bottom: 1rem;
  }

  .dashboard-cta p {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.95;
  }

  .cta-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .btn-primary,
  .btn-secondary {
    padding: 1rem 2rem;
    border-radius: 50px;
    font-weight: 700;
    text-decoration: none;
    transition: all 0.3s ease;
    display: inline-block;
  }

  .btn-primary {
    background: white;
    color: #667eea;
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.2);
    border: 2px solid white;
    color: white;
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  /* Breadcrumbs */
  .breadcrumbs {
    padding: 140px 0 20px;
    background: #f8fafc;
  }

  .breadcrumbs ol {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    gap: 0.5rem;
    align-items: center;
    font-size: 0.9rem;
  }

  .breadcrumbs li {
    display: flex;
    align-items: center;
    color: #64748b;
  }

  .breadcrumbs li:not(:last-child)::after {
    content: "‚Ä∫";
    margin-left: 0.5rem;
    color: #cbd5e1;
  }

  .breadcrumbs a {
    color: #667eea;
    text-decoration: none;
  }

  .breadcrumbs a:hover {
    text-decoration: underline;
  }

  @media (max-width: 768px) {
    .dashboard-hero {
      padding: 100px 0 40px;
    }

    .dashboard-hero h1 {
      font-size: 2rem;
    }

    .charts-grid {
      grid-template-columns: 1fr;
    }

    .cta-buttons {
      flex-direction: column;
    }
  }
</style>
