name: n8n QA Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test:
    name: Run n8n Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: tests/n8n-qa/package-lock.json

      - name: Install dependencies
        working-directory: tests/n8n-qa
        run: npm ci

      - name: Create .env file
        working-directory: tests/n8n-qa
        run: |
          cat > .env << EOF
          N8N_API_BASE=${{ secrets.N8N_API_BASE }}
          N8N_API_TOKEN=${{ secrets.N8N_API_TOKEN }}
          WORKFLOW_IDS=${{ secrets.WORKFLOW_IDS }}
          WEBHOOK_TEST_URL_CONTACT_FORM=${{ secrets.WEBHOOK_TEST_URL_CONTACT_FORM }}
          WEBHOOK_TEST_URL_LEAD_CAPTURE=${{ secrets.WEBHOOK_TEST_URL_LEAD_CAPTURE }}
          TEST_TIMEOUT=30000
          POLL_INTERVAL=1000
          POLL_MAX_ATTEMPTS=30
          EOF

      - name: Run smoke tests
        working-directory: tests/n8n-qa
        run: npm run test:smoke
        continue-on-error: true

      - name: Run contract tests
        working-directory: tests/n8n-qa
        run: npm run test:contract
        continue-on-error: true

      - name: Run error tests
        working-directory: tests/n8n-qa
        run: npm run test:error
        continue-on-error: true

      - name: Run schedule tests
        working-directory: tests/n8n-qa
        run: npm run test:schedule
        continue-on-error: true

      - name: Run full test suite with JSON output
        working-directory: tests/n8n-qa
        run: npm run test:ci

      - name: Generate test report
        working-directory: tests/n8n-qa
        run: npm run report
        if: always()

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            tests/n8n-qa/test-results.json
            tests/n8n-qa/docs/TEST-REPORT.md
            tests/n8n-qa/coverage/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = 'tests/n8n-qa/docs/TEST-REPORT.md';

            if (fs.existsSync(reportPath)) {
              const report = fs.readFileSync(reportPath, 'utf8');
              const comment = `## n8n Test Report\n\n${report}`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }

      - name: Send Slack notification (optional)
        if: failure() && github.event_name == 'schedule'
        uses: slackapi/slack-github-action@v1
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            {
              "text": "❌ n8n Nightly Tests Failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*n8n QA Test Suite Failed*\n\nNightly test run has failures. Check the workflow run for details."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Workflow:*\n${{ github.workflow }}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Run:*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>"
                    }
                  ]
                }
              ]
            }
