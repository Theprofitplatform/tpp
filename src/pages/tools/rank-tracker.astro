---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import ToolBadge from '../../components/ToolBadge.astro';

// Use relative path for Cloudflare Pages Functions
const apiUrl = '/api/serp';
---

<BaseLayout title="Free Google Rank Tracker | Check Your Rankings Now">
  <Header />
  
  <!-- Tool Analytics Tracker -->
  <script is:inline src="/js/tool-analytics.js"></script>

  <main id="main-content" role="main">
    <!-- Enhanced Hero Section -->
    <section class="rank-hero-enhanced" data-tool-name="rank-tracker">
      <div class="hero-background-effects">
        <div class="gradient-orb orb-1"></div>
        <div class="gradient-orb orb-2"></div>
        <div class="gradient-orb orb-3"></div>
        <div class="grid-overlay"></div>
      </div>

      <div class="container">
        <div class="rank-hero-content-new">
          <!-- Badge -->
          <div class="hero-badge">
            <span class="badge-icon">🎯</span>
            <span class="badge-text">100% Free • No Signup Required</span>
            <span class="badge-pulse"></span>
          </div>

          <!-- Main Heading -->
          <h1 class="hero-title-new">
            <span class="title-line-1">Check Your</span>
            <span class="title-line-2">Google Rankings</span>
            <span class="title-accent">Instantly</span>
          </h1>

          <!-- Subtitle -->
          <p class="hero-description-new">
            Track where your website appears on Google for any keyword. Get real-time SERP data
            from positions 1-100 with our live API. Know exactly where you stand against competitors.
          </p>

          <!-- Feature Pills -->
          <div class="feature-pills-new">
            <div class="pill">
              <i class="fas fa-bolt"></i>
              <span>Real-time SERP Data</span>
            </div>
            <div class="pill">
              <i class="fas fa-chart-line"></i>
              <span>Top 100 Positions</span>
            </div>
            <div class="pill">
              <i class="fas fa-globe-asia"></i>
              <span>Location Specific</span>
            </div>
            <div class="pill">
              <i class="fas fa-shield-alt"></i>
              <span>Privacy Protected</span>
            </div>
          </div>

          <!-- Trust Indicators (Honest) -->
          <div class="trust-indicators-new">
            <div class="trust-item">
              <i class="fas fa-check-circle"></i>
              <span>Accurate SERP Results</span>
            </div>
            <div class="trust-item">
              <i class="fas fa-lock"></i>
              <span>SSL Encrypted</span>
            </div>
            <div class="trust-item">
              <i class="fas fa-tachometer-alt"></i>
              <span>Fast & Reliable</span>
            </div>
          </div>

          <!-- Quick Start Arrow -->
          <div class="scroll-indicator">
            <span class="scroll-text">Start checking your rankings ↓</span>
            <div class="scroll-arrow">
              <i class="fas fa-chevron-down"></i>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Rank Checker Tool -->
    <section class="rank-checker-section">
      <div class="container">
        <div class="checker-card">
          <form id="rankCheckerForm" class="checker-form">
            <div class="form-grid">
              <div class="form-group">
                <label for="keyword">
                  <i class="fas fa-search"></i>
                  Keyword or Search Phrase
                </label>
                <div class="input-wrapper">
                  <input
                    type="text"
                    id="keyword"
                    name="keyword"
                    placeholder="e.g., plumber Sydney"
                    required
                    autofocus
                    autocomplete="off"
                    spellcheck="false"
                    minlength="2"
                    maxlength="200"
                  />
                  <span class="validation-icon" aria-hidden="true"></span>
                </div>
                <small class="field-hint">Enter the exact keyword you want to check</small>
                <small class="field-error" style="display: none;">Please enter a valid keyword (2-200 characters)</small>
              </div>

              <div class="form-group">
                <label for="domain">
                  <i class="fas fa-globe"></i>
                  Your Website URL
                </label>
                <div class="input-wrapper">
                  <input
                    type="text"
                    id="domain"
                    name="domain"
                    placeholder="e.g., yourwebsite.com.au"
                    required
                    autocomplete="url"
                    spellcheck="false"
                    inputmode="url"
                    pattern="^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-zA-Z]{2,}$"
                  />
                  <span class="validation-icon" aria-hidden="true"></span>
                </div>
                <small class="field-hint">We'll accept it with or without http:// or www</small>
                <small class="field-error" style="display: none;">Please enter a valid domain (e.g., example.com or mysite.com.au)</small>
              </div>

              <div class="form-group">
                <label for="location">
                  <i class="fas fa-map-marker-alt"></i>
                  Location
                  <span class="tooltip-icon" title="Simulates a Google search from this location. Results may vary based on geo-targeting.">
                    <i class="fas fa-info-circle"></i>
                  </span>
                </label>
                <select id="location" name="location">
                  <option value="Australia">Australia (National)</option>
                  <option value="Sydney,New South Wales,Australia">Sydney, NSW</option>
                  <option value="Melbourne,Victoria,Australia">Melbourne, VIC</option>
                  <option value="Brisbane,Queensland,Australia">Brisbane, QLD</option>
                  <option value="Perth,Western Australia,Australia">Perth, WA</option>
                  <option value="Adelaide,South Australia,Australia">Adelaide, SA</option>
                </select>
                <small>
                  <i class="fas fa-search-location" style="color: #667eea;"></i>
                  Simulates Google SERP from selected location
                </small>
              </div>
            </div>

            <button type="submit" class="btn btn-primary btn-lg btn-block" id="checkButton">
              <i class="fas fa-search"></i>
              Check My Ranking
            </button>
          </form>

          <!-- Loading State with Progressive Messages -->
          <div id="loadingState" class="loading-state" style="display: none;" aria-live="polite">
            <div class="spinner"></div>
            <p id="loadingMessage">Initializing rank check...</p>
            <small id="loadingSubtext">Preparing API request</small>
          </div>

          <!-- Error State -->
          <div id="errorState" class="error-state" style="display: none;" role="alert" aria-live="assertive">
            <i class="fas fa-exclamation-circle"></i>
            <h3>Oops! Something went wrong</h3>
            <p id="errorMessage"></p>
            <div class="error-actions">
              <button class="btn-secondary" onclick="location.reload()">
                <i class="fas fa-redo"></i> Try Again
              </button>
              <a href="/contact" class="btn-primary">
                <i class="fas fa-comment"></i> Get Manual Check
              </a>
            </div>
            <p class="error-help">Need help? Call us at <a href="tel:+61487286451" class="phone-link">0487 286 451</a></p>
          </div>

          <!-- Results Section -->
          <div id="resultsSection" class="results-section" style="display: none;" role="region" aria-label="Ranking results" aria-live="polite">
            <div class="result-header">
              <h2>Your Ranking Results</h2>
              <div class="result-actions-group">
                <button class="btn btn-secondary btn-sm" id="copyResultsBtn" title="Copy results to clipboard">
                  <i class="fas fa-copy"></i> Copy Results
                </button>
                <button class="btn btn-secondary btn-sm" id="shareResultsBtn" title="Copy shareable link">
                  <i class="fas fa-share-alt"></i> Share Link
                </button>
                <button class="btn btn-secondary btn-sm" onclick="location.href = location.pathname">
                  <i class="fas fa-redo"></i> Check Another
                </button>
              </div>
            </div>

            <div id="resultContent" class="result-content">
              <!-- Results will be inserted here -->
            </div>

            <!-- Historical Chart Section (Collapsed by default) -->
            <div id="historySection" class="history-section" style="display: none;">
              <details class="history-accordion">
                <summary class="history-header">
                  <div class="history-title">
                    <i class="fas fa-history"></i>
                    <h3>Rank History</h3>
                    <span class="history-count" id="historyCount"></span>
                  </div>
                  <p class="history-subtitle">Track how your ranking changes over time</p>
                  <i class="fas fa-chevron-down accordion-icon"></i>
                </summary>
                <div class="history-content">
                  <div id="historyChart" class="history-chart">
                    <!-- Chart will be inserted here -->
                  </div>
                  <div id="historyComparison" class="history-comparison">
                    <!-- Comparison data will be inserted here -->
                  </div>
                </div>
              </details>
            </div>

            <!-- Revenue Impact & CTA will be inserted here by JavaScript -->
            <div id="revenueImpactSection"></div>
          </div>
        </div>

        <!-- Info Cards -->
        <div class="info-grid">
          <div class="info-card">
            <div class="info-icon">
              <i class="fas fa-question-circle"></i>
            </div>
            <h3>How It Works</h3>
            <p>
              We query Google's search results in real-time and find where your
              website appears for your target keyword. Results are 100% accurate
              and updated instantly.
            </p>
          </div>

          <div class="info-card">
            <div class="info-icon">
              <i class="fas fa-chart-line"></i>
            </div>
            <h3>Why Rankings Matter</h3>
            <p>
              75% of users never scroll past the first page of Google. Ranking
              in the top 3 positions can increase your traffic by 10-20x compared
              to page 2.
            </p>
          </div>

          <div class="info-card">
            <div class="info-icon">
              <i class="fas fa-rocket"></i>
            </div>
            <h3>Improve Your Rank</h3>
            <p>
              Not happy with your ranking? Our SEO experts specialize in getting
              Sydney businesses to page 1. Get a free audit to see how we can help.
            </p>
          </div>
        </div>
      </div>
    </section>

  </main>
</BaseLayout>

<script define:vars={{ apiUrl }}>
  // XSS Protection: Sanitize user input
  function escapeHtml(text) {
    const map = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#039;',
      '/': '&#x2F;'
    };
    return String(text).replace(/[&<>"'/]/g, (m) => map[m]);
  }

  // Enhanced domain matching: Handle www/non-www variants
  function matchDomain(searchDomain, resultUrl) {
    try {
      const url = new URL(resultUrl.startsWith('http') ? resultUrl : 'https://' + resultUrl);
      const resultDomain = url.hostname.toLowerCase();
      const searchDomainClean = searchDomain.toLowerCase()
        .replace(/^www\./, '')
        .replace(/^https?:\/\//, '')
        .replace(/\/.*$/, '');

      // Match with and without www
      const resultDomainWithoutWww = resultDomain.replace(/^www\./, '');

      return resultDomainWithoutWww === searchDomainClean ||
             resultDomain === searchDomainClean ||
             resultDomain === 'www.' + searchDomainClean;
    } catch (e) {
      return false;
    }
  }

  // Analytics tracking (inline version)
  function trackEvent(eventName, params = {}) {
    if (typeof window !== 'undefined' && window.gtag) {
      window.gtag('event', eventName, params);
    }
    if (typeof window !== 'undefined' && window.fbq) {
      if (eventName === 'tool_started') {
        window.fbq('track', 'InitiateCheckout', { content_name: 'Rank Tracker' });
      } else if (eventName === 'cta_clicked') {
        window.fbq('track', 'Lead', { value: 500, currency: 'AUD' });
      }
    }
  }

  // Revenue calculator for ranking impact
  // NOTE: These are ESTIMATES based on industry averages and may not reflect your actual results
  function calculateRankingImpact(currentRank, keyword) {
    const avgConversion = 0.04; // 4% estimated for local business - your rate may vary significantly
    const avgOrderValue = 350; // AUD estimated average - varies by industry

    // CTR by position (2024 data)
    const ctrByPosition = {
      1: 0.396, 2: 0.181, 3: 0.104, 4: 0.069, 5: 0.055,
      6: 0.045, 7: 0.039, 8: 0.033, 9: 0.029, 10: 0.025,
      11: 0.015
    };

    const currentCTR = ctrByPosition[currentRank] || (currentRank > 10 ? 0.01 : 0.02);
    const targetCTR = ctrByPosition[1]; // Position #1 benchmark

    // Estimate monthly searches based on keyword length (rough approximation only)
    // WARNING: This is a basic estimate. Use Google Keyword Planner for accurate data
    const words = keyword.trim().split(/\s+/).length;
    let baseVolume = words === 1 ? 8000 : words === 2 ? 3000 : words === 3 ? 1200 : 500;
    const hasLocation = /sydney|melbourne|brisbane|perth|adelaide|australia/i.test(keyword);
    if (hasLocation) baseVolume *= 0.4;
    const estimatedSearches = Math.round(baseVolume);

    const currentVisitors = estimatedSearches * currentCTR;
    const potentialVisitors = estimatedSearches * targetCTR;
    const lostVisitors = potentialVisitors - currentVisitors;

    const lostConversions = lostVisitors * avgConversion;
    const monthlyLoss = lostConversions * avgOrderValue;

    return {
      monthlyLoss: Math.round(monthlyLoss),
      yearlyLoss: Math.round(monthlyLoss * 12),
      lostVisitors: Math.round(lostVisitors),
      lostConversions: Math.round(lostConversions),
      estimatedSearches: Math.round(estimatedSearches),
      severity: currentRank > 10 ? 'critical' : currentRank > 3 ? 'warning' : 'info'
    };
  }

  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('rankCheckerForm');
    const loadingState = document.getElementById('loadingState');
    const errorState = document.getElementById('errorState');
    const resultsSection = document.getElementById('resultsSection');
    const resultContent = document.getElementById('resultContent');
    const errorMessage = document.getElementById('errorMessage');

    let hasRun = false; // Track if tool has been used

    // Permalink Support: Load from URL params
    const urlParams = new URLSearchParams(window.location.search);
    const urlKeyword = urlParams.get('keyword');
    const urlDomain = urlParams.get('domain');
    const urlLocation = urlParams.get('location');

    if (urlKeyword && urlDomain) {
      // Auto-populate form from URL
      document.getElementById('keyword').value = decodeURIComponent(urlKeyword);
      document.getElementById('domain').value = decodeURIComponent(urlDomain);
      if (urlLocation) {
        document.getElementById('location').value = decodeURIComponent(urlLocation);
      }

      // Auto-submit if all required params present
      setTimeout(() => {
        form.dispatchEvent(new Event('submit'));
      }, 500);
    }

    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      hasRun = true; // Mark that tool has been used

      const keyword = document.getElementById('keyword').value.trim();
      const domain = document.getElementById('domain').value.trim();
      const location = document.getElementById('location').value;

      // Track tool usage (Discord notification)
      if (window.trackToolUsage) {
        window.trackToolUsage('Rank Tracker', { keyword: keyword, location: location });
      }

      // Input validation
      if (!keyword || keyword.length < 2) {
        errorState.style.display = 'block';
        errorMessage.textContent = 'Please enter a valid keyword (at least 2 characters)';
        return;
      }

      if (keyword.length > 200) {
        errorState.style.display = 'block';
        errorMessage.textContent = 'Keywords must be under 200 characters';
        return;
      }

      // Enhanced domain normalization and validation
      let cleanDomain = domain.toLowerCase()
        .replace(/^https?:\/\//, '')     // Remove protocol
        .replace(/^www\./, '')             // Remove www
        .replace(/\/.*$/, '')              // Remove paths
        .replace(/:\d+$/, '')              // Remove port numbers
        .trim();

      // Handle common input variations
      if (!cleanDomain) {
        errorState.style.display = 'block';
        errorMessage.textContent = 'Please enter your website domain';
        return;
      }

      // SSRF Protection: Block localhost and private IP ranges
      const ssrfPatterns = [
        /^localhost$/i,
        /^127\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,  // 127.0.0.0/8
        /^10\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,   // 10.0.0.0/8
        /^172\.(1[6-9]|2\d|3[01])\.\d{1,3}\.\d{1,3}$/, // 172.16.0.0/12
        /^192\.168\.\d{1,3}\.\d{1,3}$/,      // 192.168.0.0/16
        /^169\.254\.\d{1,3}\.\d{1,3}$/,      // 169.254.0.0/16 (link-local)
        /^\[?::1\]?$/i,                       // IPv6 localhost
        /^\[?fe80::/i,                        // IPv6 link-local
        /^\[?fc00::/i,                        // IPv6 private
      ];

      if (ssrfPatterns.some(pattern => pattern.test(cleanDomain))) {
        errorState.style.display = 'block';
        errorMessage.textContent = 'Private/local domains are not supported. Please use a public domain name.';
        return;
      }

      // Validate domain format (supports IDN, subdomains, all TLDs)
      const domainRegex = /^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i;

      if (!domainRegex.test(cleanDomain)) {
        errorState.style.display = 'block';
        errorMessage.textContent = 'Please enter a valid domain (e.g., example.com.au or mysite.com)';
        return;
      }

      // Rate limiting - prevent spam
      const RATE_LIMIT_KEY = 'rank_check_last_request';
      const RATE_LIMIT_SECONDS = 10;
      const now = Date.now();
      const lastRequest = localStorage.getItem(RATE_LIMIT_KEY);

      if (lastRequest) {
        const timeSinceLastRequest = (now - parseInt(lastRequest)) / 1000;
        if (timeSinceLastRequest < RATE_LIMIT_SECONDS) {
          const waitTime = Math.ceil(RATE_LIMIT_SECONDS - timeSinceLastRequest);
          errorState.style.display = 'block';
          errorMessage.textContent = `Please wait ${waitTime} seconds between checks to prevent spam`;
          return;
        }
      }

      localStorage.setItem(RATE_LIMIT_KEY, now.toString());

      // Track tool usage
      trackEvent('tool_started', {
        tool_name: 'Rank Tracker',
        keyword: keyword,
        domain: domain,
        location: location,
        timestamp: Date.now()
      });

      // Hide all states
      form.style.display = 'none';
      errorState.style.display = 'none';
      resultsSection.style.display = 'none';
      loadingState.style.display = 'block';

      // Check cache first (5-minute TTL)
      const cacheKey = `rank_${cleanDomain}_${keyword}_${location}`;
      const cached = localStorage.getItem(cacheKey);
      const cacheTime = localStorage.getItem(`${cacheKey}_time`);

      if (cached && cacheTime && (Date.now() - parseInt(cacheTime)) < 5 * 60 * 1000) {
        // Use cached result
        form.style.display = 'none';
        resultsSection.style.display = 'block';

        const cachedData = JSON.parse(cached);
        displayResults(cachedData, keyword);

        // Show cache indicator
        const cacheNotice = document.createElement('div');
        cacheNotice.className = 'cache-notice';
        cacheNotice.innerHTML = '<i class="fas fa-clock"></i> Showing cached results (5 min old). <button onclick="this.parentElement.remove(); location.reload();" style="text-decoration: underline; background: none; border: none; color: inherit; cursor: pointer;">Run fresh check</button>';
        resultContent.insertBefore(cacheNotice, resultContent.firstChild);

        fetchHistory(keyword, cleanDomain, location);
        return;
      }

      // Progressive loading messages
      const loadingMessage = document.getElementById('loadingMessage');
      const loadingSubtext = document.getElementById('loadingSubtext');

      const msg1 = setTimeout(() => {
        loadingMessage.textContent = 'Contacting Google Search API...';
        loadingSubtext.textContent = 'Fetching SERP data';
      }, 800);

      const msg2 = setTimeout(() => {
        loadingMessage.textContent = 'Parsing top 100 results...';
        loadingSubtext.textContent = 'Analyzing search rankings';
      }, 1800);

      const msg3 = setTimeout(() => {
        loadingMessage.textContent = 'Matching your domain...';
        loadingSubtext.textContent = 'Almost done';
      }, 2800);

      try {
        // API Request logging for debugging
        const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
        const requestPayload = { keyword, domain: cleanDomain, location };

        console.log(`[${requestId}] Rank Check Request:`, {
          timestamp: new Date().toISOString(),
          payload: requestPayload,
          cached: false
        });

        // Timeout protection (30 seconds)
        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), 30000);
        const startTime = Date.now();

        const response = await fetch(`${apiUrl}/rank-check`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-Request-ID': requestId
          },
          body: JSON.stringify(requestPayload),
          signal: controller.signal
        });

        clearTimeout(timeoutId);
        const responseTime = Date.now() - startTime;

        console.log(`[${requestId}] Response received:`, {
          status: response.status,
          ok: response.ok,
          responseTime: `${responseTime}ms`,
          contentType: response.headers.get('content-type')
        });

        // Clear loading message timeouts
        clearTimeout(msg1);
        clearTimeout(msg2);
        clearTimeout(msg3);

        // Graceful API degradation
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
          // API not available - show fallback option
          loadingState.style.display = 'none';
          errorState.style.display = 'block';
          errorMessage.innerHTML = `
            <strong>Rank Tracker API Unavailable</strong>
            <p>Our automated rank checking is temporarily offline, but we can still help you!</p>
            <div style="background: #f0f9ff; border-left: 4px solid #667eea; padding: 1rem; margin: 1rem 0; border-radius: 8px;">
              <h4 style="margin: 0 0 0.5rem 0; color: #667eea;">
                <i class="fas fa-user-headset"></i> Get a Manual Rank Check
              </h4>
              <p style="margin-bottom: 1rem;">Our SEO team will personally check your rankings and send you a detailed report within 24 hours.</p>
              <a href="/contact?subject=Manual%20Rank%20Check&keyword=${encodeURIComponent(keyword)}&domain=${encodeURIComponent(cleanDomain)}" class="btn btn-primary" style="display: inline-block; background: #667eea; color: white; padding: 0.75rem 1.5rem; border-radius: 8px; text-decoration: none; font-weight: 600;">
                Request Free Manual Check →
              </a>
            </div>
            <p><strong>Or try again later</strong> - we're working to restore the automated service.</p>
          `;
          return;
        }

        const data = await response.json();

        console.log(`[${requestId}] API Response:`, {
          success: data.success,
          found: data.data?.found,
          rank: data.data?.rank,
          dataKeys: Object.keys(data.data || {})
        });

        if (!response.ok || !data.success) {
          console.error(`[${requestId}] API Error:`, data.error);
          throw new Error(data.error || 'Failed to check ranking');
        }

        // Cache successful result
        localStorage.setItem(cacheKey, JSON.stringify(data.data));
        localStorage.setItem(`${cacheKey}_time`, Date.now().toString());

        console.log(`[${requestId}] Result cached successfully`);

        // Show results
        loadingState.style.display = 'none';
        resultsSection.style.display = 'block';
        displayResults(data.data, keyword);

        // Update URL for sharing (without page reload)
        const shareUrl = new URL(window.location.href);
        shareUrl.searchParams.set('keyword', encodeURIComponent(keyword));
        shareUrl.searchParams.set('domain', encodeURIComponent(cleanDomain));
        shareUrl.searchParams.set('location', encodeURIComponent(location));
        window.history.replaceState({}, '', shareUrl.toString());

        // Track results viewed
        trackEvent('tool_completed', {
          tool_name: 'Rank Tracker',
          rank: data.data.rank,
          found: data.data.found
        });

        // Fetch and display history
        fetchHistory(keyword, cleanDomain, location);

      } catch (error) {
        // Clear loading message timeouts on error
        clearTimeout(msg1);
        clearTimeout(msg2);
        clearTimeout(msg3);

        // Log error with context
        console.error(`[${requestId || 'unknown'}] Rank check error:`, {
          name: error.name,
          message: error.message,
          stack: error.stack?.split('\n').slice(0, 3),
          keyword,
          domain: cleanDomain,
          location
        });

        loadingState.style.display = 'none';
        errorState.style.display = 'block';

        // Enhanced error messages with actionable suggestions
        const errorMsg = error.name === 'AbortError' ? 'timeout' : (error.message || '');
        let errorHTML = '';

        if (errorMsg.includes('not yet available') || errorMsg.includes('not configured')) {
          errorHTML = `
            <strong>Rank tracker is temporarily offline</strong>
            <p>We're experiencing technical difficulties. Here's what you can do:</p>
            <ul style="text-align: left; margin: 1rem 0; padding-left: 2rem;">
              <li>Try again in a few minutes</li>
              <li><a href="/contact" style="color: #667eea; text-decoration: underline;">Request a manual check</a> from our team</li>
              <li>Check our <a href="https://twitter.com/profitplatform" style="color: #667eea; text-decoration: underline;">status updates</a></li>
            </ul>
          `;
        } else if (errorMsg.includes('rate limit')) {
          const waitTime = 10;
          errorHTML = `
            <strong>Too many requests detected</strong>
            <p>To maintain service quality, we limit checks to once every ${waitTime} seconds.</p>
            <p><strong>Tip:</strong> Use the <i class="fas fa-share-alt"></i> Share Link button to revisit results without re-checking.</p>
          `;
        } else if (errorMsg.includes('network') || errorMsg.includes('fetch') || errorMsg.includes('Failed to fetch')) {
          errorHTML = `
            <strong>Connection error</strong>
            <p>We couldn't reach our ranking API. Try these steps:</p>
            <ul style="text-align: left; margin: 1rem 0; padding-left: 2rem;">
              <li>Check your internet connection</li>
              <li>Disable VPN or proxy if active</li>
              <li>Try a different browser</li>
              <li>Clear browser cache and reload</li>
            </ul>
          `;
        } else if (errorMsg.includes('timeout')) {
          errorHTML = `
            <strong>Request timed out</strong>
            <p>The ranking check took too long. This can happen with:</p>
            <ul style="text-align: left; margin: 1rem 0; padding-left: 2rem;">
              <li>Very competitive keywords (lots of results to parse)</li>
              <li>Slower network connections</li>
              <li>High server load</li>
            </ul>
            <p><strong>Suggestion:</strong> Try again with a more specific keyword (e.g., "plumber bondi" vs "plumber")</p>
          `;
        } else {
          errorHTML = `
            <strong>Something went wrong</strong>
            <p>We encountered an unexpected error. Please:</p>
            <ul style="text-align: left; margin: 1rem 0; padding-left: 2rem;">
              <li>Verify your domain is spelled correctly</li>
              <li>Ensure the domain is publicly accessible</li>
              <li>Try a different keyword</li>
              <li><a href="/contact" style="color: #667eea; text-decoration: underline;">Contact support</a> if the issue persists</li>
            </ul>
            <p style="font-size: 0.875rem; opacity: 0.8;">Error code: ${errorMsg.substring(0, 50)}</p>
          `;
        }

        errorMessage.innerHTML = errorHTML;

        // Track errors in analytics
        trackEvent('tool_error', {
          tool_name: 'Rank Tracker',
          error_type: errorMsg.substring(0, 100),
          keyword: keyword,
          domain: domain,
          timestamp: Date.now()
        });
      }
    });

    function displayResults(data, keyword) {
      const { domain, location, rank, found, result } = data;

      let html = '';

      if (found) {
        const page = Math.ceil(rank / 10);
        const rankClass = rank <= 3 ? 'excellent' : rank <= 10 ? 'good' : rank <= 20 ? 'fair' : 'poor';

        // CTR data for visualization
        const ctrData = {
          1: 39.6, 2: 18.1, 3: 10.4, 4: 6.9, 5: 5.5,
          6: 4.5, 7: 3.9, 8: 3.3, 9: 2.9, 10: 2.5
        };
        const currentCTR = ctrData[rank] || (rank > 10 ? 1.0 : 1.5);
        const targetCTR = ctrData[1];
        const rankColor = rank <= 3 ? '#10b981' : rank <= 10 ? '#f59e0b' : '#ef4444';

        html = `
          <!-- Hero Rank Display -->
          <div class="rank-hero rank-${rankClass}">
            <div class="rank-visual">
              <div class="rank-circle" style="border-color: ${rankColor};">
                <span class="rank-hash">#</span>
                <span class="rank-number">${rank}</span>
              </div>
              <div class="rank-label">Google Position</div>
            </div>

            <!-- Position Indicator Bar -->
            <div class="position-indicator">
              <div class="position-label">Page ${page} of Google • ${rank <= 3 ? 'Top 3' : rank <= 10 ? 'First Page' : 'Page 2+'}</div>
              <div class="position-track">
                ${Array.from({length: 10}, (_, i) => {
                  const pos = i + 1;
                  const isActive = pos === rank;
                  const isPassed = pos < rank;
                  return `<div class="position-dot ${isActive ? 'active' : ''} ${isPassed ? 'passed' : ''}" style="${isActive ? `background: ${rankColor}; box-shadow: 0 0 20px ${rankColor}` : ''}">
                    <span class="pos-num">${pos}</span>
                  </div>`;
                }).join('')}
                ${rank > 10 ? `<div class="position-dot active" style="background: ${rankColor};">10+</div>` : ''}
              </div>
            </div>

            <!-- Quick Stats -->
            <div class="quick-stats">
              <div class="quick-stat">
                <div class="stat-icon" style="color: ${rankColor};"><i class="fas fa-mouse-pointer"></i></div>
                <div class="stat-info">
                  <div class="stat-value">${currentCTR}%</div>
                  <div class="stat-name">Click Rate</div>
                </div>
              </div>
              <div class="quick-stat">
                <div class="stat-icon" style="color: ${rankColor};"><i class="fas fa-search"></i></div>
                <div class="stat-info">
                  <div class="stat-value">"${escapeHtml(keyword.length > 25 ? keyword.substring(0, 25) + '...' : keyword)}"</div>
                  <div class="stat-name">Keyword</div>
                </div>
              </div>
              <div class="quick-stat">
                <div class="stat-icon" style="color: ${rankColor};"><i class="fas fa-map-marker-alt"></i></div>
                <div class="stat-info">
                  <div class="stat-value">${location}</div>
                  <div class="stat-name">Location</div>
                </div>
              </div>
            </div>
          </div>

          <!-- CTR Comparison Chart -->
          <div class="ctr-comparison">
            <h3><i class="fas fa-chart-bar"></i> Click-Through Rate Comparison</h3>
            <p class="chart-desc">See how your position affects traffic</p>
            <div class="ctr-chart">
              <div class="ctr-bar-group">
                <div class="ctr-bar your-ctr" style="width: ${(currentCTR / targetCTR * 100)}%; background: ${rankColor};">
                  <span class="ctr-label">You (#${rank}): ${currentCTR}%</span>
                </div>
              </div>
              <div class="ctr-bar-group">
                <div class="ctr-bar target-ctr" style="width: 100%; background: #10b981;">
                  <span class="ctr-label">Position #1: ${targetCTR}%</span>
                </div>
              </div>
            </div>
            <div class="ctr-insight">
              ${rank > 1 ? `<i class="fas fa-arrow-up"></i> Moving to #1 would increase clicks by <strong>${Math.round((targetCTR / currentCTR - 1) * 100)}%</strong>` : '<i class="fas fa-trophy"></i> You\'re getting maximum clicks!'}
            </div>
          </div>

          ${result ? `
          <!-- Authentic Google SERP Preview -->
          <div class="google-serp-preview">
            <div class="serp-header">
              <svg class="google-logo" viewBox="0 0 272 92" width="92" height="30">
                <path fill="#EA4335" d="M115.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18C71.25 34.32 81.24 25 93.5 25s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44S80.99 39.2 80.99 47.18c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z"></path>
                <path fill="#FBBC05" d="M163.75 47.18c0 12.77-9.99 22.18-22.25 22.18s-22.25-9.41-22.25-22.18c0-12.85 9.99-22.18 22.25-22.18s22.25 9.32 22.25 22.18zm-9.74 0c0-7.98-5.79-13.44-12.51-13.44s-12.51 5.46-12.51 13.44c0 7.9 5.79 13.44 12.51 13.44s12.51-5.55 12.51-13.44z"></path>
                <path fill="#4285F4" d="M209.75 26.34v39.82c0 16.38-9.66 23.07-21.08 23.07-10.75 0-17.22-7.19-19.66-13.07l8.48-3.53c1.51 3.61 5.21 7.87 11.17 7.87 7.31 0 11.84-4.51 11.84-13v-3.19h-.34c-2.18 2.69-6.38 5.04-11.68 5.04-11.09 0-21.25-9.66-21.25-22.09 0-12.52 10.16-22.26 21.25-22.26 5.29 0 9.49 2.35 11.68 4.96h.34v-3.61h9.25zm-8.56 20.92c0-7.81-5.21-13.52-11.84-13.52-6.72 0-12.35 5.71-12.35 13.52 0 7.73 5.63 13.36 12.35 13.36 6.63 0 11.84-5.63 11.84-13.36z"></path>
                <path fill="#34A853" d="M225 3v65h-9.5V3h9.5z"></path>
                <path fill="#EA4335" d="M262.02 54.48l7.56 5.04c-2.44 3.61-8.32 9.83-18.48 9.83-12.6 0-22.01-9.74-22.01-22.18 0-13.19 9.49-22.18 20.92-22.18 11.51 0 17.14 9.16 18.98 14.11l1.01 2.52-29.65 12.28c2.27 4.45 5.8 6.72 10.75 6.72 4.96 0 8.4-2.44 10.92-6.14zm-23.27-7.98l19.82-8.23c-1.09-2.77-4.37-4.7-8.23-4.7-4.95 0-11.84 4.37-11.59 12.93z"></path>
                <path fill="#4285F4" d="M35.29 41.41V32H67c.31 1.64.47 3.58.47 5.68 0 7.06-1.93 15.79-8.15 22.01-6.05 6.3-13.78 9.66-24.02 9.66C16.32 69.35.36 53.89.36 34.91.36 15.93 16.32.47 35.3.47c10.5 0 17.98 4.12 23.6 9.49l-6.64 6.64c-4.03-3.78-9.49-6.72-16.97-6.72-13.86 0-24.7 11.17-24.7 25.03 0 13.86 10.84 25.03 24.7 25.03 8.99 0 14.11-3.61 17.39-6.89 2.66-2.66 4.41-6.46 5.1-11.65l-22.49.01z"></path>
              </svg>
              <span class="serp-time">About ${Math.floor(Math.random() * 500000000).toLocaleString()} results (0.${Math.floor(Math.random() * 90) + 10} seconds)</span>
            </div>
            <div class="google-result">
              <div class="result-url-row">
                <div class="result-favicon">
                  <svg width="26" height="26" viewBox="0 0 26 26">
                    <circle cx="13" cy="13" r="13" fill="${rankColor}"/>
                    <text x="13" y="18" fill="white" font-size="14" font-weight="600" text-anchor="middle">${domain.substring(0,1).toUpperCase()}</text>
                  </svg>
                </div>
                <div class="result-breadcrumb">
                  <span class="result-domain">${new URL(result.link).hostname.replace('www.', '')}</span>
                  <span class="result-arrow">›</span>
                  <span class="result-path">${new URL(result.link).pathname.split('/').filter(p => p).slice(0, 2).join(' › ') || 'Home'}</span>
                </div>
              </div>
              <h3 class="result-title">${escapeHtml(result.title)}</h3>
              <div class="result-snippet">${escapeHtml(result.snippet || '')}</div>
            </div>
          </div>
          ` : ''}

        `;
      } else {
        html = `
          <div class="rank-hero rank-not-found">
            <div class="rank-visual">
              <div class="rank-circle" style="border-color: #64748b;">
                <i class="fas fa-search-minus" style="font-size: 3rem;"></i>
              </div>
              <div class="rank-label">Not Ranking</div>
            </div>
            <div class="not-found-message">
              <h3>Not Found in Top 100</h3>
              <p><strong>${domain}</strong> was not found in the top 100 results for <strong>"${keyword}"</strong> in <strong>${location}</strong>.</p>
              <p class="recommendation">This means you're either ranking beyond position 100, or not ranking at all. Don't worry - we can help you get to page 1!</p>
            </div>
          </div>
        `;
      }

      resultContent.innerHTML = html;

      // Calculate and display revenue impact
      const revenueImpactSection = document.getElementById('revenueImpactSection');
      if (found && rank > 0) {
        const revenueImpact = calculateRankingImpact(rank, keyword);

        revenueImpactSection.innerHTML = `
          <!-- Revenue Impact Section -->
          <div class="revenue-impact-section">
            <div class="impact-card impact-${revenueImpact.severity}">
              <div class="impact-header">
                <div class="impact-icon">
                  ${revenueImpact.severity === 'critical' ? '<i class="fas fa-exclamation-triangle"></i>' :
                    revenueImpact.severity === 'warning' ? '<i class="fas fa-chart-line"></i>' :
                    '<i class="fas fa-trophy"></i>'}
                </div>
                <h3>${revenueImpact.severity === 'critical' ? 'Page 2+ Is Costing You Serious Money' :
                    revenueImpact.severity === 'warning' ? 'Revenue Opportunity: Get to Top 3' :
                    'Excellent! Protect Your Top Position'}</h3>
              </div>
              <div class="impact-stats">
                <div class="impact-stat">
                  <div class="stat-value">$${revenueImpact.monthlyLoss.toLocaleString()}</div>
                  <div class="stat-label">${revenueImpact.severity === 'info' ? 'Protected Monthly' : 'Lost Monthly'}</div>
                </div>
                <div class="impact-stat">
                  <div class="stat-value">$${revenueImpact.yearlyLoss.toLocaleString()}</div>
                  <div class="stat-label">${revenueImpact.severity === 'info' ? 'Protected Yearly' : 'Lost Yearly'}</div>
                </div>
                <div class="impact-stat">
                  <div class="stat-value">${revenueImpact.lostVisitors.toLocaleString()}</div>
                  <div class="stat-label">${revenueImpact.severity === 'info' ? 'Visitors Secured' : 'Lost Visitors/Month'}</div>
                </div>
              </div>
              <div class="impact-message">
                ${revenueImpact.severity === 'critical' ?
                  `<p>75% of users never scroll past page 1. You're invisible to an estimated <strong>${revenueImpact.lostVisitors.toLocaleString()} monthly visitors</strong>. Every month you wait could cost you approximately <strong>$${revenueImpact.monthlyLoss.toLocaleString()}</strong> in lost business.</p>
                  <p class="disclaimer-text"><em>⚠️ Revenue estimates based on industry averages (4% conversion, $350 AUD order value). Actual results vary significantly by industry, location, and competition. Search volume is estimated.</em></p>` :
                  revenueImpact.severity === 'warning' ?
                  `<p>Moving from #${rank} to top 3 could generate approximately <strong>$${revenueImpact.monthlyLoss.toLocaleString()}/month</strong> more revenue. Position #1 gets 2.5x more clicks than position #${rank}. Let's get you there.</p>
                  <p class="disclaimer-text"><em>⚠️ Revenue estimates based on industry averages (4% conversion, $350 AUD order value). Actual results vary significantly by industry, location, and competition.</em></p>` :
                  `<p>Top 3 ranking! You're capturing maximum traffic for this keyword. Maintain this position to protect approximately <strong>$${revenueImpact.monthlyLoss.toLocaleString()}/month</strong> from competitors.</p>
                  <p class="disclaimer-text"><em>⚠️ Revenue estimates based on industry averages (4% conversion, $350 AUD order value). Actual results vary by business.</em></p>`
                }
              </div>
            </div>
          </div>

          <!-- Dynamic CTA based on severity -->
          ${revenueImpact.severity === 'critical' ? `
          <div class="result-cta cta-emergency">
            <div class="cta-content">
              <div class="cta-badge">
                <i class="fas fa-rocket"></i>
                <span>EMERGENCY SEO SERVICE</span>
              </div>
              <h3>Get to Page 1 in 60-90 Days (Our Target)</h3>
              <p>Our emergency SEO service targets low-hanging fruit to get you visible fast. We've helped over 100 Australian businesses improve their rankings significantly.</p>
              <div class="cta-benefits">
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>60-90 day page 1 target</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Technical SEO fixes</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Monthly progress reports</span>
                </div>
              </div>
              <div class="cta-buttons">
                <a href="/contact" class="btn-emergency" onclick="trackEvent('cta_clicked', {cta_type: 'emergency', tool: 'Rank Tracker', position: 'results', rank: ${rank}})">
                  <span class="btn-main">Get Free SEO Strategy</span>
                  <span class="btn-sub">We'll show you how to reach page 1</span>
                </a>
                <a href="tel:+61487286451" class="btn-phone" onclick="trackEvent('cta_clicked', {cta_type: 'phone', tool: 'Rank Tracker', position: 'results'})">
                  <i class="fas fa-phone"></i>
                  <span>Call Now: 0487 286 451</span>
                </a>
              </div>
            </div>
          </div>
          ` : revenueImpact.severity === 'warning' ? `
          <div class="result-cta cta-warning">
            <div class="cta-content">
              <div class="cta-badge">
                <i class="fas fa-chart-line"></i>
                <span>RANKING OPTIMIZATION</span>
              </div>
              <h3>Break Into Top 3 & Triple Your Traffic</h3>
              <p>You're on page 1 - that's great! But positions #1-3 get 3x more clicks than #${rank}. Our targeted optimization gets you there faster.</p>
              <div class="cta-benefits">
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Competitor gap analysis</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Authority building strategy</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Weekly rank tracking</span>
                </div>
              </div>
              <div class="cta-buttons">
                <a href="/contact" class="btn-primary btn-lg" onclick="trackEvent('cta_clicked', {cta_type: 'primary', tool: 'Rank Tracker', position: 'results', rank: ${rank}})">
                  Get Free Top 3 Strategy →
                </a>
                <a href="tel:+61487286451" class="btn-phone" onclick="trackEvent('cta_clicked', {cta_type: 'phone', tool: 'Rank Tracker', position: 'results'})">
                  <i class="fas fa-phone"></i>
                  <span>0487 286 451</span>
                </a>
              </div>
            </div>
          </div>
          ` : `
          <div class="result-cta cta-success">
            <div class="cta-content">
              <div class="cta-badge">
                <i class="fas fa-shield-check"></i>
                <span>PROTECT YOUR POSITION</span>
              </div>
              <h3>Maintain Your Dominance with Ongoing SEO</h3>
              <p>You've earned a top position! Protect it with ongoing optimization and monitoring. Competitors are gunning for your spot.</p>
              <div class="cta-benefits">
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Daily rank monitoring</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Competitor alerts</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Content optimization</span>
                </div>
              </div>
              <div class="cta-buttons">
                <a href="/contact" class="btn-primary btn-lg" onclick="trackEvent('cta_clicked', {cta_type: 'primary', tool: 'Rank Tracker', position: 'results', rank: ${rank}})">
                  Get Ongoing SEO Quote →
                </a>
                <a href="tel:+61487286451" class="btn-secondary btn-lg" onclick="trackEvent('cta_clicked', {cta_type: 'phone', tool: 'Rank Tracker', position: 'results'})">
                  <i class="fas fa-phone"></i>
                  <span>0487 286 451</span>
                </a>
              </div>
            </div>
          </div>
          `}
        `;
      } else {
        // Not found - show emergency CTA
        revenueImpactSection.innerHTML = `
          <div class="result-cta cta-emergency">
            <div class="cta-content">
              <div class="cta-badge">
                <i class="fas fa-exclamation-triangle"></i>
                <span>CRITICAL: NOT RANKING</span>
              </div>
              <h3>You're Invisible on Google - Let's Fix That</h3>
              <p>Not ranking in top 100 means zero organic traffic. Our proven SEO process has helped 200+ Australian businesses get found on Google.</p>
              <div class="cta-benefits">
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Complete SEO audit</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Custom ranking strategy</span>
                </div>
                <div class="benefit">
                  <i class="fas fa-check"></i>
                  <span>Results-focused approach</span>
                </div>
              </div>
              <div class="cta-buttons">
                <a href="/contact" class="btn-emergency" onclick="trackEvent('cta_clicked', {cta_type: 'emergency', tool: 'Rank Tracker', position: 'results', rank: 0})">
                  <span class="btn-main">Get Emergency SEO Help</span>
                  <span class="btn-sub">Free audit shows exactly what to fix</span>
                </a>
                <a href="tel:+61487286451" class="btn-phone" onclick="trackEvent('cta_clicked', {cta_type: 'phone', tool: 'Rank Tracker', position: 'results'})">
                  <i class="fas fa-phone"></i>
                  <span>Call Now: 0487 286 451</span>
                </a>
              </div>
            </div>
          </div>
        `;
      }
    }

    function getRankAnalysis(rank) {
      if (rank <= 3) {
        return `
          <div class="analysis excellent">
            <i class="fas fa-trophy"></i>
            <p><strong>Excellent!</strong> You're in the top 3 positions. This is where you want to be.
            The top 3 results get 75% of all clicks. Keep optimizing to maintain this position!</p>
          </div>
        `;
      } else if (rank <= 10) {
        return `
          <div class="analysis good">
            <i class="fas fa-thumbs-up"></i>
            <p><strong>Good job!</strong> You're on page 1, which is great. However, moving into the
            top 3 positions could increase your traffic by 3-5x. We can help you get there.</p>
          </div>
        `;
      } else if (rank <= 20) {
        return `
          <div class="analysis fair">
            <i class="fas fa-chart-line"></i>
            <p><strong>You're close!</strong> You're on page 2, which gets very little traffic.
            With focused SEO work, we can get you to page 1 within 60-90 days.</p>
          </div>
        `;
      } else {
        return `
          <div class="analysis poor">
            <i class="fas fa-rocket"></i>
            <p><strong>Lots of room to grow!</strong> You're ranking, but too far down to get
            meaningful traffic. Our proven SEO strategies can dramatically improve your position.</p>
          </div>
        `;
      }
    }

    // Fetch and display historical data
    async function fetchHistory(keyword, domain, location) {
      try {
        const response = await fetch(
          `${apiUrl}/history?keyword=${encodeURIComponent(keyword)}&domain=${encodeURIComponent(domain)}&location=${encodeURIComponent(location)}`
        );

        const data = await response.json();

        if (data.success && data.data.history.length > 0) {
          displayHistory(data.data);
        }
      } catch (error) {
        console.error('History fetch error:', error);
        // Silently fail - history is optional
      }
    }

    function displayHistory(historyData) {
      const historySection = document.getElementById('historySection');
      const historyChart = document.getElementById('historyChart');
      const historyComparison = document.getElementById('historyComparison');
      const historyCount = document.getElementById('historyCount');

      const { history, comparison } = historyData;

      // Show history section
      historySection.style.display = 'block';

      // Update history count badge
      if (historyCount) {
        historyCount.textContent = history.length;
      }

      // Build chart
      const chartHTML = buildChart(history);
      historyChart.innerHTML = chartHTML;

      // Build comparison
      if (comparison && history.length > 1) {
        const comparisonHTML = buildComparison(comparison, history.length);
        historyComparison.innerHTML = comparisonHTML;
      }
    }

    function buildChart(history) {
      // Reverse to show oldest first
      const data = [...history].reverse();
      const maxRank = Math.max(...data.map(h => h.rank || 100), 100);

      let html = '<div class="chart-container">';
      html += '<div class="chart-grid">';

      // Y-axis labels
      html += '<div class="y-axis">';
      for (let i = 0; i <= 5; i++) {
        const rank = Math.round((maxRank / 5) * i);
        html += `<div class="y-label">#${rank}</div>`;
      }
      html += '</div>';

      // Chart bars
      html += '<div class="chart-bars">';
      data.forEach((point, index) => {
        const rank = point.rank || maxRank;
        const height = ((maxRank - rank) / maxRank) * 100;
        const date = new Date(point.checked_at).toLocaleDateString();
        const isLatest = index === data.length - 1;

        html += `
          <div class="chart-bar-wrapper">
            <div class="chart-bar ${isLatest ? 'latest' : ''}" style="height: ${height}%">
              <div class="bar-tooltip">
                <div class="tooltip-rank">#${point.rank || 'Not Found'}</div>
                <div class="tooltip-date">${date}</div>
              </div>
            </div>
            <div class="x-label">${date.split('/')[0]}/${date.split('/')[1]}</div>
          </div>
        `;
      });
      html += '</div>';
      html += '</div>';
      html += '</div>';

      return html;
    }

    function buildComparison(comparison, totalChecks) {
      if (!comparison.first_rank || !comparison.latest_rank) {
        return '';
      }

      const change = comparison.rank_change;
      const isImprovement = change > 0;
      const isDecline = change < 0;
      const firstDate = new Date(comparison.first_checked).toLocaleDateString();
      const latestDate = new Date(comparison.latest_checked).toLocaleDateString();

      let statusClass = 'neutral';
      let statusIcon = 'fa-minus';
      let statusText = 'No change';

      if (isImprovement) {
        statusClass = 'improvement';
        statusIcon = 'fa-arrow-up';
        statusText = `Improved by ${change} positions`;
      } else if (isDecline) {
        statusClass = 'decline';
        statusIcon = 'fa-arrow-down';
        statusText = `Dropped ${Math.abs(change)} positions`;
      }

      return `
        <div class="comparison-card ${statusClass}">
          <div class="comparison-header">
            <i class="fas ${statusIcon}"></i>
            <h4>${statusText}</h4>
          </div>
          <div class="comparison-details">
            <div class="comparison-item">
              <span class="label">First Check (${firstDate})</span>
              <span class="value">#${comparison.first_rank}</span>
            </div>
            <div class="comparison-arrow">
              <i class="fas ${isImprovement ? 'fa-arrow-right' : isDecline ? 'fa-arrow-right' : 'fa-arrow-right'}"></i>
            </div>
            <div class="comparison-item">
              <span class="label">Latest Check (${latestDate})</span>
              <span class="value">#${comparison.latest_rank}</span>
            </div>
          </div>
          <div class="comparison-stats">
            <span class="stat"><i class="fas fa-history"></i> ${totalChecks} checks tracked</span>
          </div>
        </div>
      `;
    }

    // Copy results to clipboard functionality
    const copyBtn = document.getElementById('copyResultsBtn');
    if (copyBtn) {
      copyBtn.addEventListener('click', function() {
        const keyword = document.getElementById('keyword').value.trim();
        const domain = document.getElementById('domain').value.trim();
        const location = document.getElementById('location').value;
        const rankElement = document.querySelector('.rank-number');
        const rank = rankElement ? rankElement.textContent : 'N/A';

        // Format as TSV (tab-separated values) for easy paste into Excel/Sheets
        const tsvData = `Keyword\tDomain\tLocation\tPosition\tDate\n${keyword}\t${domain}\t${location}\t${rank}\t${new Date().toLocaleDateString()}`;

        // Copy to clipboard
        navigator.clipboard.writeText(tsvData).then(() => {
          const originalHTML = copyBtn.innerHTML;
          copyBtn.innerHTML = '<i class="fas fa-check"></i> Copied!';
          copyBtn.style.background = '#10b981';
          copyBtn.style.color = 'white';

          setTimeout(() => {
            copyBtn.innerHTML = originalHTML;
            copyBtn.style.background = '';
            copyBtn.style.color = '';
          }, 2000);
        }).catch(err => {
          console.error('Copy failed:', err);
          copyBtn.innerHTML = '<i class="fas fa-times"></i> Failed';
          setTimeout(() => {
            copyBtn.innerHTML = '<i class="fas fa-copy"></i> Copy Results';
          }, 2000);
        });
      });
    }

    // Share results functionality (permalink)
    const shareBtn = document.getElementById('shareResultsBtn');
    if (shareBtn) {
      shareBtn.addEventListener('click', function() {
        const shareUrl = window.location.href;

        navigator.clipboard.writeText(shareUrl).then(() => {
          const originalHTML = shareBtn.innerHTML;
          shareBtn.innerHTML = '<i class="fas fa-check"></i> Link Copied!';
          shareBtn.style.background = '#667eea';
          shareBtn.style.color = 'white';

          setTimeout(() => {
            shareBtn.innerHTML = originalHTML;
            shareBtn.style.background = '';
            shareBtn.style.color = '';
          }, 2000);

          // Track share event
          trackEvent('results_shared', {
            keyword: document.getElementById('keyword').value,
            domain: document.getElementById('domain').value
          });
        }).catch(err => {
          console.error('Share failed:', err);
          // Fallback: show URL in prompt
          prompt('Copy this link to share your results:', shareUrl);
        });
      });
    }

    // Keyboard shortcuts for power users
    document.addEventListener('keydown', (e) => {
      // Cmd/Ctrl + Enter: Submit form
      if ((e.metaKey || e.ctrlKey) && e.key === 'Enter') {
        e.preventDefault();
        form.dispatchEvent(new Event('submit'));
      }

      // Escape: Clear form or close results
      if (e.key === 'Escape') {
        if (resultsSection.style.display === 'block') {
          resultsSection.style.display = 'none';
          form.style.display = 'block';
          document.getElementById('keyword').focus();
        } else {
          form.reset();
          document.getElementById('keyword').focus();
        }
      }

      // Cmd/Ctrl + K: Focus keyword input
      if ((e.metaKey || e.ctrlKey) && e.key === 'k') {
        e.preventDefault();
        document.getElementById('keyword').focus();
      }
    });

    // Show keyboard hints on first visit
    if (!localStorage.getItem('rank_tracker_hints_shown')) {
      const keyboardHints = document.createElement('div');
      keyboardHints.className = 'keyboard-hints';
      keyboardHints.innerHTML = `
        <div class="hint-badge">
          <span class="hint-icon">⌨️</span>
          <div class="hint-text">
            <strong>Keyboard Shortcuts:</strong>
            <span>Ctrl/Cmd + Enter to check • Esc to clear • Ctrl/Cmd + K to focus</span>
          </div>
          <button class="hint-close" onclick="this.parentElement.remove(); localStorage.setItem('rank_tracker_hints_shown', 'true');">×</button>
        </div>
      `;
      document.querySelector('.checker-card').prepend(keyboardHints);

      setTimeout(() => {
        keyboardHints.remove();
        localStorage.setItem('rank_tracker_hints_shown', 'true');
      }, 8000);
    }
  });
</script>

<style is:global>
  main#main-content section.rank-hero.rank-hero {
    padding: 180px 0 60px !important;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
  }

  @media (max-width: 768px) {
    main#main-content section.rank-hero.rank-hero {
      padding: 100px 0 60px !important;
    }
  }

  .rank-hero-content h1 {
    font-size: 3rem;
    font-weight: 900;
    margin: 1rem 0;
  }

  .hero-subtitle {
    font-size: 1.25rem;
    opacity: 0.95;
    max-width: 700px;
    margin: 0 auto 2rem;
  }

  .trust-badges {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .trust-badges .badge {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.75rem 1.5rem;
    border-radius: 30px;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    backdrop-filter: blur(10px);
  }

  .rank-checker-section {
    padding: 80px 0;
    background: #f9fafb;
  }

  .checker-card {
    background: white;
    border-radius: 20px;
    padding: 3rem;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    margin-bottom: 3rem;
    position: relative;
  }

  /* Keyboard Hints Badge */
  .keyboard-hints {
    margin-bottom: 1.5rem;
    animation: slideInDown 0.4s ease;
  }

  @keyframes slideInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .hint-badge {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem 1.5rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 12px;
    color: white;
    position: relative;
  }

  .hint-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .hint-text {
    flex: 1;
    font-size: 0.9rem;
  }

  .hint-text strong {
    display: block;
    margin-bottom: 0.25rem;
    font-size: 1rem;
  }

  .hint-text span {
    opacity: 0.95;
  }

  .hint-close {
    background: rgba(255, 255, 255, 0.2);
    border: none;
    color: white;
    width: 28px;
    height: 28px;
    border-radius: 50%;
    cursor: pointer;
    font-size: 1.25rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.2s ease;
    flex-shrink: 0;
  }

  .hint-close:hover {
    background: rgba(255, 255, 255, 0.3);
  }

  /* Cache Notice */
  .cache-notice {
    background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
    color: white;
    padding: 0.875rem 1.25rem;
    border-radius: 12px;
    margin-bottom: 1.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: 0.9rem;
    animation: slideInDown 0.3s ease;
  }

  .cache-notice i {
    font-size: 1.125rem;
  }

  .checker-form {
    max-width: 800px;
    margin: 0 auto;
  }

  .form-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .form-group label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.5rem;
  }

  .form-group label i {
    color: #667eea;
  }

  .tooltip-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 18px;
    height: 18px;
    margin-left: auto;
    cursor: help;
    color: #94a3b8;
    transition: color 0.2s ease;
  }

  .tooltip-icon:hover {
    color: #667eea;
  }

  .tooltip-icon i {
    font-size: 0.875rem;
  }

  .form-group input,
  .form-group select {
    width: 100%;
    padding: 1rem 1.125rem;
    border: 2px solid #e5e7eb;
    border-radius: 10px;
    font-size: 1rem;
    transition: all 0.3s ease;
    background: white;
    -webkit-appearance: none;
    appearance: none;
  }

  /* Mobile-optimized touch targets */
  @media (max-width: 768px) {
    .form-group input,
    .form-group select {
      padding: 1.125rem 1.25rem;
      font-size: 16px; /* Prevents iOS zoom on focus */
      min-height: 48px; /* WCAG 2.1 Level AA touch target size */
    }
  }

  .form-group input:focus,
  .form-group select:focus {
    outline: none;
    border-color: #667eea;
    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    background: #fefefe;
  }

  /* Valid input indicator */
  .form-group input:valid:not(:placeholder-shown) {
    border-color: #10b981;
  }

  /* Invalid input indicator */
  .form-group input:invalid:not(:placeholder-shown):not(:focus) {
    border-color: #ef4444;
  }

  /* Input wrapper for validation icons */
  .input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }

  .input-wrapper input {
    flex: 1;
    padding-right: 3rem;
  }

  .validation-icon {
    position: absolute;
    right: 1rem;
    font-size: 1.25rem;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .input-wrapper input:valid:not(:placeholder-shown) ~ .validation-icon::before {
    content: "✓";
    color: #10b981;
    opacity: 1;
  }

  .input-wrapper input:invalid:not(:placeholder-shown):not(:focus) ~ .validation-icon::before {
    content: "✗";
    color: #ef4444;
    opacity: 1;
  }

  .form-group small {
    display: block;
    font-size: 0.875rem;
    margin-top: 0.25rem;
  }

  .field-hint {
    color: #64748b;
  }

  .field-error {
    color: #ef4444;
    font-weight: 500;
  }

  .form-group.has-error .field-hint {
    display: none;
  }

  .form-group.has-error .field-error {
    display: block !important;
  }

  .form-group.has-error input {
    border-color: #ef4444;
  }

  .loading-state,
  .error-state {
    text-align: center;
    padding: 3rem;
  }

  .spinner {
    width: 60px;
    height: 60px;
    border: 4px solid #e5e7eb;
    border-top-color: #667eea;
    border-right-color: #764ba2;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
    margin: 0 auto 1.5rem;
    position: relative;
  }

  .spinner::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 40px;
    height: 40px;
    border: 4px solid transparent;
    border-top-color: #667eea;
    border-radius: 50%;
    animation: spin 1.2s linear infinite reverse;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .loading-state p {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 0.5rem;
  }

  .loading-state small {
    color: #64748b;
  }

  .error-state i {
    font-size: 4rem;
    color: #ef4444;
    margin-bottom: 1rem;
  }

  .error-state h3 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
  }

  .error-state p {
    color: #64748b;
    margin-bottom: 1.5rem;
  }

  .results-section {
    padding-top: 2rem;
  }

  .result-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #e5e7eb;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .result-header h2 {
    font-size: 1.75rem;
    font-weight: 700;
  }

  .result-actions-group {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
  }

  .rank-card {
    background: #f9fafb;
    border-radius: 16px;
    padding: 2rem;
    margin-bottom: 2rem;
    border-left: 6px solid #667eea;
  }

  .rank-card.rank-excellent {
    background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
    border-left-color: #10b981;
  }

  .rank-card.rank-good {
    background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 100%);
    border-left-color: #3b82f6;
  }

  .rank-card.rank-fair {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    border-left-color: #f59e0b;
  }

  .rank-card.rank-poor {
    background: linear-gradient(135deg, #fee2e2 0%, #fecaca 100%);
    border-left-color: #ef4444;
  }

  .rank-card.rank-not-found {
    background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
    border-left-color: #6b7280;
  }

  .rank-position {
    text-align: center;
    margin-bottom: 1.5rem;
  }

  .rank-number {
    font-size: 4rem;
    font-weight: 900;
    color: #1e293b;
    line-height: 1;
  }

  .rank-label {
    font-size: 1.25rem;
    color: #64748b;
    margin-top: 0.5rem;
  }

  .rank-icon {
    font-size: 4rem;
    color: #6b7280;
    margin-bottom: 1rem;
  }

  .rank-details {
    background: white;
    border-radius: 12px;
    padding: 1.5rem;
  }

  .detail-row {
    display: flex;
    justify-content: space-between;
    padding: 0.75rem 0;
    border-bottom: 1px solid #e5e7eb;
  }

  .detail-row:last-child {
    border-bottom: none;
  }

  .detail-row .label {
    font-weight: 600;
    color: #64748b;
  }

  .detail-row .value {
    color: #1e293b;
    font-weight: 500;
  }

  .recommendation {
    margin-top: 1rem;
    padding: 1rem;
    background: white;
    border-radius: 8px;
    color: #475569;
  }

  .serp-preview {
    margin: 2rem 0;
  }

  .serp-preview h4 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .serp-result {
    background: white;
    border: 1px solid #e5e7eb;
    border-radius: 12px;
    padding: 1.5rem;
  }

  .serp-title {
    color: #1a0dab;
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    cursor: pointer;
  }

  .serp-title:hover {
    text-decoration: underline;
  }

  .serp-url {
    color: #006621;
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
  }

  .serp-snippet {
    color: #545454;
    line-height: 1.6;
  }

  .rank-analysis {
    margin: 2rem 0;
  }

  .rank-analysis h4 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
  }

  .analysis {
    padding: 1.5rem;
    border-radius: 12px;
    display: flex;
    gap: 1rem;
    align-items: start;
  }

  .analysis i {
    font-size: 2rem;
    flex-shrink: 0;
  }

  .analysis.excellent {
    background: #d1fae5;
    color: #065f46;
  }

  .analysis.excellent i {
    color: #10b981;
  }

  .analysis.good {
    background: #dbeafe;
    color: #1e40af;
  }

  .analysis.good i {
    color: #3b82f6;
  }

  .analysis.fair {
    background: #fef3c7;
    color: #92400e;
  }

  .analysis.fair i {
    color: #f59e0b;
  }

  .analysis.poor {
    background: #fee2e2;
    color: #991b1b;
  }

  .analysis.poor i {
    color: #ef4444;
  }

  .result-actions {
    text-align: center;
    margin-top: 3rem;
    padding: 2rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 16px;
    color: white;
  }

  .result-actions h3 {
    font-size: 1.75rem;
    margin-bottom: 0.5rem;
  }

  .result-actions p {
    font-size: 1.125rem;
    opacity: 0.9;
    margin-bottom: 1.5rem;
  }

  .action-buttons {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .info-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
  }

  .info-card {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }

  .info-icon {
    width: 60px;
    height: 60px;
    background: linear-gradient(135deg, #667eea, #764ba2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .info-icon i {
    font-size: 1.75rem;
    color: white;
  }

  .info-card h3 {
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    color: #1e293b;
  }

  .info-card p {
    color: #475569;
    line-height: 1.6;
  }

  /* History Section Styles */
  .history-section {
    margin-top: 3rem;
  }

  .history-accordion {
    background: linear-gradient(135deg, #f0f9ff 0%, #f8fafc 100%);
    border-radius: 16px;
    border: 2px solid #e0f2fe;
    overflow: hidden;
  }

  .history-accordion summary {
    cursor: pointer;
    padding: 2rem;
    list-style: none;
    position: relative;
    transition: all 0.3s ease;
  }

  .history-accordion summary::-webkit-details-marker {
    display: none;
  }

  .history-accordion summary:hover {
    background: rgba(255, 255, 255, 0.5);
  }

  .history-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
  }

  .history-title {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .history-title h3 {
    font-size: 1.75rem;
    color: #1e293b;
    margin: 0;
  }

  .history-title i {
    color: #667eea;
  }

  .history-count {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 28px;
    height: 28px;
    padding: 0 0.5rem;
    background: #667eea;
    color: white;
    border-radius: 14px;
    font-size: 0.875rem;
    font-weight: 700;
  }

  .accordion-icon {
    position: absolute;
    right: 2rem;
    top: 50%;
    transform: translateY(-50%);
    color: #667eea;
    font-size: 1.25rem;
    transition: transform 0.3s ease;
  }

  .history-accordion[open] .accordion-icon {
    transform: translateY(-50%) rotate(180deg);
  }

  .history-content {
    padding: 0 2rem 2rem;
  }

  .history-subtitle {
    color: #64748b;
    font-size: 1rem;
  }

  /* Chart Styles */
  .chart-container {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }

  .chart-grid {
    display: flex;
    gap: 1rem;
    min-height: 300px;
    position: relative;
  }

  .y-axis {
    display: flex;
    flex-direction: column-reverse;
    justify-content: space-between;
    padding-right: 1rem;
    border-right: 2px solid #e5e7eb;
    min-width: 50px;
  }

  .y-label {
    font-size: 0.875rem;
    color: #64748b;
    font-weight: 600;
  }

  .chart-bars {
    flex: 1;
    display: flex;
    gap: 1rem;
    align-items: flex-end;
    padding: 0 1rem;
  }

  .chart-bar-wrapper {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 300px;
    justify-content: flex-end;
  }

  .chart-bar {
    width: 100%;
    min-height: 20px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 8px 8px 0 0;
    position: relative;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .chart-bar:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(102, 126, 234, 0.3);
  }

  .chart-bar.latest {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  }

  .bar-tooltip {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: #1e293b;
    color: white;
    padding: 0.75rem;
    border-radius: 8px;
    white-space: nowrap;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease;
    margin-bottom: 0.5rem;
  }

  .chart-bar:hover .bar-tooltip {
    opacity: 1;
  }

  .tooltip-rank {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 0.25rem;
  }

  .tooltip-date {
    font-size: 0.875rem;
    opacity: 0.9;
  }

  .x-label {
    margin-top: 0.75rem;
    font-size: 0.75rem;
    color: #64748b;
    text-align: center;
  }

  /* Comparison Card Styles */
  .comparison-card {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    border-left: 6px solid #667eea;
  }

  .comparison-card.improvement {
    border-left-color: #10b981;
    background: linear-gradient(135deg, #d1fae5 0%, #ffffff 100%);
  }

  .comparison-card.decline {
    border-left-color: #ef4444;
    background: linear-gradient(135deg, #fee2e2 0%, #ffffff 100%);
  }

  .comparison-card.neutral {
    border-left-color: #6b7280;
    background: linear-gradient(135deg, #f3f4f6 0%, #ffffff 100%);
  }

  .comparison-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.5rem;
  }

  .comparison-header i {
    font-size: 2rem;
  }

  .comparison-card.improvement .comparison-header i {
    color: #10b981;
  }

  .comparison-card.decline .comparison-header i {
    color: #ef4444;
  }

  .comparison-card.neutral .comparison-header i {
    color: #6b7280;
  }

  .comparison-header h4 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1e293b;
  }

  .comparison-details {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2rem;
    padding: 1.5rem;
    background: white;
    border-radius: 12px;
    margin-bottom: 1rem;
  }

  .comparison-item {
    flex: 1;
    text-align: center;
  }

  .comparison-item .label {
    display: block;
    font-size: 0.875rem;
    color: #64748b;
    margin-bottom: 0.5rem;
  }

  .comparison-item .value {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    color: #1e293b;
  }

  .comparison-arrow {
    font-size: 2rem;
    color: #667eea;
  }

  .comparison-stats {
    text-align: center;
    padding-top: 1rem;
    border-top: 1px solid #e5e7eb;
  }

  .comparison-stats .stat {
    color: #64748b;
    font-size: 0.875rem;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  @media (max-width: 768px) {
    .rank-hero-content h1 {
      font-size: 2rem;
    }

    .checker-card {
      padding: 1.5rem;
    }

    .form-grid {
      grid-template-columns: 1fr;
    }

    .result-header {
      flex-direction: column;
      gap: 1rem;
      align-items: stretch;
    }

    .action-buttons {
      flex-direction: column;
    }

    .rank-number {
      font-size: 3rem;
    }
  }

  /* Error State Improvements */
  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: 1.5rem;
  }

  .error-help {
    font-size: 0.9rem;
    color: #64748b;
    margin-top: 1rem;
  }

  .phone-link {
    color: #667eea;
    font-weight: 700;
    text-decoration: none;
    white-space: nowrap;
  }

  .phone-link:hover {
    text-decoration: underline;
  }

  /* Revenue Impact Section - same as Speed Test */
  .revenue-impact-section {
    margin: 3rem 0;
  }

  /* Revenue Impact Card - Enhanced Design */
  .revenue-impact-section {
    margin-top: 2rem;
  }

  .impact-card {
    background: white;
    border-radius: 24px;
    padding: 3rem;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
    margin-bottom: 2rem;
    border: 2px solid transparent;
    transition: all 0.3s ease;
  }

  .impact-card:hover {
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
  }

  .impact-card.impact-warning {
    border-color: #fef3c7;
    background: linear-gradient(135deg, #fffbeb 0%, #ffffff 100%);
  }

  .impact-card.impact-critical {
    border-color: #fee2e2;
    background: linear-gradient(135deg, #fef2f2 0%, #ffffff 100%);
  }

  .impact-card.impact-info {
    border-color: #d1fae5;
    background: linear-gradient(135deg, #ecfdf5 0%, #ffffff 100%);
  }

  .impact-header {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 2.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid #f1f5f9;
  }

  .impact-icon {
    width: 72px;
    height: 72px;
    border-radius: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 2rem;
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    color: white;
    flex-shrink: 0;
    box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
  }

  .impact-card.impact-warning .impact-icon {
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
    box-shadow: 0 8px 20px rgba(245, 158, 11, 0.3);
  }

  .impact-card.impact-critical .impact-icon {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    box-shadow: 0 8px 20px rgba(239, 68, 68, 0.3);
    animation: pulse-urgent 2s infinite;
  }

  @keyframes pulse-urgent {
    0%, 100% {
      transform: scale(1);
      box-shadow: 0 8px 20px rgba(239, 68, 68, 0.3);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 12px 28px rgba(239, 68, 68, 0.4);
    }
  }

  .impact-header h3 {
    font-size: 1.875rem;
    font-weight: 800;
    color: #1e293b;
    margin: 0;
    line-height: 1.3;
  }

  .impact-stats {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .impact-stat {
    text-align: center;
    padding: 1.75rem 1.25rem;
    background: rgba(248, 250, 252, 0.8);
    border-radius: 16px;
    border: 1px solid #e2e8f0;
    transition: all 0.3s ease;
  }

  .impact-stat:hover {
    transform: translateY(-4px);
    background: #f8fafc;
    border-color: #cbd5e1;
  }

  .stat-value {
    font-size: 2.75rem;
    font-weight: 900;
    color: #10b981;
    line-height: 1;
    margin-bottom: 0.75rem;
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .impact-card.impact-critical .stat-value {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .impact-card.impact-warning .stat-value {
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .stat-label {
    color: #64748b;
    font-size: 0.9375rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .impact-message {
    background: #f8fafc;
    border-radius: 16px;
    padding: 1.75rem;
    color: #475569;
    line-height: 1.8;
    font-size: 1.0625rem;
  }

  .impact-message strong {
    color: #1e293b;
    font-weight: 700;
  }

  .impact-card.impact-critical .impact-message {
    background: rgba(254, 242, 242, 0.6);
  }

  .impact-card.impact-warning .impact-message {
    background: rgba(255, 251, 235, 0.6);
  }

  .disclaimer-text {
    margin-top: 1rem;
    padding: 0.75rem;
    background: rgba(250, 250, 250, 0.8);
    border-left: 3px solid #f59e0b;
    border-radius: 4px;
    font-size: 0.875rem;
    color: #64748b;
  }

  /* CTA Badge */
  .cta-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1.25rem;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50px;
    font-size: 0.875rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    backdrop-filter: blur(10px);
  }

  .cta-badge i {
    font-size: 1rem;
  }

  /* CTA Benefits */
  .cta-benefits {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    margin: 2rem 0;
  }

  @media (min-width: 768px) {
    .cta-benefits {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .benefit {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 8px;
    font-weight: 600;
  }

  .benefit i {
    font-size: 1.25rem;
  }

  /* Emergency CTA */
  .cta-emergency {
    background: linear-gradient(135deg, #dc2626 0%, #991b1b 100%);
    animation: pulse-cta 3s infinite;
  }

  @keyframes pulse-cta {
    0%, 100% { box-shadow: 0 8px 32px rgba(220, 38, 38, 0.3); }
    50% { box-shadow: 0 12px 48px rgba(220, 38, 38, 0.5); }
  }

  .cta-emergency .cta-buttons {
    gap: 1.5rem;
  }

  /* Warning CTA */
  .cta-warning {
    background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%);
  }

  /* Success CTA */
  .cta-success {
    background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  }

  @media (max-width: 768px) {
    .impact-header {
      flex-direction: column;
      text-align: center;
    }

    .impact-card {
      padding: 1.5rem;
    }

    .cta-benefits {
      grid-template-columns: 1fr;
    }
  }
  /* ===== NEW UI IMPROVEMENTS ===== */

  /* Hero Rank Display */
  .rank-hero {
    background: white;
    border-radius: 24px;
    padding: 3rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
  }

  .rank-visual {
    text-align: center;
    margin-bottom: 2.5rem;
  }

  .rank-circle {
    width: 180px;
    height: 180px;
    border: 8px solid;
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 0 auto 1.5rem;
    position: relative;
    transition: all 0.3s ease;
  }

  .rank-circle:hover {
    transform: scale(1.05);
  }

  .rank-hash {
    font-size: 2rem;
    font-weight: 300;
    opacity: 0.7;
  }

  .rank-number {
    font-size: 4.5rem;
    font-weight: 900;
    line-height: 1;
    margin-top: -0.5rem;
  }

  .rank-label {
    font-size: 1.125rem;
    font-weight: 600;
    color: #64748b;
  }

  /* Position Indicator */
  .position-indicator {
    background: #f8fafc;
    border-radius: 16px;
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  .position-label {
    text-align: center;
    font-weight: 600;
    color: #475569;
    margin-bottom: 1rem;
  }

  .position-track {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.75rem;
    position: relative;
  }

  .position-dot {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: #e2e8f0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    color: #94a3b8;
    transition: all 0.3s ease;
    position: relative;
  }

  .position-dot.passed {
    background: #cbd5e1;
  }

  .position-dot.active {
    transform: scale(1.3);
    color: white;
    z-index: 2;
  }

  .pos-num {
    font-size: 0.875rem;
  }

  /* Quick Stats */
  .quick-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
  }

  .quick-stat {
    display: flex;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
    background: #f8fafc;
    border-radius: 12px;
  }

  .stat-icon {
    font-size: 2rem;
    opacity: 0.9;
  }

  .stat-info {
    flex: 1;
  }

  .stat-value {
    font-size: 1.125rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 0.25rem;
  }

  .stat-name {
    font-size: 0.875rem;
    color: #64748b;
  }

  /* CTR Comparison Chart */
  .ctr-comparison {
    background: white;
    border-radius: 24px;
    padding: 2.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
  }

  .ctr-comparison h3 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .chart-desc {
    color: #64748b;
    margin-bottom: 2rem;
  }

  .ctr-chart {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .ctr-bar-group {
    position: relative;
  }

  .ctr-bar {
    height: 60px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    padding: 0 1.5rem;
    transition: all 0.5s ease;
    min-width: 150px;
  }

  .ctr-label {
    color: white;
    font-weight: 700;
    font-size: 0.9375rem;
    white-space: nowrap;
  }

  .ctr-insight {
    background: linear-gradient(135deg, #eff6ff 0%, #dbeafe 100%);
    border-left: 4px solid #3b82f6;
    padding: 1.25rem 1.5rem;
    border-radius: 12px;
    margin-top: 1.5rem;
    color: #1e40af;
    font-weight: 600;
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  /* Google SERP Preview */
  .google-serp-preview {
    background: white;
    border-radius: 24px;
    padding: 2.5rem;
    margin-bottom: 2rem;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
  }

  .serp-header {
    display: flex;
    align-items: center;
    gap: 2rem;
    margin-bottom: 2.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 1px solid #e2e8f0;
  }

  .google-logo {
    flex-shrink: 0;
  }

  .serp-time {
    color: #70757a;
    font-size: 0.875rem;
  }

  .google-result {
    max-width: 600px;
  }

  .result-url-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    margin-bottom: 0.5rem;
  }

  .result-favicon {
    flex-shrink: 0;
  }

  .result-breadcrumb {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
  }

  .result-domain {
    color: #202124;
    font-weight: 400;
  }

  .result-arrow {
    color: #70757a;
  }

  .result-path {
    color: #5f6368;
  }

  .result-title {
    color: #1a0dab;
    font-size: 1.25rem;
    font-weight: 400;
    margin-bottom: 0.375rem;
    line-height: 1.3;
    cursor: pointer;
  }

  .result-title:hover {
    text-decoration: underline;
  }

  .result-snippet {
    color: #4d5156;
    font-size: 0.875rem;
    line-height: 1.6;
  }

  /* Not Found State */
  .rank-hero.rank-not-found .rank-circle {
    border-color: #94a3b8;
  }

  .rank-hero.rank-not-found .rank-circle i {
    color: #64748b;
  }

  .not-found-message {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
  }

  .not-found-message h3 {
    font-size: 1.75rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 1rem;
  }

  .not-found-message p {
    color: #64748b;
    line-height: 1.7;
    margin-bottom: 1rem;
  }

  .recommendation {
    background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
    border-left: 4px solid #f59e0b;
    padding: 1.25rem 1.5rem;
    border-radius: 12px;
    color: #92400e;
    font-weight: 600;
    margin-top: 1.5rem;
  }

  /* CTA Section Enhancements */
  .result-cta {
    background: white;
    border-radius: 24px;
    padding: 0;
    margin-top: 2rem;
    overflow: hidden;
    box-shadow: 0 4px 24px rgba(0, 0, 0, 0.08);
    border: 2px solid transparent;
  }

  .result-cta.cta-emergency {
    border-color: #fee2e2;
  }

  .result-cta.cta-warning {
    border-color: #fef3c7;
  }

  .result-cta.cta-success {
    border-color: #d1fae5;
  }

  .result-cta .cta-content {
    padding: 3rem;
  }

  .result-cta .cta-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.625rem;
    padding: 0.625rem 1.25rem;
    background: rgba(102, 126, 234, 0.1);
    border-radius: 50px;
    font-size: 0.8125rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    color: #667eea;
    letter-spacing: 0.05em;
  }

  .result-cta.cta-emergency .cta-badge {
    background: rgba(239, 68, 68, 0.1);
    color: #dc2626;
  }

  .result-cta.cta-warning .cta-badge {
    background: rgba(245, 158, 11, 0.1);
    color: #d97706;
  }

  .result-cta.cta-success .cta-badge {
    background: rgba(16, 185, 129, 0.1);
    color: #059669;
  }

  .result-cta .cta-content h3 {
    font-size: 2rem;
    font-weight: 800;
    color: #1e293b;
    margin-bottom: 1rem;
    line-height: 1.3;
  }

  .result-cta .cta-content > p {
    color: #64748b;
    font-size: 1.125rem;
    line-height: 1.7;
    margin-bottom: 2rem;
  }

  .cta-benefits {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1.5rem;
    margin-bottom: 2.5rem;
  }

  .cta-benefits .benefit {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 1rem;
    background: #f8fafc;
    border-radius: 12px;
    font-weight: 600;
    color: #475569;
    border: 1px solid #e2e8f0;
    transition: all 0.3s ease;
  }

  .cta-benefits .benefit:hover {
    background: white;
    border-color: #cbd5e1;
    transform: translateY(-2px);
  }

  .cta-benefits .benefit i {
    color: #10b981;
    font-size: 1.125rem;
  }

  .cta-buttons {
    display: flex;
    gap: 1.25rem;
    flex-wrap: wrap;
  }

  .cta-buttons .btn-emergency {
    flex: 1;
    min-width: 250px;
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
    padding: 1.25rem 2rem;
    border-radius: 16px;
    font-weight: 700;
    text-decoration: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.375rem;
    box-shadow: 0 8px 20px rgba(239, 68, 68, 0.3);
    transition: all 0.3s ease;
  }

  .cta-buttons .btn-emergency:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 28px rgba(239, 68, 68, 0.4);
  }

  .cta-buttons .btn-emergency .btn-main {
    font-size: 1.125rem;
  }

  .cta-buttons .btn-emergency .btn-sub {
    font-size: 0.875rem;
    opacity: 0.9;
  }

  .cta-buttons .btn-phone {
    padding: 1.25rem 2rem;
    background: white;
    color: #1e293b;
    border: 2px solid #e2e8f0;
    border-radius: 16px;
    font-weight: 700;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 0.75rem;
    transition: all 0.3s ease;
  }

  .cta-buttons .btn-phone:hover {
    border-color: #667eea;
    color: #667eea;
    transform: translateY(-2px);
  }

  .cta-buttons .btn-phone i {
    font-size: 1.125rem;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .rank-circle {
      width: 140px;
      height: 140px;
    }

    .rank-number {
      font-size: 3.5rem;
    }

    .impact-stats {
      grid-template-columns: 1fr;
    }

    .cta-benefits {
      grid-template-columns: 1fr;
    }

    .result-cta .cta-content {
      padding: 2rem 1.5rem;
    }

    .cta-buttons {
      flex-direction: column;
    }

    .cta-buttons .btn-emergency {
      min-width: auto;
    }

    .position-track {
      gap: 0.4rem;
      overflow-x: auto;
      padding: 0.5rem;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: thin;
      scrollbar-color: #cbd5e1 #f1f5f9;
    }

    .position-track::-webkit-scrollbar {
      height: 6px;
    }

    .position-track::-webkit-scrollbar-track {
      background: #f1f5f9;
      border-radius: 3px;
    }

    .position-track::-webkit-scrollbar-thumb {
      background: #cbd5e1;
      border-radius: 3px;
    }

    .position-dot {
      width: 36px;
      height: 36px;
      flex-shrink: 0;
      font-size: 0.75rem;
    }

    .position-dot.active {
      transform: scale(1.2);
    }

    .quick-stats {
      grid-template-columns: 1fr;
    }

    .ctr-comparison,
    .google-serp-preview,
    .rank-hero {
      padding: 1.5rem;
    }

    .ctr-bar {
      height: 50px;
      padding: 0 1rem;
    }

    .ctr-label {
      font-size: 0.8125rem;
    }
  }

  @media (max-width: 480px) {
    .rank-circle {
      width: 120px;
      height: 120px;
    }

    .rank-number {
      font-size: 3rem;
    }

    .rank-hash {
      font-size: 1.5rem;
    }

    .result-title {
      font-size: 1.125rem;
    }
  }

  /* Enhanced Hero Section Styles */
  .rank-hero-enhanced {
    position: relative;
    padding: 180px 0 100px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    text-align: center;
    overflow: hidden;
  }

  @media (max-width: 768px) {
    .rank-hero-enhanced {
      padding: 120px 0 80px;
    }
  }

  .hero-background-effects {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
  }

  .gradient-orb {
    position: absolute;
    border-radius: 50%;
    filter: blur(60px);
    opacity: 0.3;
    animation: float 20s ease-in-out infinite;
  }

  .gradient-orb:nth-child(1) {
    width: 400px;
    height: 400px;
    background: radial-gradient(circle, #fff 0%, transparent 70%);
    top: -100px;
    left: -100px;
    animation-delay: 0s;
  }

  .gradient-orb:nth-child(2) {
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, #a78bfa 0%, transparent 70%);
    bottom: -50px;
    right: -50px;
    animation-delay: 7s;
  }

  .gradient-orb:nth-child(3) {
    width: 250px;
    height: 250px;
    background: radial-gradient(circle, #fbbf24 0%, transparent 70%);
    top: 50%;
    right: 10%;
    animation-delay: 14s;
  }

  .grid-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image:
      linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
      linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
    background-size: 50px 50px;
    opacity: 0.5;
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0) scale(1); }
    33% { transform: translate(30px, -30px) scale(1.1); }
    66% { transform: translate(-20px, 20px) scale(0.9); }
  }

  .rank-hero-content {
    position: relative;
    z-index: 1;
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.75rem;
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(10px);
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    font-weight: 600;
    color: white;
    margin-bottom: 2rem;
    border: 1px solid rgba(255, 255, 255, 0.3);
    animation: pulse-badge 2s ease-in-out infinite;
  }

  @keyframes pulse-badge {
    0%, 100% { transform: scale(1); box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4); }
    50% { transform: scale(1.05); box-shadow: 0 0 20px 10px rgba(255, 255, 255, 0); }
  }

  .hero-badge i,
  .badge-icon,
  .badge-text {
    color: white;
    font-size: 1.125rem;
  }

  .hero-title-new {
    font-size: 3.5rem;
    font-weight: 900;
    line-height: 1.1;
    margin-bottom: 1.5rem;
    text-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  @media (max-width: 768px) {
    .hero-title-new {
      font-size: 2.5rem;
    }
  }

  .title-accent {
    background: linear-gradient(to right, #fbbf24, #f59e0b);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    display: block;
  }

  .hero-description-new,
  .hero-subtitle-new {
    font-size: 1.375rem;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 3rem;
    max-width: 700px;
    margin-left: auto;
    margin-right: auto;
  }

  @media (max-width: 768px) {
    .hero-description-new,
    .hero-subtitle-new {
      font-size: 1.125rem;
      margin-bottom: 2.5rem;
    }
  }

  .feature-pills-new {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: 3rem;
  }

  .pill,
  .feature-pill {
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    padding: 0.875rem 1.75rem;
    border-radius: 50px;
    font-weight: 600;
    font-size: 1rem;
    color: white;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.3s ease;
  }

  .pill:hover,
  .feature-pill:hover {
    background: rgba(255, 255, 255, 0.25);
    transform: translateY(-2px);
  }

  .pill i,
  .feature-pill i {
    font-size: 1.125rem;
    color: white;
  }

  .trust-indicators-new {
    display: flex;
    gap: 2.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-bottom: 2rem;
  }

  @media (max-width: 768px) {
    .trust-indicators-new {
      gap: 1.5rem;
    }
  }

  .trust-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .trust-item i {
    font-size: 1.5rem;
    color: white;
    margin-bottom: 0.25rem;
  }

  .trust-item span {
    font-weight: 600;
    font-size: 1rem;
    color: white;
  }

  .trust-icon {
    width: 48px;
    height: 48px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.375rem;
    color: white;
    margin-bottom: 0.25rem;
  }

  .trust-text {
    font-weight: 600;
    font-size: 1rem;
    color: white;
  }

  .scroll-indicator {
    margin-top: 3rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .scroll-text {
    font-size: 1rem;
    font-weight: 600;
    color: rgba(255, 255, 255, 0.9);
  }

  .scroll-arrow {
    animation: bounce 2s ease-in-out infinite;
  }

  .scroll-arrow i,
  .scroll-indicator i {
    font-size: 2rem;
    color: white;
    opacity: 0.8;
  }

  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(10px); }
  }

</style>
