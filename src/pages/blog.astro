---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';

const pageTitle = "Blog | The Profit Platform";
const pageDescription = "Digital marketing tips, strategies, and insights for Sydney businesses.";

// Fetch all published blog posts
const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft;
});

// Sort by date (newest first) - handle both pubDate and publishDate
const sortedPosts = allPosts.sort((a, b) => {
  const dateA = a.data.publishDate || a.data.pubDate;
  const dateB = b.data.publishDate || b.data.pubDate;
  return dateB.valueOf() - dateA.valueOf();
});

// Featured post (if marked, otherwise use newest)
const featuredPost = sortedPosts.find(p => p.data.featured) || sortedPosts[0];

// Recent posts for grid (exclude featured if it exists)
const recentPosts = featuredPost && sortedPosts.find(p => p.data.featured)
  ? sortedPosts.filter(p => p !== featuredPost)
  : sortedPosts.slice(1);

// Initial display count
const INITIAL_POSTS = 6;

// Calculate category counts
const categoryCount = {};
sortedPosts.forEach(post => {
  const cat = post.data.category;
  categoryCount[cat] = (categoryCount[cat] || 0) + 1;
});

// Get unique categories
const categories = Object.keys(categoryCount).sort();

// Helper function to get gradient color for category
function getCategoryGradient(category) {
  const gradients = {
    'SEO': 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
    'Google Ads': 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',
    'Web Design': 'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',
    'Content Marketing': 'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',
    'Digital Marketing': 'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',
    'Analytics': 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)'
  };
  return gradients[category] || 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)';
}

// Helper function to format date (handles both pubDate and publishDate)
function formatDate(post) {
  const date = post.data.publishDate || post.data.pubDate;
  return new Date(date).toLocaleDateString('en-AU', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
}

// Helper function to calculate read time
function getReadTime(post) {
  return post.data.readTime || '5 min read';
}
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <link rel="stylesheet" href="/css/blog.css">
  <style>
    /* Clean, modern blog listing design */
    html, body {
      background: #ffffff !important;
      background-image: none !important;
    }

    body::before, body::after,
    html::before, html::after,
    main::before, main::after {
      display: none !important;
    }

    /* Hero Section - Clean Design */
    .blog-hero {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%) !important;
      padding: 6rem 0 4rem;
      position: relative;
      overflow: hidden;
    }

    .hero-background,
    .hero-floating-elements,
    .floating-orb {
      display: none !important;
    }

    .hero-gradient-mesh {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 20% 50%, rgba(255,255,255,0.1) 0%, transparent 50%),
                  radial-gradient(circle at 80% 80%, rgba(255,255,255,0.08) 0%, transparent 50%);
      pointer-events: none;
    }

    .hero-grid-overlay {
      display: none !important;
    }

    .hero-badge {
      background: rgba(255, 255, 255, 0.25);
      color: white;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-size: 0.875rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .hero-title {
      color: white;
      font-size: clamp(2.5rem, 5vw, 4rem);
      font-weight: 800;
      margin: 1.5rem 0 1rem;
      line-height: 1.2;
    }

    .gradient-text {
      background: linear-gradient(90deg, #fff 0%, rgba(255,255,255,0.8) 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero-description {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.25rem;
      max-width: 600px;
      line-height: 1.6;
    }

    .hero-stats {
      display: flex;
      gap: 3rem;
      margin-top: 2.5rem;
    }

    .stat-item {
      display: flex;
      align-items: center;
      gap: 1rem;
    }

    .stat-icon-wrapper {
      width: 48px;
      height: 48px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
    }

    .stat-number {
      display: block;
      color: white;
      font-size: 1.5rem;
      font-weight: 700;
    }

    .stat-label {
      display: block;
      color: rgba(255, 255, 255, 0.8);
      font-size: 0.875rem;
    }

    /* Featured Article - Modern Card */
    .featured-section {
      background: #f8fafc;
      padding: 4rem 0;
    }

    .featured-article {
      background: white;
      border-radius: 16px;
      overflow: hidden;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
      display: grid;
      grid-template-columns: 1fr 1.5fr;
      gap: 0;
    }

    .featured-visual {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 400px;
    }

    .visual-gradient,
    .visual-icon {
      position: absolute;
    }

    .visual-icon {
      color: rgba(255, 255, 255, 0.15);
    }

    .featured-badge {
      position: absolute;
      top: 2rem;
      left: 2rem;
      background: white;
      color: #667eea;
      padding: 0.5rem 1rem;
      border-radius: 50px;
      font-weight: 700;
      font-size: 0.875rem;
    }

    .featured-content {
      padding: 3rem;
      display: flex;
      flex-direction: column;
      justify-content: center;
    }

    .featured-title {
      font-size: 2rem;
      font-weight: 800;
      color: #0f172a;
      margin: 1rem 0;
      line-height: 1.3;
    }

    .featured-excerpt {
      color: #64748b;
      font-size: 1.125rem;
      line-height: 1.7;
      margin-bottom: 2rem;
    }

    .featured-cta {
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 1rem 2rem;
      border-radius: 8px;
      text-decoration: none;
      font-weight: 700;
      transition: all 0.3s;
      width: fit-content;
    }

    .featured-cta:hover {
      transform: translateY(-2px);
      box-shadow: 0 12px 24px rgba(102, 126, 234, 0.3);
    }

    /* Newsletter - Refined */
    .newsletter-section {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      padding: 5rem 0;
      position: relative;
    }

    .newsletter-background {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
    }

    .newsletter-gradient {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 30% 50%, rgba(255,255,255,0.1) 0%, transparent 50%);
    }

    .newsletter-pattern {
      display: none;
    }

    .newsletter-content {
      position: relative;
      z-index: 1;
      text-align: center;
      color: white;
    }

    .newsletter-title {
      font-size: 2.5rem;
      font-weight: 800;
      color: white;
      margin: 1.5rem 0 1rem;
    }

    .newsletter-description {
      color: rgba(255, 255, 255, 0.9);
      font-size: 1.125rem;
      max-width: 600px;
      margin: 0 auto 2rem;
    }

    .newsletter-input {
      background: white;
      border: 2px solid transparent;
      padding: 1rem 1.5rem;
      border-radius: 8px;
      font-size: 1rem;
      width: 100%;
      max-width: 400px;
    }

    .newsletter-submit {
      background: white;
      color: #667eea;
      border: none;
      padding: 1rem 2rem;
      border-radius: 8px;
      font-weight: 700;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      margin-left: 1rem;
      transition: all 0.3s;
    }

    .newsletter-submit:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
    }

    /* Mobile Responsive */
    @media (max-width: 768px) {
      .blog-hero {
        padding: 4rem 0 3rem;
      }

      .hero-stats {
        flex-direction: column;
        gap: 1.5rem;
      }

      .featured-article {
        grid-template-columns: 1fr;
      }

      .featured-visual {
        min-height: 250px;
      }

      .featured-content {
        padding: 2rem 1.5rem;
      }

      .newsletter-form .form-group {
        flex-direction: column;
      }

      .newsletter-submit {
        margin-left: 0;
        margin-top: 1rem;
        width: 100%;
      }
    }
  </style>

  <Header />
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.body.style.backgroundColor = '#ffffff';
      document.documentElement.style.backgroundColor = '#ffffff';
    });
  </script>

  <main id="main-content" role="main">
    <!-- Hero Section -->
    <section class="blog-hero">
      <div class="hero-background">
        <div class="hero-gradient-mesh"></div>
        <div class="hero-floating-elements">
          <div class="floating-orb orb-1"></div>
          <div class="floating-orb orb-2"></div>
          <div class="floating-orb orb-3"></div>
        </div>
        <div class="hero-grid-overlay"></div>
      </div>

      <div class="container">
        <div class="hero-content">
          <span class="hero-badge">
            <svg width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
              <path d="M9 4.804A7.968 7.968 0 005.5 4c-1.255 0-2.443.29-3.5.804v10A7.969 7.969 0 015.5 14c1.669 0 3.218.51 4.5 1.385A7.962 7.962 0 0114.5 14c1.255 0 2.443.29 3.5.804v-10A7.968 7.968 0 0014.5 4c-1.255 0-2.443.29-3.5.804V12a1 1 0 11-2 0V4.804z"/>
            </svg>
            Digital Marketing Insights
          </span>

          <h1 class="hero-title">
            Master Digital Marketing.<br/>
            <span class="gradient-text">Grow Your Business.</span>
          </h1>

          <p class="hero-description">
            Actionable strategies, proven tactics, and real-world case studies from Sydney's top digital marketing experts.
          </p>

          <div class="hero-stats">
            <div class="stat-item">
              <div class="stat-icon-wrapper">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/>
                </svg>
              </div>
              <div class="stat-content">
                <span class="stat-number">{sortedPosts.length}+</span>
                <span class="stat-label">Articles</span>
              </div>
            </div>
            <div class="stat-item">
              <div class="stat-icon-wrapper">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"/>
                </svg>
              </div>
              <div class="stat-content">
                <span class="stat-number">{categories.length}</span>
                <span class="stat-label">Topics</span>
              </div>
            </div>
            <div class="stat-item">
              <div class="stat-icon-wrapper">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                </svg>
              </div>
              <div class="stat-content">
                <span class="stat-number">Weekly</span>
                <span class="stat-label">Updates</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Filter Bar -->
    <section class="filter-section">
      <div class="container">
        <div class="filter-container">
          <div class="filter-search">
            <svg class="search-icon" width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M9 17A8 8 0 1 0 9 1a8 8 0 0 0 0 16zM18 18l-4.35-4.35" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            <input type="search" placeholder="Search articles..." class="search-input">
          </div>

          <div class="filter-pills">
            <button class="filter-pill active" data-category="all">
              All Posts <span class="pill-count">{sortedPosts.length}</span>
            </button>
            {categories.map(category => (
              <button class="filter-pill" data-category={category.toLowerCase().replace(/\s+/g, '-')}>
                {category} <span class="pill-count">{categoryCount[category]}</span>
              </button>
            ))}
          </div>
        </div>
      </div>
    </section>

    <!-- Featured Article -->
    <section class="featured-section">
      <div class="container">
        <div class="section-label">
          <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M8 1l2.163 4.382L15 6.09l-3.5 3.409.826 4.817L8 12.09l-4.326 2.227.826-4.817L1 6.09l4.837-.708z"/>
          </svg>
          Featured Article
        </div>

        {featuredPost && (
          <article class="featured-article">
            <div class="featured-visual">
              <div class="visual-gradient"></div>
              <div class="featured-badge">Must Read</div>
              <div class="visual-icon">
                <svg width="64" height="64" viewBox="0 0 64 64" fill="currentColor">
                  <path d="M32 8l4 8h10l-8 8 4 10-10-6-10 6 4-10-8-8h10l4-8zm0 24c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16z"/>
                </svg>
              </div>
            </div>

            <div class="featured-content">
              <div class="article-meta-top">
                <span class="category-badge seo">{featuredPost.data.category}</span>
                <span class="read-time">{getReadTime(featuredPost)}</span>
              </div>

              <h2 class="featured-title">
                {featuredPost.data.title}
              </h2>

              <p class="featured-excerpt">
                {featuredPost.data.description}
              </p>

              <div class="article-meta-bottom">
                <div class="author-info">
                  <div class="author-avatar">{featuredPost.data.author === 'Avi' ? 'A' : 'TPP'}</div>
                  <div class="author-details">
                    <span class="author-name">{featuredPost.data.author}</span>
                    <span class="publish-date">{formatDate(featuredPost)}</span>
                  </div>
                </div>

                <a href={`/blog/${featuredPost.slug}`} class="featured-cta">
                  Read Article
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                    <path d="M4 10h12m0 0l-4-4m4 4l-4 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  </svg>
                </a>
              </div>
            </div>
          </article>
        )}
      </div>
    </section>

    <!-- Latest Articles Grid -->
    <section class="articles-section">
      <div class="container">
        <div class="section-header">
          <h2 class="section-title">Latest Articles</h2>
          <div class="view-toggle">
            <button class="view-btn active" data-view="latest">Latest</button>
            <button class="view-btn" data-view="popular">Popular</button>
          </div>
        </div>

        <div class="articles-grid">
          {recentPosts.map((post, index) => (
            <article class="article-card" data-index={index} data-slug={post.slug} data-original-index={index} style={index >= INITIAL_POSTS ? 'display: none;' : ''}>
              <div class="article-image" style={`background: ${getCategoryGradient(post.data.category)};`}>
                <div class="image-overlay"></div>
                <div class="article-icon">
                  <svg width="32" height="32" viewBox="0 0 32 32" fill="currentColor">
                    <path d="M16 4l4 8 8 2-6 6 2 8-8-4-8 4 2-8-6-6 8-2z"/>
                  </svg>
                </div>
              </div>

              <div class="article-body">
                <span class="category-badge">{post.data.category}</span>

                <h3 class="article-title">
                  <a href={`/blog/${post.slug}`}>{post.data.title}</a>
                </h3>

                <p class="article-excerpt">
                  {post.data.description}
                </p>

                <div class="article-footer">
                  <div class="article-meta">
                    <span class="meta-date">{formatDate(post)}</span>
                    <span class="meta-divider">•</span>
                    <span class="meta-time">{getReadTime(post)}</span>
                  </div>
                  {post.data.tags && post.data.tags.length > 0 && (
                    <div class="article-tags">
                      {post.data.tags.slice(0, 2).map(tag => (
                        <span class="tag">{tag}</span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </article>
          ))}
        </div>

        <div class="load-more-container">
          <button class="load-more-btn">
            Load More Articles
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
              <path d="M10 4v12m0 0l-4-4m4 4l4-4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </button>
        </div>
      </div>
    </section>

    <!-- Newsletter Section -->
    <section class="newsletter-section">
      <div class="newsletter-background">
        <div class="newsletter-gradient"></div>
        <div class="newsletter-pattern"></div>
      </div>

      <div class="container">
        <div class="newsletter-content">
          <div class="newsletter-icon">
            <svg width="48" height="48" viewBox="0 0 48 48" fill="currentColor">
              <path d="M40 8H8c-2.21 0-3.98 1.79-3.98 4L4 36c0 2.21 1.79 4 4 4h32c2.21 0 4-1.79 4-4V12c0-2.21-1.79-4-4-4zm0 8L24 26 8 16v-4l16 10 16-10v4z"/>
            </svg>
          </div>

          <h2 class="newsletter-title">
            Get Weekly Marketing Insights
          </h2>

          <p class="newsletter-description">
            Join Sydney business owners who receive actionable digital marketing tips every Tuesday. No fluff, just strategies that work.
          </p>

          <form class="newsletter-form" id="newsletter-form">
            <div class="form-group">
              <input
                type="email"
                name="email"
                placeholder="Enter your email address"
                required
                class="newsletter-input"
                id="newsletter-email"
              >
              <button type="submit" class="newsletter-submit" id="newsletter-submit">
                <span id="submit-text">Subscribe Free</span>
                <svg id="submit-icon" width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <path d="M4 10h12m0 0l-4-4m4 4l-4 4" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            </div>
            <p class="newsletter-privacy">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                <path d="M8 1l6 3v4c0 4-3 8-6 9-3-1-6-5-6-9V4l6-3z"/>
              </svg>
              No spam, ever. Unsubscribe with one click.
            </p>
            <p id="newsletter-message" style="display: none; margin-top: 1rem; padding: 0.75rem; border-radius: 8px; font-size: 0.875rem;"></p>
          </form>

          <div class="newsletter-proof">
            <div class="proof-item">
              <span class="proof-number">{sortedPosts.length}+</span>
              <span class="proof-label">Articles</span>
            </div>
            <div class="proof-item">
              <span class="proof-number">{categories.length}</span>
              <span class="proof-label">Topics</span>
            </div>
            <div class="proof-item">
              <span class="proof-number">Weekly</span>
              <span class="proof-label">Delivery</span>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  <script define:vars={{ INITIAL_POSTS }}>
    // Load More Pagination
    let currentlyShown = INITIAL_POSTS;
    const POSTS_PER_LOAD = 6;

    const loadMoreBtn = document.querySelector('.load-more-btn');
    const articleCards = document.querySelectorAll('.article-card');
    const searchInput = document.querySelector('.search-input');

    function updateLoadMoreButton() {
      const totalPosts = articleCards.length;
      const visiblePosts = Array.from(articleCards).filter(card => card.style.display !== 'none').length;

      if (visiblePosts >= totalPosts) {
        loadMoreBtn.style.display = 'none';
      } else {
        loadMoreBtn.style.display = 'flex';
      }
    }

    loadMoreBtn?.addEventListener('click', () => {
      const hiddenCards = Array.from(articleCards).filter(card => card.style.display === 'none');
      const cardsToShow = hiddenCards.slice(0, POSTS_PER_LOAD);

      cardsToShow.forEach(card => {
        card.style.display = '';
        card.style.animation = 'fadeIn 0.5s ease-in';
      });

      currentlyShown += cardsToShow.length;
      updateLoadMoreButton();
    });

    // Category filtering
    const filterPills = document.querySelectorAll('.filter-pill');
    let activeCategory = 'all';
    let activeTag = null;

    // Get category and tag from URL on page load
    const urlParams = new URLSearchParams(window.location.search);
    const categoryParam = urlParams.get('category');
    const tagParam = urlParams.get('tag');

    if (categoryParam) {
      activeCategory = categoryParam;
      filterPills.forEach(pill => {
        if (pill.dataset.category === categoryParam) {
          pill.classList.add('active');
        } else {
          pill.classList.remove('active');
        }
      });
    }

    if (tagParam) {
      activeTag = tagParam.toLowerCase();
      // Show tag filter indicator
      const filterContainer = document.querySelector('.filter-container');
      const tagIndicator = document.createElement('div');
      tagIndicator.className = 'active-tag-filter';
      tagIndicator.innerHTML = `
        <span>Filtering by tag: <strong>${tagParam}</strong></span>
        <button onclick="window.location.href='/blog'" class="clear-tag">×</button>
      `;
      tagIndicator.style.cssText = 'display: flex; align-items: center; gap: 0.5rem; padding: 0.5rem 1rem; background: #ede9fe; color: #6d28d9; border-radius: 8px; font-size: 0.875rem; margin-top: 1rem;';
      filterContainer.appendChild(tagIndicator);
    }

    function applyFilters() {
      const searchTerm = searchInput?.value.toLowerCase().trim() || '';

      articleCards.forEach((card, index) => {
        const title = card.querySelector('.article-title')?.textContent.toLowerCase() || '';
        const excerpt = card.querySelector('.article-excerpt')?.textContent.toLowerCase() || '';
        const category = card.querySelector('.category-badge')?.textContent.toLowerCase() || '';
        const tags = Array.from(card.querySelectorAll('.tag')).map(t => t.textContent.toLowerCase());

        const searchMatches = searchTerm === '' ||
                             title.includes(searchTerm) ||
                             excerpt.includes(searchTerm) ||
                             category.includes(searchTerm);

        const categoryMatches = activeCategory === 'all' ||
                               category === activeCategory.replace(/-/g, ' ');

        const tagMatches = !activeTag || tags.some(tag => tag.includes(activeTag));

        if (searchMatches && categoryMatches && tagMatches) {
          card.style.display = '';
        } else {
          card.style.display = 'none';
        }
      });

      updateLoadMoreButton();
    }

    filterPills.forEach(pill => {
      pill.addEventListener('click', () => {
        const category = pill.dataset.category;

        filterPills.forEach(p => p.classList.remove('active'));
        pill.classList.add('active');

        activeCategory = category;

        // Update URL without reload
        const url = new URL(window.location);
        if (category === 'all') {
          url.searchParams.delete('category');
        } else {
          url.searchParams.set('category', category);
        }
        window.history.pushState({}, '', url);

        applyFilters();
      });
    });

    // Search functionality
    searchInput?.addEventListener('input', () => {
      applyFilters();
    });

    // Apply filters on load if category or tag is set
    if (categoryParam || tagParam) {
      applyFilters();
    }

    // Newsletter form submission
    const newsletterForm = document.getElementById('newsletter-form');
    const newsletterMessage = document.getElementById('newsletter-message');
    const submitBtn = document.getElementById('newsletter-submit');
    const submitText = document.getElementById('submit-text');

    newsletterForm?.addEventListener('submit', async (e) => {
      e.preventDefault();

      const formData = new FormData(newsletterForm);
      submitBtn.disabled = true;
      submitText.textContent = 'Subscribing...';

      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          body: formData
        });

        const data = await response.json();

        if (response.ok) {
          newsletterMessage.style.display = 'block';
          newsletterMessage.style.background = 'rgba(76, 175, 80, 0.2)';
          newsletterMessage.style.color = '#2e7d32';
          newsletterMessage.textContent = data.message;
          newsletterForm.reset();
          submitText.textContent = 'Subscribed!';

          setTimeout(() => {
            submitText.textContent = 'Subscribe Free';
            newsletterMessage.style.display = 'none';
          }, 3000);
        } else {
          newsletterMessage.style.display = 'block';
          newsletterMessage.style.background = 'rgba(244, 67, 54, 0.2)';
          newsletterMessage.style.color = '#c62828';
          newsletterMessage.textContent = data.error || 'Subscription failed. Please try again.';
          submitText.textContent = 'Subscribe Free';
        }
      } catch (error) {
        newsletterMessage.style.display = 'block';
        newsletterMessage.style.background = 'rgba(244, 67, 54, 0.2)';
        newsletterMessage.style.color = '#c62828';
        newsletterMessage.textContent = 'An error occurred. Please try again later.';
        submitText.textContent = 'Subscribe Free';
      } finally {
        submitBtn.disabled = false;
      }
    });

    // Popular posts functionality
    const viewButtons = document.querySelectorAll('.view-btn');
    let currentView = 'latest';

    // Get view counts from localStorage
    function getViewCounts() {
      const counts = localStorage.getItem('blogViewCounts');
      return counts ? JSON.parse(counts) : {};
    }

    // Sort articles by popularity
    function sortByPopularity() {
      const viewCounts = getViewCounts();
      const articlesGrid = document.querySelector('.articles-grid');
      const cards = Array.from(articleCards);

      cards.sort((a, b) => {
        const slugA = a.dataset.slug;
        const slugB = b.dataset.slug;
        const viewsA = viewCounts[slugA] || 0;
        const viewsB = viewCounts[slugB] || 0;
        return viewsB - viewsA;
      });

      // Reorder in DOM
      cards.forEach(card => articlesGrid.appendChild(card));

      // Show first INITIAL_POSTS cards
      cards.forEach((card, index) => {
        card.dataset.index = index;
        card.style.display = index < INITIAL_POSTS ? '' : 'none';
      });
    }

    // Sort by latest (original order)
    function sortByLatest() {
      const articlesGrid = document.querySelector('.articles-grid');
      const cards = Array.from(articleCards);

      cards.sort((a, b) => {
        return parseInt(a.dataset.originalIndex) - parseInt(b.dataset.originalIndex);
      });

      // Reorder in DOM
      cards.forEach(card => articlesGrid.appendChild(card));

      // Reset display
      cards.forEach((card, index) => {
        card.dataset.index = index;
        card.style.display = index < INITIAL_POSTS ? '' : 'none';
      });
    }

    viewButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        const view = btn.dataset.view;

        viewButtons.forEach(b => b.classList.remove('active'));
        btn.classList.add('active');

        currentView = view;

        if (view === 'popular') {
          sortByPopularity();
        } else {
          sortByLatest();
        }

        updateLoadMoreButton();
      });
    });

    // Initial check
    updateLoadMoreButton();

    // CSS animation for fade in
    const style = document.createElement('style');
    style.textContent = `
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(20px); }
        to { opacity: 1; transform: translateY(0); }
      }
    `;
    document.head.appendChild(style);
  </script>
</BaseLayout>
