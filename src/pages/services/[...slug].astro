---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const services = await getCollection('services', ({ data }) => {
    return !data.draft;
  });

  return services.map(service => ({
    params: { slug: service.slug },
    props: { service },
  }));
}

const { service } = Astro.props;
const { Content } = await service.render();

const schema = {
  "@context": "https://schema.org",
  "@type": "Service",
  "name": service.data.title,
  "description": service.data.description,
  "provider": {
    "@type": "Organization",
    "name": "The Profit Platform"
  }
};
---

<BaseLayout
  title={service.data.title}
  description={service.data.description}
>
  <script type="application/ld+json" set:html={JSON.stringify(schema)} />

  <article class="service-detail">
    <header class="service-header">
      <div class="container">
        {service.data.icon && <span class="service-icon">{service.data.icon}</span>}
        <h1>{service.data.title}</h1>
        <p class="service-description">{service.data.description}</p>

        {service.data.price && (
          <div class="service-meta">
            <span class="price">{service.data.price}</span>
            {service.data.duration && <span class="duration">{service.data.duration}</span>}
          </div>
        )}

        {service.data.tags.length > 0 && (
          <div class="tags">
            {service.data.tags.map(tag => (
              <span class="tag">{tag}</span>
            ))}
          </div>
        )}
      </div>
    </header>

    <div class="container">
      <div class="service-content">
        <Content />
      </div>

      <aside class="service-cta">
        <h3>Ready to get started?</h3>
        <p>Let's discuss how we can help your business grow.</p>
        <a href="/contact" class="cta-button">Get in Touch</a>
      </aside>
    </div>
  </article>
</BaseLayout>

<style>
  .service-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 4rem 0 3rem;
    text-align: center;
  }

  .service-icon {
    font-size: 4rem;
    display: block;
    margin-bottom: 1rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .service-description {
    font-size: 1.25rem;
    margin-bottom: 1.5rem;
    opacity: 0.95;
  }

  .service-meta {
    display: flex;
    gap: 2rem;
    justify-content: center;
    margin: 1.5rem 0;
    font-size: 1.1rem;
  }

  .tags {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 1rem;
  }

  .tag {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.875rem;
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .service-content {
    max-width: 800px;
    margin: 3rem auto;
    line-height: 1.8;
  }

  .service-content :global(h2) {
    margin-top: 2rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .service-content :global(h3) {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    color: #555;
  }

  .service-content :global(ul) {
    margin: 1rem 0;
    padding-left: 1.5rem;
  }

  .service-content :global(li) {
    margin: 0.5rem 0;
  }

  .service-cta {
    background: #f8f9fa;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    padding: 2rem;
    text-align: center;
    margin: 3rem auto;
    max-width: 600px;
  }

  .service-cta h3 {
    margin-bottom: 0.5rem;
  }

  .cta-button {
    display: inline-block;
    background: #667eea;
    color: white;
    padding: 1rem 2rem;
    border-radius: 6px;
    text-decoration: none;
    font-weight: 600;
    margin-top: 1rem;
    transition: background 0.3s;
  }

  .cta-button:hover {
    background: #5568d3;
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }

    .service-description {
      font-size: 1rem;
    }

    .service-meta {
      flex-direction: column;
      gap: 0.5rem;
    }
  }
</style>
