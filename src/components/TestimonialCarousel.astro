---
/**
 * Testimonial Carousel Component
 * Simple carousel with minimal JavaScript
 *
 * @prop {Array<{quote: string, author: string, role: string, avatar?: string}>} testimonials
 */

interface Props {
  testimonials: Array<{
    quote: string;
    author: string;
    role: string;
    avatar?: string;
  }>;
}

const { testimonials } = Astro.props;
---

<section class="testimonial-carousel-modern">
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8">
    <h2 class="testimonial-title-modern">
      What Our Clients Say
    </h2>

    <div class="relative">
      <div id="carousel-container" class="overflow-hidden">
        <div id="carousel-track" class="flex transition-transform duration-500 ease-out">
          {testimonials.map((testimonial, index) => (
            <div class="min-w-full px-4">
              <div class="testimonial-card-modern">
                <svg class="testimonial-quote-icon" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                  <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z" />
                </svg>
                <blockquote class="testimonial-quote-text">
                  "{testimonial.quote}"
                </blockquote>
                <div class="testimonial-author-section">
                  {testimonial.avatar ? (
                    <img
                      src={testimonial.avatar}
                      alt={testimonial.author}
                      class="testimonial-avatar"
                    />
                  ) : (
                    <div class="testimonial-avatar-fallback">
                      {testimonial.author.charAt(0)}
                    </div>
                  )}
                  <div>
                    <p class="testimonial-author-name">{testimonial.author}</p>
                    <p class="testimonial-author-role">{testimonial.role}</p>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      <!-- Navigation Buttons -->
      {testimonials.length > 1 && (
        <div class="flex justify-center gap-4 mt-8">
          <button
            id="carousel-prev"
            class="carousel-nav-button"
            aria-label="Previous testimonial"
          >
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
          </button>
          <button
            id="carousel-next"
            class="carousel-nav-button"
            aria-label="Next testimonial"
          >
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </button>
        </div>
      )}

      <!-- Indicator Dots -->
      {testimonials.length > 1 && (
        <div class="flex justify-center gap-2 mt-4">
          {testimonials.map((_, index) => (
            <button
              class="carousel-dot w-3 h-3 rounded-full bg-gray-300 transition-colors"
              data-index={index}
              aria-label={`Go to testimonial ${index + 1}`}
            ></button>
          ))}
        </div>
      )}
    </div>
  </div>
</section>

<style>
  .testimonial-carousel-modern {
    padding: 5rem 0;
    background: linear-gradient(to bottom, #f8fafc 0%, #f1f5f9 50%, #f8fafc 100%);
  }

  .testimonial-title-modern {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 800;
    background: linear-gradient(135deg, #1e293b 0%, #334155 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 3.5rem;
    text-align: center;
    letter-spacing: -0.02em;
  }

  .testimonial-card-modern {
    max-width: 48rem;
    margin: 0 auto;
    background: white;
    border-radius: 1.5rem;
    padding: 3rem 2.5rem;
    box-shadow: 0 20px 40px -10px rgb(0 0 0 / 0.12), 0 10px 15px -8px rgb(0 0 0 / 0.08);
    border: 2px solid #e2e8f0;
    position: relative;
    overflow: hidden;
  }

  .testimonial-card-modern::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 6px;
    background: linear-gradient(90deg, #3B82F6, #2c86f9, #1e6ee8);
  }

  .testimonial-quote-icon {
    height: 3rem;
    width: 3rem;
    background: linear-gradient(135deg, #3B82F6, #2c86f9);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 1.5rem;
  }

  .testimonial-quote-text {
    font-size: 1.375rem;
    color: #1e293b;
    margin-bottom: 2rem;
    line-height: 1.7;
    font-weight: 500;
  }

  .testimonial-author-section {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .testimonial-avatar {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 9999px;
    object-fit: cover;
    border: 3px solid #e2e8f0;
  }

  .testimonial-avatar-fallback {
    width: 3.5rem;
    height: 3.5rem;
    border-radius: 9999px;
    background: linear-gradient(135deg, #3B82F6, #2c86f9);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: 800;
    font-size: 1.375rem;
    border: 3px solid white;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  .testimonial-author-name {
    font-weight: 700;
    color: #1e293b;
    font-size: 1.125rem;
    letter-spacing: -0.01em;
  }

  .testimonial-author-role {
    font-size: 0.9375rem;
    color: #64748b;
    margin-top: 0.25rem;
  }

  .carousel-nav-button {
    padding: 1rem;
    background: white;
    border-radius: 9999px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    border: 2px solid #e2e8f0;
    color: #1e293b;
    transition: all 0.3s ease;
    cursor: pointer;
  }

  .carousel-nav-button:hover {
    background: linear-gradient(135deg, #3B82F6, #2c86f9);
    color: white;
    border-color: transparent;
    transform: scale(1.1);
    box-shadow: 0 15px 35px rgba(59, 130, 246, 0.3);
  }

  @media (max-width: 768px) {
    .testimonial-carousel-modern {
      padding: 4rem 0;
    }

    .testimonial-card-modern {
      padding: 2rem 1.5rem;
    }

    .testimonial-quote-text {
      font-size: 1.125rem;
    }

    .testimonial-author-name {
      font-size: 1rem;
    }
  }
</style>

<script>
  // Handle multiple carousels on the same page
  document.querySelectorAll('[id="carousel-track"]').forEach((track) => {
    const container = track.closest('section');
    if (!container) return;

    const prevBtn = container.querySelector('[id="carousel-prev"]');
    const nextBtn = container.querySelector('[id="carousel-next"]');
    const dots = container.querySelectorAll('.carousel-dot');

    let currentIndex = 0;
    const totalSlides = dots.length;

    const updateCarousel = () => {
      track.style.transform = `translateX(-${currentIndex * 100}%)`;
      dots.forEach((dot, index) => {
        dot.classList.toggle('bg-blue-600', index === currentIndex);
        dot.classList.toggle('bg-gray-300', index !== currentIndex);
      });
    };

    prevBtn?.addEventListener('click', () => {
      currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
      updateCarousel();
    });

    nextBtn?.addEventListener('click', () => {
      currentIndex = (currentIndex + 1) % totalSlides;
      updateCarousel();
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });

    // Auto-play
    setInterval(() => {
      currentIndex = (currentIndex + 1) % totalSlides;
      updateCarousel();
    }, 5000);
  });
</script>