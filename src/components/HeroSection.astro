---
/**
 * Hero Section Component
 * Flexible hero with 3 layout variants
 *
 * @prop {string} title - Main heading
 * @prop {string} subtitle - Supporting text
 * @prop {Object} cta - Primary CTA button {label, href}
 * @prop {Object} [secondaryCta] - Optional secondary CTA
 * @prop {string} [imageSrc] - Hero image URL
 * @prop {string} [imageAlt] - Image alt text
 * @prop {"image-left" | "image-right" | "center"} [variant="center"] - Layout variant
 */

interface Props {
  title: string;
  subtitle: string;
  cta: { label: string; href: string };
  secondaryCta?: { label: string; href: string };
  imageSrc?: string;
  imageAlt?: string;
  variant?: "image-left" | "image-right" | "center";
}

const {
  title,
  subtitle,
  cta,
  secondaryCta,
  imageSrc,
  imageAlt = "Hero image",
  variant = "center"
} = Astro.props;
---

<section class="hero-modern-component">
  <div class="hero-background-overlay"></div>
  <div class="max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <div class:list={[
      'flex flex-col gap-12',
      variant === 'image-left' && 'md:flex-row-reverse md:items-center',
      variant === 'image-right' && 'md:flex-row md:items-center',
      variant === 'center' && 'text-center items-center'
    ]}>
      <!-- Content -->
      <div class:list={[
        'flex-1',
        variant !== 'center' && 'md:w-1/2'
      ]}>
        <h1 class="hero-title-modern-component">
          {title}
        </h1>
        <p class="hero-subtitle-modern-component">
          {subtitle}
        </p>
        <div class:list={[
          'flex flex-wrap gap-4',
          variant === 'center' && 'justify-center'
        ]}>
          <a href={cta.href} class="cta-primary-button">
            <span>{cta.label}</span>
            <div class="cta-glow-effect"></div>
          </a>
          {secondaryCta && (
            <a href={secondaryCta.href} class="cta-secondary-button">
              {secondaryCta.label}
            </a>
          )}
        </div>
      </div>

      <!-- Image -->
      {imageSrc && (
        <div class:list={[
          'flex-1',
          variant !== 'center' && 'md:w-1/2'
        ]}>
          <div class="hero-image-wrapper">
            <img
              src={imageSrc}
              alt={imageAlt}
              class="hero-image"
              loading="eager"
            />
            <div class="image-gradient-overlay"></div>
          </div>
        </div>
      )}
    </div>
  </div>
</section>

<style>
  .hero-modern-component {
    position: relative;
    background: linear-gradient(135deg, #3B82F6 0%, #2c86f9 50%, #1e6ee8 100%);
    padding: 5rem 0;
    overflow: hidden;
    min-height: 600px;
    display: flex;
    align-items: center;
  }

  .hero-background-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background:
      radial-gradient(circle at 20% 50%, rgba(96, 165, 250, 0.3) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, rgba(59, 130, 246, 0.4) 0%, transparent 50%);
    pointer-events: none;
    z-index: 1;
  }

  .hero-title-modern-component {
    font-size: clamp(2.25rem, 5vw, 4rem);
    font-weight: 800;
    color: white;
    margin-bottom: 1.5rem;
    line-height: 1.1;
    letter-spacing: -0.02em;
    text-shadow: 0 2px 20px rgba(0, 0, 0, 0.15);
  }

  .hero-subtitle-modern-component {
    font-size: clamp(1.125rem, 2vw, 1.375rem);
    color: rgba(255, 255, 255, 0.95);
    margin-bottom: 2rem;
    line-height: 1.6;
    max-width: 600px;
  }

  .cta-primary-button {
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2.5rem;
    background: white;
    color: #1e6ee8;
    font-size: 1.125rem;
    font-weight: 700;
    border-radius: 12px;
    transition: all 0.3s ease;
    text-decoration: none;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    overflow: hidden;
  }

  .cta-primary-button:hover {
    transform: translateY(-2px);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
  }

  .cta-glow-effect {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.5s ease;
    pointer-events: none;
  }

  .cta-primary-button:hover .cta-glow-effect {
    transform: translate(-50%, -50%) scale(2);
  }

  .cta-secondary-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2.5rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    font-size: 1.125rem;
    font-weight: 600;
    border-radius: 12px;
    border: 2px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .cta-secondary-button:hover {
    background: rgba(255, 255, 255, 0.2);
    border-color: rgba(255, 255, 255, 0.5);
    transform: translateY(-2px);
  }

  .hero-image-wrapper {
    position: relative;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
  }

  .hero-image {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s ease;
  }

  .hero-image-wrapper:hover .hero-image {
    transform: scale(1.05);
  }

  .image-gradient-overlay {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 50%;
    background: linear-gradient(to top, rgba(30, 110, 232, 0.3), transparent);
    pointer-events: none;
  }

  @media (max-width: 768px) {
    .hero-modern-component {
      padding: 4rem 0;
      min-height: 500px;
    }

    .hero-title-modern-component {
      margin-bottom: 1.25rem;
    }

    .hero-subtitle-modern-component {
      margin-bottom: 1.75rem;
    }

    .cta-primary-button,
    .cta-secondary-button {
      width: 100%;
      padding: 0.875rem 2rem;
      font-size: 1rem;
    }
  }
</style>