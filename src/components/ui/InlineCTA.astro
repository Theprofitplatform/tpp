---
/**
 * InlineCTA Component
 * Reusable inline call-to-action button with multiple style variants
 * Features gradient backgrounds, hover effects, and accessibility support
 *
 * Props:
 * - text: Button text (required)
 * - link: Target URL (required)
 * - variant: Style variant - 'primary' | 'secondary' | 'gradient' (default: 'primary')
 * - size: Size variant - 'sm' | 'md' | 'lg' (default: 'md')
 * - external: Whether link opens in new tab (default: false)
 * - ariaLabel: Optional custom aria-label for accessibility
 */

interface Props {
  text: string;
  link: string;
  variant?: 'primary' | 'secondary' | 'gradient';
  size?: 'sm' | 'md' | 'lg';
  external?: boolean;
  ariaLabel?: string;
}

const {
  text,
  link,
  variant = 'primary',
  size = 'md',
  external = false,
  ariaLabel
} = Astro.props;

// Size classes
const sizeClasses = {
  sm: 'px-6 py-2 text-sm',
  md: 'px-8 py-3 text-base',
  lg: 'px-10 py-4 text-lg'
};

// Variant classes
const variantClasses = {
  primary: 'bg-indigo-600 hover:bg-indigo-700 text-white shadow-lg hover:shadow-xl',
  secondary: 'bg-white hover:bg-gray-50 text-indigo-600 border-2 border-indigo-600 shadow-md hover:shadow-lg',
  gradient: 'bg-gradient-to-r from-indigo-600 via-purple-600 to-pink-600 hover:from-indigo-700 hover:via-purple-700 hover:to-pink-700 text-white shadow-lg hover:shadow-2xl'
};

const buttonClasses = `
  inline-flex items-center justify-center gap-2
  font-bold rounded-xl
  transition-all duration-300 transform hover:scale-105
  focus:outline-none focus:ring-4 focus:ring-indigo-300
  ${sizeClasses[size]}
  ${variantClasses[variant]}
`;

const targetProps = external ? { target: '_blank', rel: 'noopener noreferrer' } : {};
---

<div class="inline-cta-wrapper inline-block">
  <a
    href={link}
    class={buttonClasses}
    aria-label={ariaLabel || text}
    {...targetProps}
  >
    <span>{text}</span>

    <!-- Arrow Icon -->
    <svg
      class="w-5 h-5 transition-transform duration-300 group-hover:translate-x-1"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
      aria-hidden="true"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M13 7l5 5m0 0l-5 5m5-5H6"
      />
    </svg>

    {external && (
      <svg
        class="w-4 h-4 opacity-75"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        aria-hidden="true"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
        />
      </svg>
    )}
  </a>
</div>

<style>
  .inline-cta-wrapper a {
    will-change: transform;
    backface-visibility: hidden;
  }

  /* Gradient animation for gradient variant */
  .inline-cta-wrapper a:has(+ .bg-gradient-to-r) {
    background-size: 200% 200%;
    animation: gradient-shift 3s ease infinite;
  }

  @keyframes gradient-shift {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }

  /* Enhanced focus ring */
  .inline-cta-wrapper a:focus {
    outline: 3px solid #6366f1;
    outline-offset: 4px;
  }

  /* Arrow animation on hover */
  .inline-cta-wrapper a:hover svg:first-of-type {
    transform: translateX(4px);
  }

  /* Pressed state */
  .inline-cta-wrapper a:active {
    transform: scale(0.98);
  }

  /* Prevent layout shift during hover */
  .inline-cta-wrapper {
    contain: layout;
  }
</style>