# Automation System CI/CD Workflow
# Copy this file to .github/workflows/automation-tests.yml to enable

name: Automation Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'automation/**'
      - 'package.json'
      - 'vitest.config.mjs'
  pull_request:
    branches: [ main ]
    paths:
      - 'automation/**'
      - 'package.json'
      - 'vitest.config.mjs'
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test:unit:run

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          files: ./coverage/coverage-final.json
          flags: unittests
          name: codecov-umbrella

  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Validate environment example
        run: |
          if [ ! -f .env.local.example ]; then
            echo "Error: .env.local.example not found"
            exit 1
          fi
          echo "✅ Environment example file exists"

      - name: Check required files
        run: |
          required_files=(
            "automation/lib/rate-limiter.mjs"
            "automation/lib/usage-tracker.mjs"
            "automation/lib/logger.mjs"
            "automation/lib/error-handler.mjs"
            "automation/lib/content-validator.mjs"
            "automation/lib/duplicate-detector.mjs"
            "automation/data/suburbs.json"
            "vitest.config.mjs"
          )

          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              echo "❌ Missing required file: $file"
              exit 1
            fi
            echo "✅ Found: $file"
          done

  dry-run:
    name: Dry Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create dummy .env.local
        run: |
          echo "ANTHROPIC_API_KEY=sk-ant-test-key-for-validation" > .env.local
          echo "MONTHLY_API_BUDGET=100" >> .env.local

      - name: Test suburb pages (dry-run)
        run: node automation/scripts/generate-suburb-pages.mjs --dry-run

      - name: Test GBP posts (dry-run)
        run: node automation/scripts/gbp-auto-poster.mjs --dry-run

      - name: Test topic generator (dry-run)
        run: node automation/scripts/generate-topics.mjs 5 --dry-run

      - name: Test link outreach (dry-run)
        run: node automation/scripts/link-outreach.mjs --dry-run

      - name: Verify no API calls were made
        run: |
          if [ -f automation/data/api-usage.json ]; then
            echo "❌ API usage file was created during dry-run"
            exit 1
          fi
          echo "✅ No API calls were made during dry-run"

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true

      - name: Check formatting
        run: npm run format:check
        continue-on-error: true

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for exposed secrets
        run: |
          if grep -r "sk-ant-api" --exclude-dir=node_modules --exclude-dir=.git --exclude="*.example" .; then
            echo "❌ Potential API key found in code"
            exit 1
          fi
          echo "✅ No exposed secrets found"

  notify:
    name: Notify on Failure
    runs-on: ubuntu-latest
    needs: [test, validate, dry-run, lint, security]
    if: failure()

    steps:
      - name: Send notification
        run: |
          echo "Tests failed for commit ${{ github.sha }}"
          echo "View details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          # Add Slack notification here if SLACK_WEBHOOK_URL secret is set
