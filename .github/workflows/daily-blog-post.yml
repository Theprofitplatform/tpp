name: Daily Blog Post Generator

on:
  # Schedule: Monday and Thursday at 09:00 UTC (Month 1: 2 posts/week)
  # Adjust schedule based on rollout plan
  # RE-ENABLED 2025-10-19: Simplified automation scripts now available
  schedule:
    - cron: '0 9 * * 1,4'  # Monday, Thursday 9am UTC (8pm Sydney)

  # Manual trigger for testing and manual posts
  workflow_dispatch:
    inputs:
      topic_id:
        description: 'Specific topic ID to generate (optional, leave empty for auto-select)'
        required: false
        type: string

env:
  NODE_VERSION: '20'

jobs:
  generate-blog-post:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Needed for git-auto-commit-action

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üîó Build internal link map
        run: npm run blog:link-map
        continue-on-error: true  # Don't fail if link map fails (first post might not have links)

      - name: ü§ñ Generate blog post
        id: generate
        run: node automation/scripts/generate-blog-post.js
        env:
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          TOPIC_ID: ${{ github.event.inputs.topic_id }}
          GITHUB_OUTPUT: ${{ github.output }}

      - name: ‚ö° Auto-optimize SEO (A+ grade)
        run: node automation/scripts/post-process-blog.js
        continue-on-error: true  # Don't fail if post-processing has issues

      - name: ‚úÖ Validate generated content
        run: node automation/scripts/validate-content.js
        continue-on-error: false  # Fail workflow if validation fails

      - name: üîç Run plagiarism check
        run: node automation/scripts/plagiarism-check.js
        env:
          COPYSCAPE_API_KEY: ${{ secrets.COPYSCAPE_API_KEY }}
        continue-on-error: true  # Don't fail workflow if plagiarism check has issues

      - name: üì§ Commit and push blog post
        uses: stefanzweifel/git-auto-commit-action@v5
        id: commit
        with:
          commit_message: "ü§ñ Auto-publish blog post: ${{ steps.generate.outputs.title }}"
          file_pattern: 'src/content/blog/*.md automation/topic-queue.json'
          commit_user_name: "Blog Automation Bot"
          commit_user_email: "automation@theprofitplatform.com.au"
          commit_author: "Blog Automation <automation@theprofitplatform.com.au>"

      - name: üì£ Send success notification
        if: success()
        run: node automation/scripts/send-notification.js
        env:
          STATUS: 'success'
          POST_TITLE: ${{ steps.generate.outputs.title }}
          POST_URL: ${{ steps.generate.outputs.url }}
          SLUG: ${{ steps.generate.outputs.slug }}
          WORD_COUNT: ${{ steps.generate.outputs.wordcount }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_SERVER_URL: ${{ github.server_url }}

      - name: üì£ Send failure notification
        if: failure()
        run: node automation/scripts/send-notification.js
        env:
          STATUS: 'failure'
          POST_TITLE: ${{ steps.generate.outputs.title || 'Unknown' }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GMAIL_USER: ${{ secrets.GMAIL_USER }}
          GMAIL_APP_PASSWORD: ${{ secrets.GMAIL_APP_PASSWORD }}
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_SERVER_URL: ${{ github.server_url }}

      - name: üìä Workflow summary
        if: always()
        run: |
          echo "## üìù Blog Post Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.commit.outputs.changes_detected }}" == "true" ]; then
            echo "‚úÖ **Status:** Blog post generated and committed" >> $GITHUB_STEP_SUMMARY
            echo "üìÑ **Title:** ${{ steps.generate.outputs.title }}" >> $GITHUB_STEP_SUMMARY
            echo "üîó **URL:** ${{ steps.generate.outputs.url }}" >> $GITHUB_STEP_SUMMARY
            echo "üìä **Word Count:** ${{ steps.generate.outputs.wordcount }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "‚è±Ô∏è **Cloudflare Pages Build:** Check deployment status at https://dash.cloudflare.com" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Post will be live in ~5 minutes after build completes." >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è **Status:** No changes detected" >> $GITHUB_STEP_SUMMARY
          fi
