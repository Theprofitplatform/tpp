name: Security Scan

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]
  schedule:
    # Run weekly on Mondays at 9 AM Sydney time (11 PM UTC Sunday)
    - cron: '0 23 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  dependency-audit:
    name: NPM Dependency Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: audit
        run: |
          npm audit --json > audit-report.json || true
          cat audit-report.json
          
          # Check for vulnerabilities
          VULNS=$(cat audit-report.json | jq '.metadata.vulnerabilities.total')
          echo "Total vulnerabilities: $VULNS"
          echo "vulns=$VULNS" >> $GITHUB_OUTPUT
          
          if [ "$VULNS" -gt 0 ]; then
            echo "::warning::Found $VULNS vulnerabilities"
            cat audit-report.json | jq '.vulnerabilities'
          fi

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-report
          path: audit-report.json
          retention-days: 30

      - name: Comment PR with audit results
        if: github.event_name == 'pull_request' && steps.audit.outputs.vulns != '0'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const audit = JSON.parse(fs.readFileSync('audit-report.json', 'utf8'));
            const vulns = audit.metadata.vulnerabilities;
            
            const comment = `## 🔒 Security Audit Results
            
            Found **${vulns.total}** vulnerabilities:
            - Critical: ${vulns.critical}
            - High: ${vulns.high}
            - Moderate: ${vulns.moderate}
            - Low: ${vulns.low}
            
            ${vulns.total > 0 ? '⚠️ Please review and fix vulnerabilities before merging.' : '✅ No vulnerabilities found!'}
            
            Run \`npm audit fix\` to attempt automatic fixes.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  outdated-dependencies:
    name: Check Outdated Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for outdated dependencies
        id: outdated
        run: |
          npm outdated --json > outdated.json || true
          cat outdated.json
          
          # Count outdated packages
          OUTDATED=$(cat outdated.json | jq 'length')
          echo "Outdated packages: $OUTDATED"
          echo "outdated=$OUTDATED" >> $GITHUB_OUTPUT

      - name: Upload outdated report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: outdated-dependencies
          path: outdated.json
          retention-days: 30

      - name: Create summary
        run: |
          echo "## 📦 Dependency Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.outdated.outputs.outdated }}" -gt 0 ]; then
            echo "⚠️ Found ${{ steps.outdated.outputs.outdated }} outdated packages" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Run \`npm outdated\` locally to see details." >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ All dependencies are up to date!" >> $GITHUB_STEP_SUMMARY
          fi

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --json --out licenses.json || true
          npx license-checker --summary

      - name: Upload license report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: license-report
          path: licenses.json
          retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [dependency-audit, secret-scan, outdated-dependencies, license-check]
    if: always()
    
    steps:
      - name: Create security summary
        run: |
          echo "## 🔒 Security Scan Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Audit | ${{ needs.dependency-audit.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scanning | ${{ needs.secret-scan.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Outdated Check | ${{ needs.outdated-dependencies.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Check | ${{ needs.license-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed reports in the workflow artifacts." >> $GITHUB_STEP_SUMMARY
